{"speakers": [{"speaker": "SPEAKER_00", "timestamp": [0.0, 2.0], "text": " Hey everybody, good afternoon."}, {"speaker": "SPEAKER_00", "timestamp": [2.0, 6.0], "text": " This is Duffy Cooley coming at you with this week in"}, {"speaker": "SPEAKER_00", "timestamp": [6.0, 10.0], "text": " cloud native episode three. I'm glad you're here and I'm"}, {"speaker": "SPEAKER_00", "timestamp": [10.0, 14.0], "text": " really excited about this next episode. So."}, {"speaker": "SPEAKER_00", "timestamp": [14.0, 17.0], "text": " Let's dig into it and see what's happening this week."}, {"speaker": "SPEAKER_00", "timestamp": [17.0, 21.0], "text": " If you're here on the chat, go ahead and say hello."}, {"speaker": "SPEAKER_00", "timestamp": [21.0, 28.22], "text": " I'd love to. I'd love to, you know, see you here every week as we're going through this process."}, {"speaker": "SPEAKER_00", "timestamp": [28.82, 30.54], "text": " So I'd love to know that you're here."}, {"speaker": "SPEAKER_00", "timestamp": [30.62, 32.84], "text": " The only way I know that that's happening is if you're in the chat."}, {"speaker": "SPEAKER_00", "timestamp": [33.0, 34.46], "text": " So if you're here, check in."}, {"speaker": "SPEAKER_00", "timestamp": [35.6, 38.36], "text": " I'd love to see folks showing up here."}, {"speaker": "SPEAKER_00", "timestamp": [40.0, 40.7], "text": " All right."}, {"speaker": "SPEAKER_00", "timestamp": [42.86, 47.06], "text": " The next thing I have for you today is this page,"}, {"speaker": "SPEAKER_00", "timestamp": [47.14, 50.38], "text": " which is kind of our weekly thing where we're going to keep,"}, {"speaker": "SPEAKER_00", "timestamp": [50.46, 56.0], "text": " I'm keeping notes on stuff that is exciting that happens during the week"}, {"speaker": "SPEAKER_00", "timestamp": [56.0, 59.94], "text": " or during the last two weeks in cloud native space."}, {"speaker": "SPEAKER_00", "timestamp": [60.08, 70.1], "text": " And if there's anything that you would like me to cover, you can always just go to hackmd.io slash at TWICN,"}, {"speaker": "SPEAKER_00", "timestamp": [70.1, 71.48], "text": " this week in Cloud Native,"}, {"speaker": "SPEAKER_00", "timestamp": [71.48, 75.78], "text": " and put in a note for me and I'll read it to you live on screen."}, {"speaker": "SPEAKER_00", "timestamp": [75.78, 77.6], "text": " That's my plan for every week."}, {"speaker": "SPEAKER_00", "timestamp": [77.6, 79.84], "text": " If you see anything that's interesting,"}, {"speaker": "SPEAKER_00", "timestamp": [79.84, 81.82], "text": " you can either just shout out to me on Twitter,"}, {"speaker": "SPEAKER_00", "timestamp": [81.82, 84.9], "text": " or you can put it in the HackMD notes and I"}, {"speaker": "SPEAKER_00", "timestamp": [84.9, 93.92], "text": " will cover it every week and this episode for this week's update I wanted"}, {"speaker": "SPEAKER_00", "timestamp": [93.92, 98.76], "text": " to talk about what's coming let's see here we have one of the changes that I"}, {"speaker": "SPEAKER_00", "timestamp": [98.76, 102.84], "text": " saw on YouTube which I was pretty excited about was this one here where we"}, {"speaker": "SPEAKER_00", "timestamp": [102.84, 105.58], "text": " have playlists and there are playlists for every show"}, {"speaker": "SPEAKER_00", "timestamp": [105.58, 110.56], "text": " and so if you want if you missed your episode with Siam or with Maddie or"}, {"speaker": "SPEAKER_00", "timestamp": [111.32, 113.68], "text": " Leo Leonardo or any of these other folks"}, {"speaker": "SPEAKER_00", "timestamp": [114.06, 121.08], "text": " You can go ahead and just either subscribe directly to that playlist or you can go back and watch what watch the"}, {"speaker": "SPEAKER_00", "timestamp": [121.76, 125.12], "text": " Episode that happened while you were away away but each of the channels seems to"}, {"speaker": "SPEAKER_00", "timestamp": [125.12, 132.72], "text": " have their own playlist associated there and that's pretty exciting so there's new content"}, {"speaker": "SPEAKER_00", "timestamp": [132.72, 139.44], "text": " every day of the week uh this week tim banks was hosting sydney miller uh one of the just"}, {"speaker": "SPEAKER_00", "timestamp": [139.44, 145.44], "text": " incredibly awesome people in tech and this is talking about sydney's journey into tech and how she's helping"}, {"speaker": "SPEAKER_00", "timestamp": [145.44, 150.96], "text": " uh others kind of along that same path uh sydney works at equinix metal and it was really a i think"}, {"speaker": "SPEAKER_00", "timestamp": [150.96, 155.68], "text": " it's a pretty good episode that happened earlier today check that one out cloud native latinx with"}, {"speaker": "SPEAKER_00", "timestamp": [155.68, 160.72], "text": " leonardo murillo all about the community we'll have best guests from various latin american"}, {"speaker": "SPEAKER_00", "timestamp": [160.72, 166.44], "text": " countries showing challenges opportunities and value in building a community in Latin America come check it out"}, {"speaker": "SPEAKER_00", "timestamp": [167.72, 173.58], "text": " CNCF face-off is kind of a game show hosted by Maddie and if you're interested in"}, {"speaker": "SPEAKER_00", "timestamp": [174.16, 178.28], "text": " you know kind of participating in that it should be super fun and"}, {"speaker": "SPEAKER_00", "timestamp": [179.18, 182.72], "text": " Matt Stratton will be hosting it if you want to be a part of it"}, {"speaker": "SPEAKER_00", "timestamp": [182.72, 185.48], "text": " You can actually just follow this link and it will take you to a form"}, {"speaker": "SPEAKER_00", "timestamp": [185.48, 188.82], "text": " where you can pick your team,"}, {"speaker": "SPEAKER_00", "timestamp": [189.06, 191.5], "text": " what you want that team to be called,"}, {"speaker": "SPEAKER_00", "timestamp": [191.62, 192.42], "text": " all that good stuff,"}, {"speaker": "SPEAKER_00", "timestamp": [192.7, 195.06], "text": " and then participate in the show."}, {"speaker": "SPEAKER_00", "timestamp": [195.38, 197.36], "text": " And so I think that'll really be fun."}, {"speaker": "SPEAKER_00", "timestamp": [198.2, 200.46], "text": " Like I said, Siam's doing Search Magic,"}, {"speaker": "SPEAKER_00", "timestamp": [200.68, 203.74], "text": " all about the different certified Kubernetes certifications."}, {"speaker": "SPEAKER_00", "timestamp": [204.28, 206.24], "text": " We have Spotlight Live with Dan certifications we have spotlight live with dan"}, {"speaker": "SPEAKER_00", "timestamp": [206.24, 210.88], "text": " pop we have lgtm with rock code he just did one on prometheus was really fun kind of getting from"}, {"speaker": "SPEAKER_00", "timestamp": [210.88, 220.0], "text": " my data commit on that 100 days with anais anise and um cloud native classroom with kat costgrove"}, {"speaker": "SPEAKER_00", "timestamp": [220.0, 225.04], "text": " i think she just did uh, if I remember correctly."}, {"speaker": "SPEAKER_00", "timestamp": [227.22, 227.42], "text": " And then Fields tested with Kaslan."}, {"speaker": "SPEAKER_00", "timestamp": [229.0, 229.12], "text": " So definitely check those shows out."}, {"speaker": "SPEAKER_00", "timestamp": [231.2, 232.18], "text": " They're happening right here on Cloud Native TV."}, {"speaker": "SPEAKER_00", "timestamp": [236.5, 236.9], "text": " Please subscribe to this show, I mean, to this channel on Twitch."}, {"speaker": "SPEAKER_00", "timestamp": [239.44, 239.68], "text": " You should see a subscribe button down around there somewhere."}, {"speaker": "SPEAKER_00", "timestamp": [240.82, 241.26], "text": " Go ahead and click that button."}, {"speaker": "SPEAKER_00", "timestamp": [243.08, 245.78], "text": " Get notified whenever we're online. There'll always be something interesting happening."}, {"speaker": "SPEAKER_00", "timestamp": [247.0, 250.5], "text": " In the Kubernetes space, one of the exciting announcements"}, {"speaker": "SPEAKER_00", "timestamp": [250.5, 257.78], "text": " is that this early bird pricing, which is about $650 off of the on-site pricing"}, {"speaker": "SPEAKER_00", "timestamp": [257.78, 262.4], "text": " and $200 off the standard pricing, is ending July 4th."}, {"speaker": "SPEAKER_00", "timestamp": [262.4, 266.66], "text": " So if you want to get that pricing, get it done now. You"}, {"speaker": "SPEAKER_00", "timestamp": [266.66, 272.38], "text": " can save a bunch of money. Either as a corporate or an individual, you can save, you know,"}, {"speaker": "SPEAKER_00", "timestamp": [272.38, 275.5], "text": " not quite as much money, but you can definitely save a bunch of money. So definitely check"}, {"speaker": "SPEAKER_00", "timestamp": [275.5, 285.46], "text": " that one out. So July 5th, the sale ends July 5th. So definitely want to make that happen one of the"}, {"speaker": "SPEAKER_00", "timestamp": [285.46, 288.5], "text": " other commits I saw happen in the kubernetes community this week which I"}, {"speaker": "SPEAKER_00", "timestamp": [288.5, 293.34], "text": " thought was pretty exciting to me anyway was the cube ADM now runs as not root"}, {"speaker": "SPEAKER_00", "timestamp": [293.34, 297.84], "text": " and this is part of a cap but let's take a look at the commit it's kind of an"}, {"speaker": "SPEAKER_00", "timestamp": [297.84, 305.0], "text": " exciting commit so this is actually the cap right here."}, {"speaker": "SPEAKER_00", "timestamp": [305.0, 308.0], "text": " It's a bunch of work by Vinay."}, {"speaker": "SPEAKER_00", "timestamp": [309.26, 313.32], "text": " What this represents is a change in the way that we"}, {"speaker": "SPEAKER_00", "timestamp": [313.32, 317.02], "text": " operate the static pod manifests and other things run by"}, {"speaker": "SPEAKER_00", "timestamp": [317.02, 320.28], "text": " QBDM in such a way that they are significantly more secure."}, {"speaker": "SPEAKER_00", "timestamp": [320.28, 321.48], "text": " They're running as not root."}, {"speaker": "SPEAKER_00", "timestamp": [321.48, 323.9], "text": " All of the capabilities have been dropped other than"}, {"speaker": "SPEAKER_00", "timestamp": [323.9, 327.42], "text": " the ones that are necessary for that application to run."}, {"speaker": "SPEAKER_00", "timestamp": [327.42, 330.8], "text": " If you're interested in this work or you want to read"}, {"speaker": "SPEAKER_00", "timestamp": [330.8, 332.86], "text": " through what's happened or what the changes are,"}, {"speaker": "SPEAKER_00", "timestamp": [332.86, 335.72], "text": " definitely check these issues out."}, {"speaker": "SPEAKER_00", "timestamp": [335.72, 338.16], "text": " I was thinking about for our playtime,"}, {"speaker": "SPEAKER_00", "timestamp": [338.16, 340.78], "text": " I would explore rootless kubedm,"}, {"speaker": "SPEAKER_00", "timestamp": [340.78, 344.94], "text": " but I don't think I quite have the right setup for that today."}, {"speaker": "SPEAKER_00", "timestamp": [344.94, 347.42], "text": " I'm probably going to explore something else in that space,"}, {"speaker": "SPEAKER_00", "timestamp": [347.42, 348.98], "text": " but maybe not that."}, {"speaker": "SPEAKER_00", "timestamp": [348.98, 351.22], "text": " But maybe on the next episode,"}, {"speaker": "SPEAKER_00", "timestamp": [351.22, 352.78], "text": " if I have a little bit more time to set up,"}, {"speaker": "SPEAKER_00", "timestamp": [352.78, 354.76], "text": " I might set that one up because I'm actually"}, {"speaker": "SPEAKER_00", "timestamp": [354.76, 357.06], "text": " interested in seeing how that's going."}, {"speaker": "SPEAKER_00", "timestamp": [357.06, 359.44], "text": " It should be a really fun one."}, {"speaker": "SPEAKER_00", "timestamp": [359.56, 362.64], "text": " So rootless kubedm,"}, {"speaker": "SPEAKER_00", "timestamp": [362.64, 364.72], "text": " that means your control plane,"}, {"speaker": "SPEAKER_00", "timestamp": [364.72, 368.72], "text": " your scheduler, your kube proxy,"}, {"speaker": "SPEAKER_00", "timestamp": [368.72, 372.44], "text": " all of those components running rootless and as a user that is not root."}, {"speaker": "SPEAKER_00", "timestamp": [372.44, 375.46], "text": " That way, if by some chance somebody were to"}, {"speaker": "SPEAKER_00", "timestamp": [375.46, 379.88], "text": " exploit one of those control plane components inside of your cluster,"}, {"speaker": "SPEAKER_00", "timestamp": [379.88, 382.72], "text": " they wouldn't be able to actually take over the cluster,"}, {"speaker": "SPEAKER_00", "timestamp": [382.72, 384.8], "text": " which is actually pretty cool."}, {"speaker": "SPEAKER_00", "timestamp": [386.44, 387.72], "text": " Hey, we got people checking in."}, {"speaker": "SPEAKER_00", "timestamp": [388.1, 389.62], "text": " Let's see who these folks are."}, {"speaker": "SPEAKER_00", "timestamp": [391.34, 391.52], "text": " Yes."}, {"speaker": "SPEAKER_00", "timestamp": [391.52, 392.06], "text": " Some OMI."}, {"speaker": "SPEAKER_00", "timestamp": [393.12, 393.86], "text": " Hello."}, {"speaker": "SPEAKER_00", "timestamp": [393.98, 394.58], "text": " Good to see you."}, {"speaker": "SPEAKER_00", "timestamp": [395.18, 401.32], "text": " What was kind doing when running QBDM before, ah, in kinds project, actually"}, {"speaker": "SPEAKER_00", "timestamp": [401.32, 405.28], "text": " in my, in my playtime, I'm going going to show that but the way that kind was doing it was"}, {"speaker": "SPEAKER_00", "timestamp": [405.28, 413.36], "text": " um leveraging uh just regular cube adm inside of a root container so kind in itself under no"}, {"speaker": "SPEAKER_00", "timestamp": [413.36, 418.4], "text": " circumstances is to be considered like secure right because like you're running privileged"}, {"speaker": "SPEAKER_00", "timestamp": [418.4, 423.28], "text": " containers on your host that have that have significant privilege otherwise we wouldn't"}, {"speaker": "SPEAKER_00", "timestamp": [423.28, 425.94], "text": " be able to extend containers and that sort of stuff."}, {"speaker": "SPEAKER_00", "timestamp": [425.94, 429.98], "text": " Now there is some change happening inside of the kind project"}, {"speaker": "SPEAKER_00", "timestamp": [429.98, 431.5], "text": " that would enable rootless mode."}, {"speaker": "SPEAKER_00", "timestamp": [431.5, 434.54], "text": " In fact, I've seen one of the heroes of rootless,"}, {"speaker": "SPEAKER_00", "timestamp": [434.54, 437.64], "text": " one of the heroes, no pun intended, of rootless mode"}, {"speaker": "SPEAKER_00", "timestamp": [437.64, 439.8], "text": " in the project working on just exactly that."}, {"speaker": "SPEAKER_00", "timestamp": [439.8, 444.8], "text": " Akihiro has been working on implementing rootless kind."}, {"speaker": "SPEAKER_00", "timestamp": [445.18, 446.52], "text": " So that'll be'll be exciting."}, {"speaker": "SPEAKER_00", "timestamp": [446.52, 449.76], "text": " I imagine this work overlaps or at least relates,"}, {"speaker": "SPEAKER_00", "timestamp": [449.76, 452.8], "text": " but I haven't looked at it too closely yet."}, {"speaker": "SPEAKER_00", "timestamp": [454.9, 458.42], "text": " Pretty exciting stuff."}, {"speaker": "SPEAKER_00", "timestamp": [459.36, 462.04], "text": " Later on, I'm going to actually show like pulling"}, {"speaker": "SPEAKER_00", "timestamp": [462.04, 463.94], "text": " the commit that is interview"}, {"speaker": "SPEAKER_00", "timestamp": [463.94, 468.6], "text": " and then showing how to build that commit and then showing how to run that commit in kind."}, {"speaker": "SPEAKER_00", "timestamp": [468.78, 470.92], "text": " We'll take a look at how it's working in just a minute."}, {"speaker": "SPEAKER_00", "timestamp": [473.32, 480.6], "text": " One of the podcasts this week was a Kubernetes podcast 152 with Craig Box talking about SRE for everyone else."}, {"speaker": "SPEAKER_00", "timestamp": [481.16, 484.58], "text": " If you haven't checked out the Kubernetes podcast, it's probably worth checking out."}, {"speaker": "SPEAKER_00", "timestamp": [484.68, 487.84], "text": " It's a pretty decent podcast. They've always got some really good stuff happening inside of"}, {"speaker": "SPEAKER_00", "timestamp": [487.84, 501.18], "text": " that space. And then also the recent TGIK, TGIK 158 was hosted by Nadir and Jason DeTiberis,"}, {"speaker": "SPEAKER_00", "timestamp": [501.8, 505.92], "text": " who are good friends of mine, who I worked with at CoreOS, or sorry, at Heptio."}, {"speaker": "SPEAKER_00", "timestamp": [505.92, 509.5], "text": " They did a whole episode on Cluster API with Tinkerbell."}, {"speaker": "SPEAKER_00", "timestamp": [509.5, 512.5], "text": " If you're interested in Tinkerbell or Cluster API or how you"}, {"speaker": "SPEAKER_00", "timestamp": [512.5, 515.94], "text": " mash these words together, definitely check out that episode."}, {"speaker": "SPEAKER_00", "timestamp": [515.94, 518.5], "text": " It's TGIK 158."}, {"speaker": "SPEAKER_00", "timestamp": [520.08, 523.44], "text": " Now, one of the things I wanted to share with you is that a lot of"}, {"speaker": "SPEAKER_00", "timestamp": [523.44, 527.1], "text": " the information that I get for the news every week, I get from here."}, {"speaker": "SPEAKER_00", "timestamp": [527.1, 532.88], "text": " I'd love to get more information from you all as well, but what I normally get my news"}, {"speaker": "SPEAKER_00", "timestamp": [532.88, 539.24], "text": " from is things like Cube Weekly, which is a newsletter put together by my fellow ambassadors,"}, {"speaker": "SPEAKER_00", "timestamp": [539.24, 544.88], "text": " and they gather things like headlines, what's happening inside of the CNCF programs that"}, {"speaker": "SPEAKER_00", "timestamp": [544.88, 546.36], "text": " are coming this week."}, {"speaker": "SPEAKER_00", "timestamp": [546.36, 550.24], "text": " We got a great question by Emily Fox talking about"}, {"speaker": "SPEAKER_00", "timestamp": [550.24, 553.32], "text": " the security tag working on a serverless security paper,"}, {"speaker": "SPEAKER_00", "timestamp": [553.32, 555.22], "text": " which will be a really interesting one."}, {"speaker": "SPEAKER_00", "timestamp": [556.56, 558.44], "text": " We have some technical papers,"}, {"speaker": "SPEAKER_00", "timestamp": [558.44, 560.5], "text": " handling auth and EKS clusters,"}, {"speaker": "SPEAKER_00", "timestamp": [560.5, 563.1], "text": " running HAProxy Kubernetes ingress controller"}, {"speaker": "SPEAKER_00", "timestamp": [563.1, 567.98], "text": " outside of your Kubernetes cluster."}, {"speaker": "SPEAKER_00", "timestamp": [570.56, 573.4], "text": " How to build a Helm plugin in minutes and avoiding Kubernetes cluster outages"}, {"speaker": "SPEAKER_00", "timestamp": [573.4, 574.44], "text": " with synthetic monitoring."}, {"speaker": "SPEAKER_00", "timestamp": [574.66, 575.58], "text": " I haven't looked at that one yet."}, {"speaker": "SPEAKER_00", "timestamp": [575.64, 576.34], "text": " That looks pretty interesting."}, {"speaker": "SPEAKER_00", "timestamp": [576.76, 578.9], "text": " But there's a bunch of different really great articles,"}, {"speaker": "SPEAKER_00", "timestamp": [579.04, 579.72], "text": " including this one,"}, {"speaker": "SPEAKER_00", "timestamp": [579.76, 581.32], "text": " which I also thought about playing with."}, {"speaker": "SPEAKER_00", "timestamp": [581.32, 584.22], "text": " How to monitor Kubernetes costs with Lens IDE."}, {"speaker": "SPEAKER_00", "timestamp": [584.62, 586.12], "text": " If you haven't heard about the lens IDE"}, {"speaker": "SPEAKER_00", "timestamp": [586.12, 589.22], "text": " It's another open source IDE for kubernetes"}, {"speaker": "SPEAKER_00", "timestamp": [589.88, 591.7], "text": " And it's actually pretty cool"}, {"speaker": "SPEAKER_00", "timestamp": [591.7, 596.98], "text": " So Justin reminding us all that if you're going to be at the participant at the contributors summit"}, {"speaker": "SPEAKER_00", "timestamp": [597.18, 602.5], "text": " It or you're going to come to Los Angeles to be a part of kubecon"}, {"speaker": "SPEAKER_00", "timestamp": [602.5, 605.88], "text": " And you want to go to Disneyland as part of that trip,"}, {"speaker": "SPEAKER_00", "timestamp": [606.46, 608.18], "text": " you should definitely join"}, {"speaker": "SPEAKER_00", "timestamp": [608.18, 610.14], "text": " all of us together going to Disneyland"}, {"speaker": "SPEAKER_00", "timestamp": [610.14, 612.48], "text": " and we call it KubeLand."}, {"speaker": "SPEAKER_00", "timestamp": [612.68, 614.08], "text": " We did this back in"}, {"speaker": "SPEAKER_00", "timestamp": [614.08, 615.6], "text": " San Diego before the pandemic"}, {"speaker": "SPEAKER_00", "timestamp": [615.6, 617.68], "text": " and it was really a lot of fun."}, {"speaker": "SPEAKER_00", "timestamp": [618.7, 620.1], "text": " But definitely, if that's"}, {"speaker": "SPEAKER_00", "timestamp": [620.1, 621.68], "text": " something that's interesting to you, check that out."}, {"speaker": "SPEAKER_00", "timestamp": [621.88, 623.22], "text": " It's got a form to add yourself"}, {"speaker": "SPEAKER_00", "timestamp": [623.22, 626.78], "text": " and there's no discounts or anything but like it's a great way of"}, {"speaker": "SPEAKER_00", "timestamp": [626.78, 630.76], "text": " like you know hanging out with folks in the community in a place that is totally"}, {"speaker": "SPEAKER_00", "timestamp": [630.76, 637.52], "text": " unrelated to kubernetes and then we have the SS the editorial articles here's one"}, {"speaker": "SPEAKER_00", "timestamp": [637.52, 642.02], "text": " that I pulled out which was a Craig Craig box talking to Steve McGee talking"}, {"speaker": "SPEAKER_00", "timestamp": [642.02, 648.3], "text": " about s re for everyone else thought that was a really good one."}, {"speaker": "SPEAKER_00", "timestamp": [651.88, 654.8], "text": " Another article on CKA and CKAD certification."}, {"speaker": "SPEAKER_00", "timestamp": [657.84, 658.52], "text": " Git Ops for RabbitMQ with Alexis Richardson."}, {"speaker": "SPEAKER_00", "timestamp": [660.18, 661.42], "text": " I mean, that's a really interesting one."}, {"speaker": "SPEAKER_00", "timestamp": [662.5, 662.62], "text": " RabbitMQ and Git Ops."}, {"speaker": "SPEAKER_00", "timestamp": [663.7, 663.78], "text": " I'm surprised by that."}, {"speaker": "SPEAKER_00", "timestamp": [664.8, 665.44], "text": " I guess we'll see how that goes."}, {"speaker": "SPEAKER_00", "timestamp": [665.44, 667.24], "text": " It'll be kind of a fun one to play through."}, {"speaker": "SPEAKER_00", "timestamp": [667.24, 669.46], "text": " And then Alex Ellis wrote a book on Golang."}, {"speaker": "SPEAKER_00", "timestamp": [669.46, 672.48], "text": " And Alex is incredibly transparent about things"}, {"speaker": "SPEAKER_00", "timestamp": [672.48, 673.52], "text": " that are happening."}, {"speaker": "SPEAKER_00", "timestamp": [673.52, 675.3], "text": " And so if you're curious about how that goes,"}, {"speaker": "SPEAKER_00", "timestamp": [675.3, 677.88], "text": " like what he went through to write that book,"}, {"speaker": "SPEAKER_00", "timestamp": [677.88, 682.06], "text": " and how that's actually working in the space or not,"}, {"speaker": "SPEAKER_00", "timestamp": [682.06, 683.24], "text": " definitely check that out."}, {"speaker": "SPEAKER_00", "timestamp": [683.24, 686.3], "text": " I think it would be a good read if that's something"}, {"speaker": "SPEAKER_00", "timestamp": [686.3, 687.38], "text": " you're interested in."}, {"speaker": "SPEAKER_00", "timestamp": [692.24, 692.96], "text": " All right."}, {"speaker": "SPEAKER_00", "timestamp": [696.14, 698.84], "text": " Upcoming Cloud Native Live, Improving the Kubernetes"}, {"speaker": "SPEAKER_00", "timestamp": [698.84, 702.8], "text": " Experiencing, Eliminating Toil and Tribal Knowledge"}, {"speaker": "SPEAKER_00", "timestamp": [702.8, 706.06], "text": " with Billy Kleek at DigitalOcean."}, {"speaker": "SPEAKER_00", "timestamp": [706.5, 711.14], "text": " And then an on-demand webinar, again, talking about Lens and that sort of stuff by Morantis."}, {"speaker": "SPEAKER_00", "timestamp": [711.46, 712.16], "text": " Pretty neat stuff."}, {"speaker": "SPEAKER_00", "timestamp": [716.06, 717.42], "text": " Kubernetes CVEs."}, {"speaker": "SPEAKER_00", "timestamp": [717.82, 720.78], "text": " I'm not sure that everybody knows about this group."}, {"speaker": "SPEAKER_00", "timestamp": [720.92, 725.32], "text": " But if you don't know about this group and this is a space that you're interested in, you should know about this group."}, {"speaker": "SPEAKER_00", "timestamp": [725.32, 728.36], "text": " This is just one of the many Kubernetes groups"}, {"speaker": "SPEAKER_00", "timestamp": [728.36, 729.4], "text": " that are out there."}, {"speaker": "SPEAKER_00", "timestamp": [729.4, 732.22], "text": " This one is Kubernetes Security Announce."}, {"speaker": "SPEAKER_00", "timestamp": [732.22, 735.56], "text": " And every time there's a CVE or some other interesting thing"}, {"speaker": "SPEAKER_00", "timestamp": [735.56, 739.4], "text": " that's being fixed inside of Kubernetes related to security,"}, {"speaker": "SPEAKER_00", "timestamp": [739.4, 741.18], "text": " you're gonna see an announcement here"}, {"speaker": "SPEAKER_00", "timestamp": [741.18, 742.72], "text": " that gives an overview of what it is,"}, {"speaker": "SPEAKER_00", "timestamp": [742.72, 744.26], "text": " what the advisory is about."}, {"speaker": "SPEAKER_00", "timestamp": [746.04, 751.88], "text": " And typically there may be some discussion related to that particular issue inside of"}, {"speaker": "SPEAKER_00", "timestamp": [751.88, 757.26], "text": " the mailing list as well. So if you want to be a part of this mailing list, all you got to do"}, {"speaker": "SPEAKER_00", "timestamp": [757.26, 767.28], "text": " is click on that link, the security announce group, and click join group. and then you'll be able to you know you can kind of pick how often you get"}, {"speaker": "SPEAKER_00", "timestamp": [767.28, 773.28], "text": " spammed it can be on every notification it can be a digest it's up to you how you do it but"}, {"speaker": "SPEAKER_00", "timestamp": [773.28, 777.68], "text": " definitely a good one to watch out for if security inside of kubernetes is something that you're"}, {"speaker": "SPEAKER_00", "timestamp": [778.56, 789.18], "text": " that's on your mind one of the other things from the community i saw is this CNCF end user community providing"}, {"speaker": "SPEAKER_00", "timestamp": [789.18, 793.3], "text": " insights into Kubernetes cluster management with technology radar."}, {"speaker": "SPEAKER_00", "timestamp": [793.3, 798.64], "text": " And so this is a pretty good article talking about like how folks are managing their Kubernetes"}, {"speaker": "SPEAKER_00", "timestamp": [798.64, 800.88], "text": " clusters and what tooling and stuff."}, {"speaker": "SPEAKER_00", "timestamp": [800.88, 803.46], "text": " And this is a pretty interesting one."}, {"speaker": "SPEAKER_00", "timestamp": [803.46, 806.9], "text": " It's one of the first things I've seen come out of the user group,"}, {"speaker": "SPEAKER_00", "timestamp": [806.9, 809.0], "text": " the CNCF user group."}, {"speaker": "SPEAKER_00", "timestamp": [809.0, 813.0], "text": " So I think that's a pretty good one."}, {"speaker": "SPEAKER_00", "timestamp": [813.0, 816.5], "text": " So definitely check that out if you're interested."}, {"speaker": "SPEAKER_00", "timestamp": [816.5, 819.5], "text": " And then it's playtime."}, {"speaker": "SPEAKER_00", "timestamp": [819.5, 828.1], "text": " So today for playtime, my plan was to set up an environment from scratch and find"}, {"speaker": "SPEAKER_00", "timestamp": [828.1, 832.94], "text": " an issue that has not yet been merged, something super simple,"}, {"speaker": "SPEAKER_00", "timestamp": [832.94, 838.44], "text": " and then show how to build that commit and then test"}, {"speaker": "SPEAKER_00", "timestamp": [838.44, 842.28], "text": " that commit according to what the issue describes,"}, {"speaker": "SPEAKER_00", "timestamp": [842.28, 846.32], "text": " and work through that end-to- end right so that was that was my"}, {"speaker": "SPEAKER_00", "timestamp": [846.32, 851.6], "text": " goal for today kind of help you get your environment set up work through like what it looks"}, {"speaker": "SPEAKER_00", "timestamp": [851.6, 857.2], "text": " like to actually test a commit and show that the commit changes what it says is going to change"}, {"speaker": "SPEAKER_00", "timestamp": [857.2, 865.18], "text": " and that was my goal and i figure we can do that in about 45 minutes but let's see what we can accomplish."}, {"speaker": "SPEAKER_00", "timestamp": [866.76, 870.1], "text": " The commit I picked actually is like I said,"}, {"speaker": "SPEAKER_00", "timestamp": [870.1, 872.5], "text": " it was going for something really super simple."}, {"speaker": "SPEAKER_00", "timestamp": [872.5, 875.92], "text": " Not this one. That's not a super simple one. There we go."}, {"speaker": "SPEAKER_00", "timestamp": [875.92, 882.5], "text": " This is an open issue and it looks like this person had found"}, {"speaker": "SPEAKER_00", "timestamp": [882.5, 885.68], "text": " a leftover word alpha"}, {"speaker": "SPEAKER_00", "timestamp": [885.68, 889.74], "text": " in a Kubatium help command"}, {"speaker": "SPEAKER_00", "timestamp": [890.18, 893.5], "text": " and went ahead and put in the fix basically to"}, {"speaker": "SPEAKER_00", "timestamp": [893.5, 896.36], "text": " remove the word alpha from the Kubatium help command."}, {"speaker": "SPEAKER_00", "timestamp": [896.36, 899.82], "text": " What I want to show is how to actually get,"}, {"speaker": "SPEAKER_00", "timestamp": [899.82, 902.84], "text": " first I want to work through the UI here a little bit so we can"}, {"speaker": "SPEAKER_00", "timestamp": [902.84, 907.6], "text": " actually understand where this commit is in time or where other commits are in time."}, {"speaker": "SPEAKER_00", "timestamp": [907.6, 908.92], "text": " I want to show you that stuff."}, {"speaker": "SPEAKER_00", "timestamp": [908.92, 911.88], "text": " Then I'm going to show you how to set up an environment in which we can actually"}, {"speaker": "SPEAKER_00", "timestamp": [911.88, 915.32], "text": " test that this commit changes what it expected to change."}, {"speaker": "SPEAKER_00", "timestamp": [915.32, 918.28], "text": " This is a super simple example,"}, {"speaker": "SPEAKER_00", "timestamp": [918.28, 920.88], "text": " but I think it'll give you the tools to test"}, {"speaker": "SPEAKER_00", "timestamp": [920.88, 926.9], "text": " a more complex example if you choose to do so yourself so first thing"}, {"speaker": "SPEAKER_00", "timestamp": [926.9, 930.96], "text": " I wanted to show you was like this page here so if you if you have a commit"}, {"speaker": "SPEAKER_00", "timestamp": [930.96, 934.96], "text": " that's been committed like this one here it's been merged right then what you can"}, {"speaker": "SPEAKER_00", "timestamp": [934.96, 939.72], "text": " do is you can actually click on the commit link down here which is a commit"}, {"speaker": "SPEAKER_00", "timestamp": [939.72, 943.96], "text": " hash and now you're looking at the actual commit that is represented inside"}, {"speaker": "SPEAKER_00", "timestamp": [943.96, 945.04], "text": " of the code base"}, {"speaker": "SPEAKER_00", "timestamp": [945.04, 951.84], "text": " and one of the questions that people frequently ask is where in time is this commit"}, {"speaker": "SPEAKER_00", "timestamp": [953.04, 959.36], "text": " right is this commit i mean it's clearly been merged to master but is it also part of a branch"}, {"speaker": "SPEAKER_00", "timestamp": [959.36, 969.26], "text": " or a tag or anything else like that and the reason i'm taking you to this page right if you look at the commit you can actually see what branches and tags it"}, {"speaker": "SPEAKER_00", "timestamp": [969.26, 975.42], "text": " is associated with right so right as a moment it's on master and there are"}, {"speaker": "SPEAKER_00", "timestamp": [975.42, 981.88], "text": " there's no branch but it is associated with the tag v122 dash beta 0 which mean"}, {"speaker": "SPEAKER_00", "timestamp": [981.88, 985.58], "text": " I think is the top of tree right now we. We could go look, but if you're ever"}, {"speaker": "SPEAKER_00", "timestamp": [985.58, 990.2], "text": " wondering whether a commit, if you've narrowed the problem that you have down to a single commit,"}, {"speaker": "SPEAKER_00", "timestamp": [990.2, 997.08], "text": " and you want to see if that commit is part of a particular release or has made it or has been"}, {"speaker": "SPEAKER_00", "timestamp": [997.08, 1001.56], "text": " backported or any of those things, this is the way that you find that out, right? You can find"}, {"speaker": "SPEAKER_00", "timestamp": [1001.56, 1006.22], "text": " the commit that you're looking at, click on the commit itself, and then look down here"}, {"speaker": "SPEAKER_00", "timestamp": [1006.22, 1008.2], "text": " in this description, and it will tell you"}, {"speaker": "SPEAKER_00", "timestamp": [1008.2, 1010.1], "text": " exactly where it is in time."}, {"speaker": "SPEAKER_00", "timestamp": [1010.1, 1011.74], "text": " So this has been committed to master."}, {"speaker": "SPEAKER_00", "timestamp": [1011.74, 1013.5], "text": " And because it's been committed to master,"}, {"speaker": "SPEAKER_00", "timestamp": [1013.5, 1015.9], "text": " it's also been committed to this tag."}, {"speaker": "SPEAKER_00", "timestamp": [1015.9, 1019.92], "text": " So let's take another one."}, {"speaker": "SPEAKER_00", "timestamp": [1019.92, 1020.64], "text": " Let's see."}, {"speaker": "SPEAKER_00", "timestamp": [1020.64, 1023.14], "text": " Closed."}, {"speaker": "SPEAKER_00", "timestamp": [1023.14, 1024.22], "text": " Actually, you know what?"}, {"speaker": "SPEAKER_00", "timestamp": [1024.22, 1026.0], "text": " It'd probably be easier to go with the actual"}, {"speaker": "SPEAKER_00", "timestamp": [1026.0, 1031.76], "text": " commits right so let's take a look at"}, {"speaker": "SPEAKER_00", "timestamp": [1034.38, 1048.78], "text": " this one so this commit is a fix to fix affinity node node port timeout and if we look at the actual"}, {"speaker": "SPEAKER_00", "timestamp": [1048.78, 1052.72], "text": " commit we can see that it's actually just in master let's scroll down let's go"}, {"speaker": "SPEAKER_00", "timestamp": [1052.72, 1055.56], "text": " like way down"}, {"speaker": "SPEAKER_00", "timestamp": [1072.52, 1078.38], "text": " So here is another page that we've committed and we can see that this, oh man, I guess there's so many commits that happen like so frequently and so in such an automated way,"}, {"speaker": "SPEAKER_00", "timestamp": [1078.38, 1082.24], "text": " but it's kind of hard to find one that is like, you know, historically relevant."}, {"speaker": "SPEAKER_00", "timestamp": [1082.24, 1087.44], "text": " Let's see if I could figure out a way to do this"}, {"speaker": "SPEAKER_00", "timestamp": [1092.16, 1094.72], "text": " what oh i have an idea okay so if we go to kubernetes and we go to command"}, {"speaker": "SPEAKER_00", "timestamp": [1101.28, 1104.48], "text": " committee m app actually let's go to computer we'll do blame"}, {"speaker": "SPEAKER_00", "timestamp": [1105.32, 1115.98], "text": " two years ago here we go. This commit was committed on 2019,"}, {"speaker": "SPEAKER_00", "timestamp": [1115.98, 1119.76], "text": " and we can see down here below that we see a different output."}, {"speaker": "SPEAKER_00", "timestamp": [1119.76, 1126.66], "text": " Instead of showing us just the top of tree branch or the top of tree tag, we can also"}, {"speaker": "SPEAKER_00", "timestamp": [1126.66, 1133.68], "text": " see that this commit was part of every tag from v118 alpha 2"}, {"speaker": "SPEAKER_00", "timestamp": [1133.68, 1135.56], "text": " all the way to current."}, {"speaker": "SPEAKER_00", "timestamp": [1135.56, 1137.28], "text": " And if we click on between, we can"}, {"speaker": "SPEAKER_00", "timestamp": [1137.28, 1141.8], "text": " see this commit resides in each of the tagged versions"}, {"speaker": "SPEAKER_00", "timestamp": [1141.8, 1148.76], "text": " from 118 alpha 2 all the way to 122.0 Beta 0."}, {"speaker": "SPEAKER_00", "timestamp": [1148.76, 1151.34], "text": " This is a way of determining whether your commit,"}, {"speaker": "SPEAKER_00", "timestamp": [1151.34, 1152.3], "text": " the one you're looking at,"}, {"speaker": "SPEAKER_00", "timestamp": [1152.3, 1154.88], "text": " the one that has the source of all of your frustration,"}, {"speaker": "SPEAKER_00", "timestamp": [1154.88, 1159.26], "text": " has actually made it into a release or not."}, {"speaker": "SPEAKER_00", "timestamp": [1159.26, 1165.62], "text": " Okay. That's what I wanted to show you on the GitHub UI."}, {"speaker": "SPEAKER_00", "timestamp": [1166.62, 1172.14], "text": " Next up, we're going to build this and we're going to test and see if it works."}, {"speaker": "SPEAKER_00", "timestamp": [1172.14, 1176.18], "text": " That'll involve setting up a build environment."}, {"speaker": "SPEAKER_00", "timestamp": [1176.18, 1179.28], "text": " We're going to leverage Kind for a lot of the build environment,"}, {"speaker": "SPEAKER_00", "timestamp": [1179.28, 1182.24], "text": " and we're going to go ahead and build QBDM with this commit."}, {"speaker": "SPEAKER_00", "timestamp": [1182.24, 1186.28], "text": " I'm going to show you the before and after."}, {"speaker": "SPEAKER_00", "timestamp": [1186.28, 1188.88], "text": " Let's check this out."}, {"speaker": "SPEAKER_00", "timestamp": [1191.32, 1193.98], "text": " First thing I want to show you are"}, {"speaker": "SPEAKER_00", "timestamp": [1193.98, 1196.04], "text": " two tools that I use a lot."}, {"speaker": "SPEAKER_00", "timestamp": [1196.04, 1199.88], "text": " The first tool I use a lot is a tool called DIRMV."}, {"speaker": "SPEAKER_00", "timestamp": [1199.88, 1206.62], "text": " What DIRMV does, let's go on back here real quick."}, {"speaker": "SPEAKER_00", "timestamp": [1210.74, 1215.36], "text": " Derev is a tool that lets you set environment variables."}, {"speaker": "SPEAKER_00", "timestamp": [1215.92, 1218.04], "text": " Derev."}, {"speaker": "SPEAKER_00", "timestamp": [1219.32, 1220.32], "text": " Oh,.NET, my bad."}, {"speaker": "SPEAKER_00", "timestamp": [1225.06, 1225.72], "text": " This is a tool that lets you set environment variables when you move into a directory."}, {"speaker": "SPEAKER_00", "timestamp": [1228.42, 1228.7], "text": " So, and you're not in the directory, the environment variables are empty."}, {"speaker": "SPEAKER_00", "timestamp": [1237.36, 1239.04], "text": " But when you move into it, all of the environment variables that you have specified inside of your.envrc are loaded into your environment."}, {"speaker": "SPEAKER_00", "timestamp": [1243.1, 1249.42], "text": " Now, this is super handy for different coding environments that you might be working in. So, let's just kind of do an example of why this is so handy here so I'm gonna"}, {"speaker": "SPEAKER_00", "timestamp": [1249.42, 1258.44], "text": " do dear M edit dot well not my home directory here so make their quicken"}, {"speaker": "SPEAKER_00", "timestamp": [1259.0, 1269.32], "text": " and the speaking cloud native theorem edit DRM edit dot, and this creates a DRM file, but there's"}, {"speaker": "SPEAKER_00", "timestamp": [1269.32, 1270.32], "text": " nothing in there right now."}, {"speaker": "SPEAKER_00", "timestamp": [1272.44, 1276.68], "text": " So the next tool I want to introduce you to is one that we're going to use to go"}, {"speaker": "SPEAKER_00", "timestamp": [1276.68, 1280.2], "text": " ahead and populate the configuration inside of here, we're going to use"}, {"speaker": "SPEAKER_00", "timestamp": [1280.2, 1282.6], "text": " a tool called gimme dash go."}, {"speaker": "SPEAKER_00", "timestamp": [1282.64, 1284.24], "text": " So let's take a look at that one real quick."}, {"speaker": "SPEAKER_00", "timestamp": [1282.72, 1285.3], "text": " use a tool called gimme-go. Let's take a look at that one real quick."}, {"speaker": "SPEAKER_00", "timestamp": [1290.52, 1293.06], "text": " There's lots of ways to do this."}, {"speaker": "SPEAKER_00", "timestamp": [1293.06, 1297.3], "text": " This is just the way that I've been using for this."}, {"speaker": "SPEAKER_00", "timestamp": [1297.3, 1301.84], "text": " I like it because it's pretty frequently"}, {"speaker": "SPEAKER_00", "timestamp": [1301.84, 1304.3], "text": " updated and pretty well-maintained because it's"}, {"speaker": "SPEAKER_00", "timestamp": [1304.3, 1307.52], "text": " part of the solution stack at Travis CI."}, {"speaker": "SPEAKER_00", "timestamp": [1307.52, 1309.94], "text": " And so I'm actually pretty convinced"}, {"speaker": "SPEAKER_00", "timestamp": [1309.94, 1311.64], "text": " that it will be around for a while"}, {"speaker": "SPEAKER_00", "timestamp": [1313.94, 1316.98], "text": " and that it's pretty reasonably tested, right?"}, {"speaker": "SPEAKER_00", "timestamp": [1316.98, 1319.14], "text": " So GimmeGo is a bash script"}, {"speaker": "SPEAKER_00", "timestamp": [1319.14, 1321.74], "text": " that sets the environment variables."}, {"speaker": "SPEAKER_00", "timestamp": [1321.74, 1326.54], "text": " It will go and fetch a version of Go for you and set environment"}, {"speaker": "SPEAKER_00", "timestamp": [1326.54, 1332.32], "text": " variables such that it will leverage that fetched version of Go entirely within the"}, {"speaker": "SPEAKER_00", "timestamp": [1332.32, 1335.24], "text": " directory that you've created or inside of your system somewhere."}, {"speaker": "SPEAKER_00", "timestamp": [1335.24, 1339.38], "text": " So if you're going to use Go in any kind of containerized environment, this is a really"}, {"speaker": "SPEAKER_00", "timestamp": [1339.38, 1340.82], "text": " great tool."}, {"speaker": "SPEAKER_00", "timestamp": [1340.82, 1342.54], "text": " But also even locally, right?"}, {"speaker": "SPEAKER_00", "timestamp": [1342.54, 1351.86], "text": " We understand that clearly Go changes versions faster than many of the distribution package managers and stuff keep up with."}, {"speaker": "SPEAKER_00", "timestamp": [1352.44, 1357.86], "text": " And so it can sometimes be difficult to like determine which one you want to use."}, {"speaker": "SPEAKER_00", "timestamp": [1358.22, 1361.68], "text": " Like Python has something like this that's called like pipm or something like that."}, {"speaker": "SPEAKER_00", "timestamp": [1361.8, 1366.0], "text": " Ruby has another one that's very similar right but basically a way"}, {"speaker": "SPEAKER_00", "timestamp": [1366.0, 1371.28], "text": " of leveraging a particular version of git associating with that particular version of"}, {"speaker": "SPEAKER_00", "timestamp": [1371.28, 1375.2], "text": " git with a particular directory and then making it so that that is now your go"}, {"speaker": "SPEAKER_00", "timestamp": [1375.2, 1377.44], "text": " development environment in which you're going to do all of your work"}, {"speaker": "SPEAKER_00", "timestamp": [1380.64, 1384.64], "text": " so in our case i already have gimme installed and if you want to go ahead and install it"}, {"speaker": "SPEAKER_00", "timestamp": [1382.96, 1385.78], "text": " In our case, I already have GIMI installed. If you want to go ahead and install it."}, {"speaker": "SPEAKER_01", "timestamp": [1411.68, 1432.82], "text": " So I'm going to go ahead and grab it from the AUR repo. I'm going to drop thatimme stable greater than dot mvrc."}, {"speaker": "SPEAKER_00", "timestamp": [1435.64, 1439.32], "text": " And what this will do is it'll just pop all of those environment variables"}, {"speaker": "SPEAKER_01", "timestamp": [1439.32, 1443.98], "text": " right into my environment that I'm here in."}, {"speaker": "SPEAKER_00", "timestamp": [1444.08, 1448.68], "text": " So then I'm that I'm here so I'm gonna edit this there"}, {"speaker": "SPEAKER_00", "timestamp": [1448.68, 1456.92], "text": " um and it dot these are environment variables that it set it unset goose and"}, {"speaker": "SPEAKER_00", "timestamp": [1456.92, 1462.44], "text": " unset go arch and then it went ahead and set export go root and that's where the"}, {"speaker": "SPEAKER_00", "timestamp": [1462.44, 1465.68], "text": " that's that's where the version of go that is stable currently"}, {"speaker": "SPEAKER_00", "timestamp": [1465.68, 1471.2], "text": " has been put and then it added it to my path before everything else making sure that that"}, {"speaker": "SPEAKER_00", "timestamp": [1471.2, 1478.4], "text": " version of go would be leveraged and then um gave me and then it exported a bunch of"}, {"speaker": "SPEAKER_00", "timestamp": [1478.4, 1482.64], "text": " environment variables inside of this space right so let's take a look at that one"}, {"speaker": "SPEAKER_00", "timestamp": [1485.84, 1492.0], "text": " let go"}, {"speaker": "SPEAKER_01", "timestamp": [1494.32, 1521.36], "text": " um me and let's go 116 and so it's setting go root and setting go it's setting our path and this"}, {"speaker": "SPEAKER_00", "timestamp": [1521.36, 1532.36], "text": " is basically just what it loaded in there right okay so next thing I want to do is I want to edit this and I'm gonna go ahead and set"}, {"speaker": "SPEAKER_00", "timestamp": [1532.36, 1535.04], "text": " my go pass"}, {"speaker": "SPEAKER_01", "timestamp": [1556.54, 1559.1], "text": " I'm going to set my go pass to PWD, which basically means that, oh, you know what? I probably want to actually make a go director here."}, {"speaker": "SPEAKER_00", "timestamp": [1560.38, 1566.68], "text": " So, deramv edit dot a go."}, {"speaker": "SPEAKER_01", "timestamp": [1567.66, 1568.0], "text": " All right."}, {"speaker": "SPEAKER_00", "timestamp": [1568.98, 1569.62], "text": " There we go."}, {"speaker": "SPEAKER_00", "timestamp": [1569.9, 1571.48], "text": " So, now we're all loaded up here, right?"}, {"speaker": "SPEAKER_00", "timestamp": [1571.5, 1572.5], "text": " We got our go path."}, {"speaker": "SPEAKER_00", "timestamp": [1572.56, 1573.34], "text": " We've got our go root."}, {"speaker": "SPEAKER_00", "timestamp": [1573.44, 1575.16], "text": " We've got all of the other things that we need."}, {"speaker": "SPEAKER_00", "timestamp": [1575.58, 1578.44], "text": " Let's go ahead and check something out here."}, {"speaker": "SPEAKER_00", "timestamp": [1578.44, 1587.4], "text": " So, what we'll do is we'll do go get sigs.k8s.io slash kind."}, {"speaker": "SPEAKER_00", "timestamp": [1589.02, 1591.9], "text": " By default, kind will"}, {"speaker": "SPEAKER_00", "timestamp": [1591.9, 1597.88], "text": " actually grab the latest release,"}, {"speaker": "SPEAKER_00", "timestamp": [1597.88, 1600.38], "text": " and it'll build it right here in our directory."}, {"speaker": "SPEAKER_00", "timestamp": [1600.38, 1601.62], "text": " So let's check it out."}, {"speaker": "SPEAKER_00", "timestamp": [1601.62, 1604.62], "text": " Going and getting all of the dependencies."}, {"speaker": "SPEAKER_00", "timestamp": [1603.6, 1606.66], "text": " directory. So let's check it out. Go on and getting all of the dependencies."}, {"speaker": "SPEAKER_00", "timestamp": [1610.32, 1612.22], "text": " And if we move into go bin, there's our kind."}, {"speaker": "SPEAKER_00", "timestamp": [1616.44, 1616.48], "text": " So this is just as, as complex as it needs to be to build kind. It's pretty,"}, {"speaker": "SPEAKER_00", "timestamp": [1618.96, 1619.46], "text": " pretty handy. All right. So now we've got our kind environment,"}, {"speaker": "SPEAKER_00", "timestamp": [1620.76, 1621.22], "text": " or we've got our kind binary."}, {"speaker": "SPEAKER_00", "timestamp": [1624.0, 1624.42], "text": " Let's make sure that that kind of binary is in our path."}, {"speaker": "SPEAKER_02", "timestamp": [1625.0, 1639.0], "text": " So we'll do our nvrc again."}, {"speaker": "SPEAKER_01", "timestamp": [1649.28, 1660.88], "text": " Go path. And what I'm doing here, and I'm just adding the go path binary directory,"}, {"speaker": "SPEAKER_00", "timestamp": [1660.88, 1667.36], "text": " or bin directory, into before our regular path path and that way any bins that are in"}, {"speaker": "SPEAKER_00", "timestamp": [1667.36, 1677.44], "text": " there are going to get loaded up right so let's go ahead and exit and if i do dirham allow and then"}, {"speaker": "SPEAKER_00", "timestamp": [1677.44, 1687.56], "text": " if i do which kind we can see that that's the version of kind that we're using. Pretty darn cool. Next up, what we're going to do is we're going to check"}, {"speaker": "SPEAKER_00", "timestamp": [1687.56, 1691.98], "text": " out the Kubernetes codebase and we're going to look at that commit."}, {"speaker": "SPEAKER_00", "timestamp": [1691.98, 1697.6], "text": " We're probably going to use some GitHub CLI commands or we could not,"}, {"speaker": "SPEAKER_00", "timestamp": [1697.6, 1700.84], "text": " but I think I want to show you the GitHub CLI commands because they"}, {"speaker": "SPEAKER_00", "timestamp": [1700.84, 1710.8], "text": " really make your life a lot easier when working through this kind of stuff let me actually just make this a little bit bigger too because i think maybe that's a"}, {"speaker": "SPEAKER_00", "timestamp": [1710.8, 1718.24], "text": " little too small okay that's better looks like we have a question i want to jump over here and see"}, {"speaker": "SPEAKER_00", "timestamp": [1718.24, 1725.06], "text": " what the question is once in dirham and another and giveimmeMV. Yeah, I know."}, {"speaker": "SPEAKER_00", "timestamp": [1725.18, 1726.6], "text": " It does seem like a duplicate."}, {"speaker": "SPEAKER_00", "timestamp": [1726.86, 1735.04], "text": " So I wonder if there's like a catch in the fact that like maybe it's trying to determine the fact that it isn't an environment manager or maybe it doesn't know that or something."}, {"speaker": "SPEAKER_00", "timestamp": [1735.16, 1736.98], "text": " It does seem kind of like a duplicate."}, {"speaker": "SPEAKER_00", "timestamp": [1737.74, 1739.32], "text": " I'm not setting go root twice."}, {"speaker": "SPEAKER_00", "timestamp": [1739.36, 1741.54], "text": " I'm setting go pass and go root."}, {"speaker": "SPEAKER_00", "timestamp": [1743.02, 1748.32], "text": " And it's only setting go root the one time. So if I do echo go root and it's only setting go root with one of the one time so if i do echo go root"}, {"speaker": "SPEAKER_00", "timestamp": [1750.4, 1753.44], "text": " setting it to that and if i look at the um"}, {"speaker": "SPEAKER_00", "timestamp": [1755.6, 1758.64], "text": " i mean it is setting it sorry you're right it is sitting it twice but it's"}, {"speaker": "SPEAKER_00", "timestamp": [1758.64, 1765.76], "text": " setting it to the same value right it's setting it um which is weird. I agree."}, {"speaker": "SPEAKER_00", "timestamp": [1765.76, 1772.28], "text": " Because we are setting it here and then it is also setting, I guess it is like maybe"}, {"speaker": "SPEAKER_00", "timestamp": [1772.28, 1774.44], "text": " that was meant to be commented out."}, {"speaker": "SPEAKER_00", "timestamp": [1774.44, 1779.42], "text": " Because it is kind of catching both."}, {"speaker": "SPEAKER_00", "timestamp": [1779.42, 1784.18], "text": " Or maybe this is actually because this is gimme env and we are not referencing gimme"}, {"speaker": "SPEAKER_00", "timestamp": [1784.18, 1786.64], "text": " env anywhere"}, {"speaker": "SPEAKER_00", "timestamp": [1790.24, 1795.28], "text": " this is just telling us where we got the environment variables yeah i think that's it it's only setting it once it's only setting go root here"}, {"speaker": "SPEAKER_00", "timestamp": [1797.68, 1804.32], "text": " now if we had i don't know if we had like eval dot gimme i mean we had email eval that path then it"}, {"speaker": "SPEAKER_00", "timestamp": [1804.32, 1805.68], "text": " would actually make it real, right?"}, {"speaker": "SPEAKER_00", "timestamp": [1805.86, 1807.06], "text": " But we're not doing that."}, {"speaker": "SPEAKER_00", "timestamp": [1807.24, 1809.54], "text": " We're actually kind of highlighting"}, {"speaker": "SPEAKER_00", "timestamp": [1809.54, 1811.12], "text": " where that content came from."}, {"speaker": "SPEAKER_00", "timestamp": [1816.68, 1817.54], "text": " All right."}, {"speaker": "SPEAKER_00", "timestamp": [1821.16, 1822.82], "text": " So we got that set up."}, {"speaker": "SPEAKER_00", "timestamp": [1823.56, 1827.68], "text": " Let's jump in a little further here and play with this stuff."}, {"speaker": "SPEAKER_00", "timestamp": [1827.68, 1831.5], "text": " So we got a Go environment."}, {"speaker": "SPEAKER_00", "timestamp": [1831.5, 1836.3], "text": " Now the next thing I do personally is I actually go ahead and check out"}, {"speaker": "SPEAKER_00", "timestamp": [1836.3, 1842.1], "text": " with Go 111 mods off because I want it to be under my source tree."}, {"speaker": "SPEAKER_00", "timestamp": [1842.1, 1844.94], "text": " I think that might just be the way that I do it."}, {"speaker": "SPEAKER_00", "timestamp": [1844.94, 1845.0], "text": " I'm not sure that everybody does be the way that I do it."}, {"speaker": "SPEAKER_00", "timestamp": [1845.0, 1846.88], "text": " I'm not sure that everybody does it that way."}, {"speaker": "SPEAKER_00", "timestamp": [1846.88, 1848.58], "text": " But let me show you what that looks like."}, {"speaker": "SPEAKER_00", "timestamp": [1853.5, 1854.76], "text": " Oogetk8s.io."}, {"speaker": "SPEAKER_00", "timestamp": [1860.4, 1864.06], "text": " And when you're going to check out the Kubernetes source code,"}, {"speaker": "SPEAKER_00", "timestamp": [1864.06, 1867.98], "text": " you have to use the k8s.io moniker. Like a lot of times, if you're going to check out the Kubernetes source code, you have to use the k8s.io moniker."}, {"speaker": "SPEAKER_00", "timestamp": [1867.98, 1869.94], "text": " A lot of times if you're going to do something like this,"}, {"speaker": "SPEAKER_00", "timestamp": [1869.94, 1877.3], "text": " you would normally do go get github.com slash username slash project."}, {"speaker": "SPEAKER_00", "timestamp": [1877.3, 1880.96], "text": " Although you can do that with go get in Kubernetes,"}, {"speaker": "SPEAKER_00", "timestamp": [1880.96, 1884.34], "text": " it messes it up because a lot of the paths inside of"}, {"speaker": "SPEAKER_00", "timestamp": [1884.34, 1886.72], "text": " the code base require that"}, {"speaker": "SPEAKER_00", "timestamp": [1886.72, 1894.96], "text": " uh that that they are importing from k8s.io kubernetes blah and so if you don't have that path"}, {"speaker": "SPEAKER_00", "timestamp": [1895.84, 1901.68], "text": " if you don't have the checkout in that path then things get really weird and woogie and they don't"}, {"speaker": "SPEAKER_00", "timestamp": [1901.68, 1905.28], "text": " work terribly well and so when you're going through"}, {"speaker": "SPEAKER_00", "timestamp": [1905.28, 1910.24], "text": " this you definitely want to make sure that you check out the kubernetes code base with go get"}, {"speaker": "SPEAKER_00", "timestamp": [1910.24, 1916.48], "text": " kh.io kubernetes or your environment will not work in the way that you expect it will be quite"}, {"speaker": "SPEAKER_00", "timestamp": [1916.48, 1922.4], "text": " painful so we can see that this checked out and it's going to complain about no go files because"}, {"speaker": "SPEAKER_00", "timestamp": [1922.4, 1926.9], "text": " this is an automatic build that would be kind of nuts can you imagine you do go get cover do this and"}, {"speaker": "SPEAKER_00", "timestamp": [1926.9, 1930.86], "text": " it just builds the world that would be a lot of that would be a lot of work so"}, {"speaker": "SPEAKER_00", "timestamp": [1930.86, 1934.76], "text": " that doesn't happen there it works out okay for kind right but like for"}, {"speaker": "SPEAKER_00", "timestamp": [1934.76, 1940.52], "text": " kubernetes now so it's moved it into go search case to I owe that kubernetes so"}, {"speaker": "SPEAKER_00", "timestamp": [1940.52, 1943.28], "text": " if we move into that"}, {"speaker": "SPEAKER_00", "timestamp": [1949.64, 1950.28], "text": " So if we move into that, here's the source code for Kubernetes."}, {"speaker": "SPEAKER_00", "timestamp": [1962.6, 1963.12], "text": " And if I do git remote-v, you can see that my current upstream is the HTTPS version of upstream in GitHub."}, {"speaker": "SPEAKER_00", "timestamp": [1967.2, 1968.24], "text": " And now I want to add my fork to this right so i'm going to do gh"}, {"speaker": "SPEAKER_00", "timestamp": [1970.88, 1975.36], "text": " for uh repo fork"}, {"speaker": "SPEAKER_00", "timestamp": [1978.48, 1989.36], "text": " and it says i already have a fork do you want me to add that remote yes all right All right."}, {"speaker": "SPEAKER_01", "timestamp": [1991.36, 1996.36], "text": " Now I'm sitting on my own fork and origin is upstream queue."}, {"speaker": "SPEAKER_00", "timestamp": [1996.36, 1998.48], "text": " I can still check out tags,"}, {"speaker": "SPEAKER_01", "timestamp": [1998.48, 2001.46], "text": " I can still check out the latest release, all of that stuff."}, {"speaker": "SPEAKER_00", "timestamp": [2001.46, 2004.86], "text": " But right now I'm sitting on my fork of Kubernetes."}, {"speaker": "SPEAKER_00", "timestamp": [2004.86, 2005.22], "text": " Now the first thing we're going to do in our test is we're going to see the break, all of that stuff but right now I'm sitting on my fork of kubernetes now the"}, {"speaker": "SPEAKER_00", "timestamp": [2005.22, 2008.46], "text": " first thing we're gonna do in our test is we're gonna see the break we're gonna"}, {"speaker": "SPEAKER_01", "timestamp": [2008.46, 2032.18], "text": " see the thing that we're gonna fix right so let's go ahead and do kind build node name, head, it's called image."}, {"speaker": "SPEAKER_00", "timestamp": [2032.18, 2038.06], "text": " And kind will automatically detect what the source is, where your source is checked out,"}, {"speaker": "SPEAKER_01", "timestamp": [2038.06, 2040.48], "text": " and then it will build based on what it sees here."}, {"speaker": "SPEAKER_00", "timestamp": [2040.48, 2045.4], "text": " So I'm going to go ahead and build top of tree and hope it works otherwise"}, {"speaker": "SPEAKER_01", "timestamp": [2045.4, 2047.8], "text": " I might have to back out and do actually you know what this is probably a bad"}, {"speaker": "SPEAKER_00", "timestamp": [2047.8, 2069.28], "text": " idea let's do this let's do kind let's do get checkout be one currently the top is 122.0 beta 0."}, {"speaker": "SPEAKER_00", "timestamp": [2069.28, 2071.58], "text": " So let's check out alpha 3."}, {"speaker": "SPEAKER_00", "timestamp": [2071.58, 2087.0], "text": " And then we'll build it from here. Node image, image equals"}, {"speaker": "SPEAKER_01", "timestamp": [2087.0, 2089.0], "text": "."}, {"speaker": "SPEAKER_01", "timestamp": [2093.0, 2098.0], "text": " 0, alpha 3."}, {"speaker": "SPEAKER_00", "timestamp": [2102.0, 2107.88], "text": " So then the kind project is going to go ahead and build based on my code on my on my source"}, {"speaker": "SPEAKER_00", "timestamp": [2107.88, 2112.88], "text": " code it's going to go ahead and build this and include it as part of that build will"}, {"speaker": "SPEAKER_00", "timestamp": [2112.88, 2116.3], "text": " be a number of different things."}, {"speaker": "SPEAKER_00", "timestamp": [2116.3, 2117.94], "text": " You can't actually tell it where it is."}, {"speaker": "SPEAKER_00", "timestamp": [2117.94, 2118.94], "text": " Yeah."}, {"speaker": "SPEAKER_00", "timestamp": [2118.94, 2123.2], "text": " One of the questions was, can you tell kind to use where the source code is by any chance"}, {"speaker": "SPEAKER_00", "timestamp": [2123.2, 2124.38], "text": " instead of using your grow path?"}, {"speaker": "SPEAKER_00", "timestamp": [2124.38, 2126.24], "text": " And the answer is absolutely yes."}, {"speaker": "SPEAKER_00", "timestamp": [2126.24, 2127.62], "text": " In fact, while that's building, I'm"}, {"speaker": "SPEAKER_00", "timestamp": [2127.62, 2129.96], "text": " going to go ahead and bring up another window"}, {"speaker": "SPEAKER_00", "timestamp": [2129.96, 2131.04], "text": " and show you that."}, {"speaker": "SPEAKER_00", "timestamp": [2131.04, 2140.06], "text": " So if I do kind build node image help, right now, by default,"}, {"speaker": "SPEAKER_00", "timestamp": [2140.06, 2141.6], "text": " it kind of auto detects it."}, {"speaker": "SPEAKER_00", "timestamp": [2141.6, 2143.5], "text": " But if you know where it is, then you"}, {"speaker": "SPEAKER_00", "timestamp": [2143.5, 2145.52], "text": " can just specify dash cube root"}, {"speaker": "SPEAKER_00", "timestamp": [2145.52, 2173.08], "text": " and give it a path I'll wait for that guy to build a little bit my pleasure My pleasure."}, {"speaker": "SPEAKER_01", "timestamp": [2175.24, 2177.52], "text": " While we're waiting for this to build, let's go back and look at that change that we,"}, {"speaker": "SPEAKER_00", "timestamp": [2177.52, 2179.78], "text": " actually I did introduce one other command."}, {"speaker": "SPEAKER_00", "timestamp": [2179.78, 2183.02], "text": " It was the GitHub CLI,"}, {"speaker": "SPEAKER_00", "timestamp": [2183.02, 2185.5], "text": " and I wanted to talk to that guy real quick."}, {"speaker": "SPEAKER_00", "timestamp": [2185.5, 2189.0], "text": " So that's on cli.github.com."}, {"speaker": "SPEAKER_00", "timestamp": [2189.0, 2190.2], "text": " It's very handy."}, {"speaker": "SPEAKER_00", "timestamp": [2190.2, 2192.84], "text": " You could actually do things like pull a particular pull"}, {"speaker": "SPEAKER_00", "timestamp": [2192.84, 2194.44], "text": " request."}, {"speaker": "SPEAKER_00", "timestamp": [2194.44, 2198.7], "text": " You can do all kinds of fun stuff like that."}, {"speaker": "SPEAKER_00", "timestamp": [2198.7, 2202.2], "text": " So it's a pretty cool tool for this sort of stuff."}, {"speaker": "SPEAKER_00", "timestamp": [2202.2, 2207.52], "text": " It follows a pretty well-desithub flow and so some of"}, {"speaker": "SPEAKER_00", "timestamp": [2207.52, 2212.56], "text": " the stuff i've been playing with uh in my dev environment really it works into my flow pretty"}, {"speaker": "SPEAKER_00", "timestamp": [2212.56, 2238.4], "text": " well while we're building things let's take a look at what's happening on the system"}, {"speaker": "SPEAKER_00", "timestamp": [2244.0, 2248.5], "text": " so things are chugging along takes a minute to get everything built."}, {"speaker": "SPEAKER_00", "timestamp": [2250.72, 2252.8], "text": " I know we're building a Docker image. Now, a lot of these steps that make this"}, {"speaker": "SPEAKER_00", "timestamp": [2252.8, 2255.38], "text": " seem like it's going to take a really long time,"}, {"speaker": "SPEAKER_00", "timestamp": [2255.38, 2258.32], "text": " will take longer the first time,"}, {"speaker": "SPEAKER_00", "timestamp": [2258.32, 2260.3], "text": " and then those images will be cached."}, {"speaker": "SPEAKER_00", "timestamp": [2260.3, 2261.86], "text": " So you don't have to actually go through"}, {"speaker": "SPEAKER_00", "timestamp": [2261.86, 2264.6], "text": " that initial cost over and over again."}, {"speaker": "SPEAKER_00", "timestamp": [2264.6, 2270.8], "text": " The subsequent build we do of kubernetes will be faster than than what we're seeing here"}, {"speaker": "SPEAKER_00", "timestamp": [2280.08, 2283.6], "text": " this is my new laptop from from for my work and stuff it's actually"}, {"speaker": "SPEAKER_00", "timestamp": [2283.18, 2283.26], "text": " This is my new laptop from my work and stuff."}, {"speaker": "SPEAKER_00", "timestamp": [2284.94, 2285.42], "text": " It's actually pretty cool."}, {"speaker": "SPEAKER_00", "timestamp": [2289.74, 2289.92], "text": " What it's doing, it's a T14S, so it's got an AMD laptop."}, {"speaker": "SPEAKER_00", "timestamp": [2294.92, 2295.08], "text": " It's got an AMD chip in it, a Ryzen Pro, a Ryzen 7 Pro."}, {"speaker": "SPEAKER_00", "timestamp": [2298.46, 2298.58], "text": " So that means it's got 16 cores, which is very exciting,"}, {"speaker": "SPEAKER_00", "timestamp": [2300.46, 2302.36], "text": " and I found one with 32 gig of memory in it."}, {"speaker": "SPEAKER_00", "timestamp": [2303.84, 2303.92], "text": " It's a pretty solid little ThinkPad."}, {"speaker": "SPEAKER_00", "timestamp": [2305.46, 2310.56], "text": " I'm actually really happy with it. It's a pretty solid little ThinkPad. I'm actually really happy with it. The one that I had before this was a X1 Carbon."}, {"speaker": "SPEAKER_00", "timestamp": [2310.56, 2315.6], "text": " And it kind of suffered a little bit sometimes in doing work."}, {"speaker": "SPEAKER_00", "timestamp": [2315.6, 2317.88], "text": " Because I think most of my biggest problems"}, {"speaker": "SPEAKER_00", "timestamp": [2317.88, 2319.98], "text": " were related to the video card."}, {"speaker": "SPEAKER_00", "timestamp": [2319.98, 2323.38], "text": " The video card itself was actually kind of slow"}, {"speaker": "SPEAKER_00", "timestamp": [2323.38, 2327.72], "text": " because it was still the Intel chip. And so even all wired up correctly and everything it still"}, {"speaker": "SPEAKER_00", "timestamp": [2327.72, 2331.0], "text": " couldn't really cut something like the stream that we're doing here like it"}, {"speaker": "SPEAKER_00", "timestamp": [2331.0, 2335.88], "text": " wouldn't be able it just wouldn't have enough resources to like to make the"}, {"speaker": "SPEAKER_00", "timestamp": [2335.88, 2340.94], "text": " video stuff work with this with the AMD chip you get a Radeon built-in so it's"}, {"speaker": "SPEAKER_00", "timestamp": [2340.94, 2345.24], "text": " very similar to like that Intel video card but it's using"}, {"speaker": "SPEAKER_00", "timestamp": [2345.24, 2350.0], "text": " it's using radion stuff so it's actually pretty significantly faster"}, {"speaker": "SPEAKER_00", "timestamp": [2350.0, 2354.16], "text": " comparatively so I've not had nearly the same problems with this as I have with"}, {"speaker": "SPEAKER_00", "timestamp": [2354.16, 2364.18], "text": " the old one pretty exciting stuff I"}, {"speaker": "SPEAKER_01", "timestamp": [2369.62, 2372.38], "text": " Pretty exciting stuff. I should have built before the show, taking us a while here."}, {"speaker": "SPEAKER_00", "timestamp": [2372.38, 2377.56], "text": " This tool that I'm looking at here is called bPytop."}, {"speaker": "SPEAKER_00", "timestamp": [2377.56, 2380.68], "text": " There it goes. Now we're getting somewhere."}, {"speaker": "SPEAKER_00", "timestamp": [2382.0, 2385.5], "text": " What bPytop does is it gives me a really,"}, {"speaker": "SPEAKER_00", "timestamp": [2385.5, 2387.42], "text": " I think, really beautiful view"}, {"speaker": "SPEAKER_00", "timestamp": [2387.42, 2389.1], "text": " of what's happening on the system."}, {"speaker": "SPEAKER_00", "timestamp": [2389.1, 2391.26], "text": " I can see the processes that are running and"}, {"speaker": "SPEAKER_00", "timestamp": [2391.26, 2394.46], "text": " how much is being used by each process."}, {"speaker": "SPEAKER_00", "timestamp": [2394.46, 2397.86], "text": " I can see a map of my CPU utilization."}, {"speaker": "SPEAKER_00", "timestamp": [2397.86, 2402.32], "text": " I can see map of my memory graph."}, {"speaker": "SPEAKER_00", "timestamp": [2402.32, 2408.46], "text": " I want to see a simpler, more more complex I can see disk IO and my"}, {"speaker": "SPEAKER_00", "timestamp": [2408.46, 2420.52], "text": " networking for and my network upload and download so pretty cool stuff it is it's"}, {"speaker": "SPEAKER_01", "timestamp": [2420.52, 2435.48], "text": " a It's a, yeah, I'm building basically the top of tree for kind right now, and then I'm going"}, {"speaker": "SPEAKER_00", "timestamp": [2435.48, 2441.62], "text": " to pull a commit from upstream and then go ahead and build that commit and show that"}, {"speaker": "SPEAKER_00", "timestamp": [2441.62, 2444.88], "text": " the change that that commit represents has been changed."}, {"speaker": "SPEAKER_00", "timestamp": [2445.76, 2447.36], "text": " Yeah, I didn't put anything in the notes for what I was going to do today. and build that commit and show that the change that that commit represents has been changed um"}, {"speaker": "SPEAKER_00", "timestamp": [2449.76, 2450.48], "text": " yeah i didn't put anything in the notes for what i was going to do today"}, {"speaker": "SPEAKER_00", "timestamp": [2454.08, 2463.68], "text": " but i should probably put that in there that's a very good call out thank you very much good to see you russ it's 16 threads um let's see what it's like eight is it eight core 16 threads"}, {"speaker": "SPEAKER_00", "timestamp": [2465.94, 2467.02], "text": " at proxy Let's see what it is. It's like eight. Is it eight cores, 16 threads? At proxy."}, {"speaker": "SPEAKER_01", "timestamp": [2476.38, 2476.78], "text": " Yeah."}, {"speaker": "SPEAKER_00", "timestamp": [2478.24, 2480.44], "text": " So eight cores and each with two threads."}, {"speaker": "SPEAKER_01", "timestamp": [2480.84, 2481.68], "text": " So pretty fast."}, {"speaker": "SPEAKER_00", "timestamp": [2482.7, 2483.34], "text": " I'm kind of digging it."}, {"speaker": "SPEAKER_00", "timestamp": [2483.42, 2484.48], "text": " It's working out really well for me."}, {"speaker": "SPEAKER_00", "timestamp": [2486.4, 2488.08], "text": " Got it really inexpensively on ebay too"}, {"speaker": "SPEAKER_00", "timestamp": [2492.88, 2494.48], "text": " so we're almost done with our build here"}, {"speaker": "SPEAKER_00", "timestamp": [2506.36, 2508.06], "text": " no problem at all i'm glad you're here."}, {"speaker": "SPEAKER_01", "timestamp": [2510.48, 2513.0], "text": " There's all of our binaries that we're building,"}, {"speaker": "SPEAKER_00", "timestamp": [2513.0, 2515.56], "text": " the API server, controller manager, scheduler, proxy."}, {"speaker": "SPEAKER_01", "timestamp": [2515.56, 2517.26], "text": " This is the one we care about today,"}, {"speaker": "SPEAKER_00", "timestamp": [2517.26, 2521.64], "text": " QBDM, and the reason we care about that one so specifically is we want to make sure"}, {"speaker": "SPEAKER_00", "timestamp": [2521.64, 2526.56], "text": " that the change that we're making to QBadm shows up as a change in the system"}, {"speaker": "SPEAKER_00", "timestamp": [2537.12, 2543.84], "text": " well you can see it is busy time now we're like 97 cpu and i can actually kind of tell video wise"}, {"speaker": "SPEAKER_00", "timestamp": [2543.84, 2545.12], "text": " i'm still suffering a little bit"}, {"speaker": "SPEAKER_00", "timestamp": [2545.12, 2554.22], "text": " I wonder how it looks all to you how it looks to you all I mean this is a fully saturated CPU"}, {"speaker": "SPEAKER_01", "timestamp": [2554.22, 2572.86], "text": " at this point I hope I'm still I'm still I hope I'm still here it seems like I am am. We're almost done with the build."}, {"speaker": "SPEAKER_00", "timestamp": [2572.86, 2575.94], "text": " A Pi 4. I mean, yes,"}, {"speaker": "SPEAKER_01", "timestamp": [2575.94, 2579.82], "text": " I think that you can leverage KIND."}, {"speaker": "SPEAKER_00", "timestamp": [2579.82, 2582.12], "text": " As long as you can put KIND there,"}, {"speaker": "SPEAKER_00", "timestamp": [2582.12, 2585.76], "text": " then you can use KIND to build your source code."}, {"speaker": "SPEAKER_00", "timestamp": [2585.76, 2588.14], "text": " I'm pretty sure,"}, {"speaker": "SPEAKER_00", "timestamp": [2588.14, 2590.64], "text": " although maybe we should just go look,"}, {"speaker": "SPEAKER_00", "timestamp": [2590.64, 2593.56], "text": " because I'm actually curious about that myself."}, {"speaker": "SPEAKER_00", "timestamp": [2593.56, 2599.42], "text": " Kind arm 53."}, {"speaker": "SPEAKER_00", "timestamp": [2599.42, 2600.24], "text": " What is that about?"}, {"speaker": "SPEAKER_01", "timestamp": [2600.24, 2618.22], "text": " Kind.sigs.k.io. kind that's six that case do do do survey says closed why is it closed did"}, {"speaker": "SPEAKER_00", "timestamp": [2618.22, 2649.14], "text": " it get worked so there are people who have used it to build kind Hey, there we go."}, {"speaker": "SPEAKER_00", "timestamp": [2649.14, 2656.52], "text": " Kind of head should just work on arm 64, but we need verification."}, {"speaker": "SPEAKER_00", "timestamp": [2656.52, 2661.0], "text": " We have a report of it working here on Apple Silicon."}, {"speaker": "SPEAKER_00", "timestamp": [2661.0, 2662.4], "text": " Yeah."}, {"speaker": "SPEAKER_00", "timestamp": [2662.4, 2665.6], "text": " So 11 one and 11 should just work."}, {"speaker": "SPEAKER_00", "timestamp": [2667.22, 2668.0], "text": " So I would say give it a try."}, {"speaker": "SPEAKER_00", "timestamp": [2668.8, 2669.84], "text": " Great question."}, {"speaker": "SPEAKER_00", "timestamp": [2671.1, 2671.2], "text": " This is the question I'm responding to."}, {"speaker": "SPEAKER_00", "timestamp": [2674.58, 2675.6], "text": " Would this work for Pi 4, or would you recommend cross-compiling?"}, {"speaker": "SPEAKER_00", "timestamp": [2677.3, 2678.16], "text": " And I think it would work."}, {"speaker": "SPEAKER_00", "timestamp": [2679.38, 2681.22], "text": " So pretty cool."}, {"speaker": "SPEAKER_00", "timestamp": [2682.32, 2683.46], "text": " I've not tried it."}, {"speaker": "SPEAKER_00", "timestamp": [2688.5, 2694.36], "text": " But I don't actually have a Pi to play with. But I think that with a lot of folks moving toward the Apple Silicon Macs and stuff,"}, {"speaker": "SPEAKER_00", "timestamp": [2694.36, 2696.2], "text": " there are going to be more people playing with this stuff,"}, {"speaker": "SPEAKER_00", "timestamp": [2696.2, 2715.12], "text": " and so I would expect that it would continue to work. yeah my pleasure"}, {"speaker": "SPEAKER_02", "timestamp": [2735.6, 2752.92], "text": " build it looks like CPUs are beginning to cool We're going to make one more build like this with this change in it."}, {"speaker": "SPEAKER_01", "timestamp": [2752.92, 2755.1], "text": " But first I want to evaluate the change,"}, {"speaker": "SPEAKER_00", "timestamp": [2755.1, 2757.34], "text": " look at it, get it into our code base,"}, {"speaker": "SPEAKER_00", "timestamp": [2757.34, 2796.08], "text": " and then we'll validate that the change is there. Thank you. All right."}, {"speaker": "SPEAKER_01", "timestamp": [2807.84, 2835.68], "text": " There we go. So now if I do kind, create cluster, image equals, I guess I could have named it something easier to type."}, {"speaker": "SPEAKER_00", "timestamp": [2835.68, 2840.14], "text": " What we've done here is we've basically just leveraged Kind as a build environment for"}, {"speaker": "SPEAKER_01", "timestamp": [2840.14, 2843.46], "text": " everything where I'm not building anything by hand."}, {"speaker": "SPEAKER_00", "timestamp": [2843.46, 2849.84], "text": " I'm actually just leveraging Kind to do the build itself and then i can go ahead and verify that the change is there"}, {"speaker": "SPEAKER_01", "timestamp": [2849.84, 2856.08], "text": " or not as a reminder of the change that we're talking about here let's go ahead and bounce"}, {"speaker": "SPEAKER_00", "timestamp": [2856.08, 2866.46], "text": " back here and look at this change this is the here we go so this is a change to cube ADM and it's updating the cube"}, {"speaker": "SPEAKER_02", "timestamp": [2866.46, 2877.0], "text": " ADM help message to get rid of the alpha certs line so if I talk our exec in here"}, {"speaker": "SPEAKER_00", "timestamp": [2881.88, 2898.2], "text": " I do cube ADM help."}, {"speaker": "SPEAKER_01", "timestamp": [2898.2, 2900.28], "text": " Where is the bug specifically?"}, {"speaker": "SPEAKER_00", "timestamp": [2900.28, 2901.28], "text": " QA."}, {"speaker": "SPEAKER_00", "timestamp": [2901.28, 2902.28], "text": " Alpha help."}, {"speaker": "SPEAKER_01", "timestamp": [2902.28, 2917.04], "text": " Okay. QADM. Alpha help."}, {"speaker": "SPEAKER_00", "timestamp": [2919.14, 2919.3], "text": " Ah, that's where it is."}, {"speaker": "SPEAKER_00", "timestamp": [2920.08, 2921.66], "text": " QADM."}, {"speaker": "SPEAKER_00", "timestamp": [2935.24, 2935.4], "text": " Sure. I'm not catching it."}, {"speaker": "SPEAKER_00", "timestamp": [2936.04, 2938.14], "text": " Where is the bug?"}, {"speaker": "SPEAKER_00", "timestamp": [2940.76, 2942.1], "text": " Cube ADM alpha search generates CSR."}, {"speaker": "SPEAKER_01", "timestamp": [2948.1, 2967.06], "text": " The following command, oh, generates CSR. So it's probably the generate CSR the following command Oh generate CSR so it's probably the generate CSR command so that's deep generate this are Found it. All right."}, {"speaker": "SPEAKER_00", "timestamp": [2967.06, 2970.1], "text": " Here, we can tell it's not an alpha command."}, {"speaker": "SPEAKER_00", "timestamp": [2970.1, 2974.72], "text": " It's kubedm certs generate CSR,"}, {"speaker": "SPEAKER_00", "timestamp": [2974.72, 2978.56], "text": " and then the help output is the word alpha."}, {"speaker": "SPEAKER_00", "timestamp": [2978.56, 2982.4], "text": " This is the thing that the person opened the issue to fix."}, {"speaker": "SPEAKER_00", "timestamp": [2982.4, 2984.6], "text": " Now we're going to go ahead and check that code out,"}, {"speaker": "SPEAKER_00", "timestamp": [2984.6, 2987.1], "text": " make sure it changes the thing that we want it to change,"}, {"speaker": "SPEAKER_00", "timestamp": [2987.1, 2990.14], "text": " and then build again and show that it works."}, {"speaker": "SPEAKER_00", "timestamp": [2990.14, 2992.6], "text": " And using this technique, you can actually"}, {"speaker": "SPEAKER_00", "timestamp": [2992.6, 2994.52], "text": " test much more complicated things."}, {"speaker": "SPEAKER_00", "timestamp": [2994.52, 2996.92], "text": " But it just seems like a pretty good way,"}, {"speaker": "SPEAKER_00", "timestamp": [2996.92, 2999.02], "text": " a pretty good flow for testing things"}, {"speaker": "SPEAKER_00", "timestamp": [2999.02, 3001.6], "text": " that are in your environment."}, {"speaker": "SPEAKER_00", "timestamp": [3001.6, 3004.68], "text": " So let's go ahead and check this out."}, {"speaker": "SPEAKER_00", "timestamp": [3004.68, 3008.56], "text": " The next thing we're going to do is we're going to do g h dr"}, {"speaker": "SPEAKER_00", "timestamp": [3011.92, 3018.4], "text": " check out we're going to grab the pull request i don't remember the pull request number though"}, {"speaker": "SPEAKER_00", "timestamp": [3020.0, 3024.16], "text": " so the pull request was oh it's already been merged just actually just got merged"}, {"speaker": "SPEAKER_00", "timestamp": [3024.16, 3026.72], "text": " so the pull request was oh it's already been merged just actually just got merged"}, {"speaker": "SPEAKER_00", "timestamp": [3034.4, 3041.2], "text": " 103 249 so while we were on this show this pr got merged that's the right one all right"}, {"speaker": "SPEAKER_00", "timestamp": [3068.08, 3069.84], "text": " okay so now we're on the update qBDM help message, and we'll do git checkout b1220 alpha3, dash b one two zero"}, {"speaker": "SPEAKER_00", "timestamp": [3075.84, 3078.16], "text": " alpha three we have a pretty name for it and then what i want to do is i want to merge from that branch that i had here the"}, {"speaker": "SPEAKER_00", "timestamp": [3078.16, 3083.92], "text": " update key radium help message right so git diff"}, {"speaker": "SPEAKER_01", "timestamp": [3088.66, 3093.88], "text": " So git diff that."}, {"speaker": "SPEAKER_00", "timestamp": [3095.26, 3095.52], "text": " There's a bunch of changes there."}, {"speaker": "SPEAKER_01", "timestamp": [3103.38, 3104.86], "text": " So git checkout log."}, {"speaker": "SPEAKER_00", "timestamp": [3107.88, 3113.7], "text": " This is the commit in specific that I want to change, right? So if I do git show, this is the only commit in it here."}, {"speaker": "SPEAKER_00", "timestamp": [3113.7, 3125.36], "text": " So now we're going to do it,"}, {"speaker": "SPEAKER_01", "timestamp": [3131.12, 3139.24], "text": " cherry pick, and I commit message."}, {"speaker": "SPEAKER_00", "timestamp": [3139.24, 3142.96], "text": " Now, what's interesting is what's happening is that I have"}, {"speaker": "SPEAKER_00", "timestamp": [3142.96, 3146.88], "text": " all of these commits in this huge library of commits on my system."}, {"speaker": "SPEAKER_00", "timestamp": [3147.68, 3158.34], "text": " Because I have checked out that pull request, I can now put the commit from that pull request anywhere in time, anywhere on any branch that is local in my environment."}, {"speaker": "SPEAKER_00", "timestamp": [3158.34, 3165.18], "text": " So what I've done is I've gone ahead and pulled that commit and put it on top of the branch"}, {"speaker": "SPEAKER_00", "timestamp": [3165.18, 3172.38], "text": " that we built our original kind node image on right so now if I do get log I"}, {"speaker": "SPEAKER_00", "timestamp": [3172.38, 3177.52], "text": " can see here is the commit that was made right to correct the example of cube"}, {"speaker": "SPEAKER_00", "timestamp": [3177.52, 3183.4], "text": " idiom help and this was the commit for the tag that defined it or this is"}, {"speaker": "SPEAKER_00", "timestamp": [3183.4, 3187.36], "text": " basically where the tag was defined be1220 alpha 3 is sitting at"}, {"speaker": "SPEAKER_00", "timestamp": [3187.36, 3194.64], "text": " this particular tag and so now i have enough to go ahead and build again and prove that my"}, {"speaker": "SPEAKER_00", "timestamp": [3194.64, 3206.46], "text": " change shows right so if i do get show i can see the change."}, {"speaker": "SPEAKER_00", "timestamp": [3206.62, 3207.12], "text": " There it is."}, {"speaker": "SPEAKER_00", "timestamp": [3207.16, 3208.16], "text": " It's in my code base."}, {"speaker": "SPEAKER_00", "timestamp": [3208.74, 3213.88], "text": " And so my next step would be to build again and then show the change that we showed before."}, {"speaker": "SPEAKER_00", "timestamp": [3214.02, 3218.2], "text": " So I'll do kind build node image."}, {"speaker": "SPEAKER_00", "timestamp": [3218.94, 3221.02], "text": " Image equals fixed."}, {"speaker": "SPEAKER_00", "timestamp": [3221.86, 3229.88], "text": " Actually, let's go ahead and use the PR for that why not"}, {"speaker": "SPEAKER_01", "timestamp": [3236.88, 3248.12], "text": " medium six I shouldn't take quite as long to build all of this."}, {"speaker": "SPEAKER_02", "timestamp": [3248.12, 3251.62], "text": " Actually, I think I just added a branch name,"}, {"speaker": "SPEAKER_00", "timestamp": [3251.62, 3255.06], "text": " so likely that reset the cache."}, {"speaker": "SPEAKER_00", "timestamp": [3255.06, 3256.88], "text": " But if you didn't actually,"}, {"speaker": "SPEAKER_00", "timestamp": [3256.88, 3258.36], "text": " actually no, I added a commit,"}, {"speaker": "SPEAKER_00", "timestamp": [3258.36, 3259.88], "text": " so it's a new cache."}, {"speaker": "SPEAKER_00", "timestamp": [3259.88, 3262.78], "text": " It has to rebuild from scratch,"}, {"speaker": "SPEAKER_00", "timestamp": [3262.78, 3264.9], "text": " but it won't hopefully not take as long."}, {"speaker": "SPEAKER_00", "timestamp": [3264.9, 3267.1], "text": " Well, there we go."}, {"speaker": "SPEAKER_00", "timestamp": [3267.1, 3269.1], "text": " Sync and source is in,"}, {"speaker": "SPEAKER_00", "timestamp": [3269.1, 3271.38], "text": " our build container is still there."}, {"speaker": "SPEAKER_00", "timestamp": [3271.38, 3273.24], "text": " Running the build command."}, {"speaker": "SPEAKER_00", "timestamp": [3273.24, 3280.96], "text": " Let's go ahead and look at things work again like we saw before."}, {"speaker": "SPEAKER_00", "timestamp": [3280.96, 3283.48], "text": " Then there's one more thing I wanted to show you,"}, {"speaker": "SPEAKER_00", "timestamp": [3283.48, 3284.76], "text": " which I think will also help,"}, {"speaker": "SPEAKER_00", "timestamp": [3284.76, 3285.08], "text": " but it'll be just a second while we get this thing set up. And then there's one more thing I wanted to show you, which I think will also help, but"}, {"speaker": "SPEAKER_01", "timestamp": [3285.08, 3322.1], "text": " it'll be just a second while we get this thing set up. The next thing I wanted to show you after this is all over is how to run tests inside"}, {"speaker": "SPEAKER_02", "timestamp": [3322.1, 3326.44], "text": " of the same build environment, which are pretty cool."}, {"speaker": "SPEAKER_00", "timestamp": [3326.44, 3329.7], "text": " If you're going to use Kind as a build environment,"}, {"speaker": "SPEAKER_00", "timestamp": [3329.7, 3332.76], "text": " one of the questions that sometimes people have is,"}, {"speaker": "SPEAKER_00", "timestamp": [3332.76, 3335.1], "text": " if I'm going to leverage that as a build environment,"}, {"speaker": "SPEAKER_00", "timestamp": [3335.1, 3342.2], "text": " how do I run tests against the code that I'm working with at build time or before build time?"}, {"speaker": "SPEAKER_00", "timestamp": [3342.2, 3344.68], "text": " Can I do unit tests and that sort of stuff?"}, {"speaker": "SPEAKER_00", "timestamp": [3344.68, 3345.0], "text": " Where is the code checked out and like can I do unit tests and that sort of stuff?"}, {"speaker": "SPEAKER_00", "timestamp": [3345.0, 3346.94], "text": " Like where is the code checked out"}, {"speaker": "SPEAKER_00", "timestamp": [3346.94, 3348.96], "text": " and can I still do unit tests?"}, {"speaker": "SPEAKER_00", "timestamp": [3348.96, 3351.56], "text": " And I'll show you a couple of different ways to do that."}, {"speaker": "SPEAKER_01", "timestamp": [3355.6, 3382.72], "text": " But we're gonna go ahead already that this build"}, {"speaker": "SPEAKER_00", "timestamp": [3382.72, 3384.76], "text": " is way faster than the other build was,"}, {"speaker": "SPEAKER_01", "timestamp": [3384.76, 3386.82], "text": " because we already have our build container,"}, {"speaker": "SPEAKER_00", "timestamp": [3386.82, 3391.52], "text": " and our build container is associated with"}, {"speaker": "SPEAKER_00", "timestamp": [3391.52, 3396.86], "text": " a particular period of time for the Kubernetes code base."}, {"speaker": "SPEAKER_00", "timestamp": [3396.86, 3398.92], "text": " As long as we're still within that same time,"}, {"speaker": "SPEAKER_00", "timestamp": [3398.92, 3400.74], "text": " we don't have to build another build container,"}, {"speaker": "SPEAKER_00", "timestamp": [3400.74, 3403.24], "text": " we can leverage that same build container that was already built."}, {"speaker": "SPEAKER_00", "timestamp": [3403.24, 3407.12], "text": " With that particular version of Go, with those particular sets of tools,"}, {"speaker": "SPEAKER_00", "timestamp": [3407.76, 3411.92], "text": " all of those things remain consistent between our two builds. So we didn't have to, like,"}, {"speaker": "SPEAKER_00", "timestamp": [3411.92, 3415.04], "text": " generate a new build container that would create that stuff."}, {"speaker": "SPEAKER_00", "timestamp": [3419.04, 3423.44], "text": " But we are building all the binaries with our change. And at the moment, we're building all"}, {"speaker": "SPEAKER_00", "timestamp": [3423.44, 3427.32], "text": " of it, right? Because we're testing all of Kube with Kube ADM,"}, {"speaker": "SPEAKER_00", "timestamp": [3427.54, 3430.44], "text": " with Kube Kettle, with the API server controller,"}, {"speaker": "SPEAKER_00", "timestamp": [3430.56, 3432.34], "text": " manager, scheduler, all that stuff, right?"}, {"speaker": "SPEAKER_00", "timestamp": [3432.82, 3434.12], "text": " And so because we're doing that,"}, {"speaker": "SPEAKER_00", "timestamp": [3434.42, 3436.2], "text": " we're getting a pretty complete view"}, {"speaker": "SPEAKER_00", "timestamp": [3436.2, 3438.58], "text": " of whether this change actually messed anything up"}, {"speaker": "SPEAKER_00", "timestamp": [3438.58, 3441.4], "text": " for any other component within this distributed system"}, {"speaker": "SPEAKER_00", "timestamp": [3441.4, 3442.8], "text": " or whether it's actually,"}, {"speaker": "SPEAKER_00", "timestamp": [3443.4, 3445.16], "text": " or whether it's literally just a change"}, {"speaker": "SPEAKER_00", "timestamp": [3445.16, 3449.64], "text": " in docs and we can look from the code that it is just a change in docs right we don't need to"}, {"speaker": "SPEAKER_00", "timestamp": [3449.64, 3454.88], "text": " actually build all all of the world for this but as an example what i'm walking you through here"}, {"speaker": "SPEAKER_00", "timestamp": [3454.88, 3459.66], "text": " is kind of showing you what it looks like to build all of the world for this and then use that new"}, {"speaker": "SPEAKER_00", "timestamp": [3459.66, 3465.4], "text": " environment to prove that your change works so say you were making a change to like, I don't know,"}, {"speaker": "SPEAKER_00", "timestamp": [3466.54, 3468.94], "text": " you're making a change to that rootless configuration"}, {"speaker": "SPEAKER_00", "timestamp": [3468.94, 3470.0], "text": " that we talked about before."}, {"speaker": "SPEAKER_00", "timestamp": [3470.4, 3472.46], "text": " And the way that you did it is you had to add"}, {"speaker": "SPEAKER_00", "timestamp": [3472.46, 3475.46], "text": " a particular security context capability"}, {"speaker": "SPEAKER_00", "timestamp": [3475.46, 3478.28], "text": " for, you know, sysnet bind or something"}, {"speaker": "SPEAKER_00", "timestamp": [3478.28, 3480.56], "text": " inside of the API server."}, {"speaker": "SPEAKER_00", "timestamp": [3481.66, 3484.48], "text": " How would you verify that the change you made"}, {"speaker": "SPEAKER_00", "timestamp": [3484.48, 3487.8], "text": " to the manifest for the static pod manifest"}, {"speaker": "SPEAKER_00", "timestamp": [3487.8, 3490.08], "text": " was correct?"}, {"speaker": "SPEAKER_00", "timestamp": [3490.08, 3492.24], "text": " How could you verify that?"}, {"speaker": "SPEAKER_00", "timestamp": [3492.24, 3495.04], "text": " And this is definitely one way to go about making"}, {"speaker": "SPEAKER_00", "timestamp": [3495.04, 3496.68], "text": " that sort of a change."}, {"speaker": "SPEAKER_00", "timestamp": [3496.68, 3498.6], "text": " Another example of a change like this was I"}, {"speaker": "SPEAKER_00", "timestamp": [3498.6, 3500.9], "text": " remember there was a bug in IPVS,"}, {"speaker": "SPEAKER_00", "timestamp": [3500.9, 3503.82], "text": " and somebody patched that bug, and they were showing,"}, {"speaker": "SPEAKER_00", "timestamp": [3503.82, 3506.54], "text": " and I was working with and"}, {"speaker": "SPEAKER_00", "timestamp": [3506.54, 3510.62], "text": " I was showing how to verify that so if you wanted to kind of dig more into like"}, {"speaker": "SPEAKER_00", "timestamp": [3510.62, 3515.26], "text": " that use case I wrote it up as a blog"}, {"speaker": "SPEAKER_00", "timestamp": [3520.74, 3524.72], "text": " as a blog."}, {"speaker": "SPEAKER_00", "timestamp": [3527.0, 3531.28], "text": " And nope."}, {"speaker": "SPEAKER_00", "timestamp": [3535.28, 3537.86], "text": " Using Kind to test a PR for Kubernetes. And so this was actually showing how"}, {"speaker": "SPEAKER_00", "timestamp": [3537.86, 3541.88], "text": " to leverage DRM, GIMI, and this whole environment"}, {"speaker": "SPEAKER_00", "timestamp": [3541.88, 3544.14], "text": " to go ahead and do the sorts of testing"}, {"speaker": "SPEAKER_00", "timestamp": [3544.14, 3549.06], "text": " that we're doing here live inside of this environment and exactly why to change"}, {"speaker": "SPEAKER_00", "timestamp": [3549.06, 3553.14], "text": " and how to check out the code how to check out the branch and how to verify"}, {"speaker": "SPEAKER_00", "timestamp": [3553.14, 3557.34], "text": " that the thing works and this is all right here the same thing I'm actually"}, {"speaker": "SPEAKER_00", "timestamp": [3557.34, 3567.82], "text": " covering in my doc is all right here and so I'm going to actually go ahead and put this into this document"}, {"speaker": "SPEAKER_00", "timestamp": [3589.54, 3595.12], "text": " And that will describe what we've made, what we've done today. So this we're pretty close to done."}, {"speaker": "SPEAKER_00", "timestamp": [3595.12, 3603.56], "text": " We're at the top of the hour."}, {"speaker": "SPEAKER_00", "timestamp": [3603.56, 3605.48], "text": " So I'm going to shut it down here as soon as this build"}, {"speaker": "SPEAKER_00", "timestamp": [3605.48, 3607.58], "text": " is done and we show that it works."}, {"speaker": "SPEAKER_00", "timestamp": [3607.58, 3609.9], "text": " I'm going to go ahead and end the episode."}, {"speaker": "SPEAKER_00", "timestamp": [3609.9, 3611.64], "text": " Thank you both for signing in."}, {"speaker": "SPEAKER_00", "timestamp": [3611.64, 3613.26], "text": " I hope there are other folks out there."}, {"speaker": "SPEAKER_00", "timestamp": [3613.26, 3615.5], "text": " If you're out there and want to say hello, say hello."}, {"speaker": "SPEAKER_00", "timestamp": [3615.5, 3616.5], "text": " Give me a wave."}, {"speaker": "SPEAKER_00", "timestamp": [3616.5, 3619.2], "text": " Good to see you all."}, {"speaker": "SPEAKER_00", "timestamp": [3619.2, 3624.98], "text": " I look forward to doing this again in two weeks, and we'll do more tips like this and"}, {"speaker": "SPEAKER_00", "timestamp": [3624.98, 3626.1], "text": " kind of explore different things"}, {"speaker": "SPEAKER_00", "timestamp": [3626.1, 3676.82], "text": " like this going forward. QADM fix is my image name. All right."}, {"speaker": "SPEAKER_01", "timestamp": [3676.82, 3692.16], "text": " Node image is built. Yeah, for me, I mean, like, if I'm doing any development for the control plane or any of"}, {"speaker": "SPEAKER_00", "timestamp": [3692.16, 3695.52], "text": " that, do you mean, like, do you mean the code base itself?"}, {"speaker": "SPEAKER_00", "timestamp": [3695.6, 3700.4], "text": " Like, if you were going to modify the controller manager or modify the API server, that kind"}, {"speaker": "SPEAKER_00", "timestamp": [3700.4, 3700.76], "text": " of stuff?"}, {"speaker": "SPEAKER_00", "timestamp": [3700.8, 3701.94], "text": " Or did you mean something else?"}, {"speaker": "SPEAKER_00", "timestamp": [3702.34, 3703.34], "text": " I'm curious about your question."}, {"speaker": "SPEAKER_00", "timestamp": [3703.28, 3706.08], "text": " that kind of stuff or did you mean something else i'm curious about your question"}, {"speaker": "SPEAKER_01", "timestamp": [3711.12, 3716.24], "text": " i create cluster image equals"}, {"speaker": "SPEAKER_00", "timestamp": [3716.88, 3728.0], "text": " bm Yeah. So the debug test cycle."}, {"speaker": "SPEAKER_01", "timestamp": [3729.0, 3732.88], "text": " This is a pretty quick loop for building again and again,"}, {"speaker": "SPEAKER_00", "timestamp": [3732.88, 3736.48], "text": " if you're making changes to code and you want to prove that it works."}, {"speaker": "SPEAKER_01", "timestamp": [3736.48, 3741.2], "text": " Alternatively, what you could do is actually,"}, {"speaker": "SPEAKER_00", "timestamp": [3742.76, 3748.24], "text": " I have seen examples of folks leveraging other tools."}, {"speaker": "SPEAKER_00", "timestamp": [3748.24, 3750.84], "text": " And in fact, there's a great example of this in Cluster API"}, {"speaker": "SPEAKER_00", "timestamp": [3750.84, 3755.32], "text": " of leveraging other tools to do kind of a faster break loop fix model"}, {"speaker": "SPEAKER_00", "timestamp": [3755.32, 3756.54], "text": " for how this works."}, {"speaker": "SPEAKER_00", "timestamp": [3757.18, 3759.78], "text": " But in this particular test, if you know what you're changing"}, {"speaker": "SPEAKER_00", "timestamp": [3759.78, 3762.48], "text": " and you want to actually, you know, you've made it past your unit test"}, {"speaker": "SPEAKER_00", "timestamp": [3762.48, 3764.64], "text": " and you're ready to actually like validate that your change works,"}, {"speaker": "SPEAKER_00", "timestamp": [3766.7, 3768.16], "text": " this is one way to go. And because it's QBADM,"}, {"speaker": "SPEAKER_00", "timestamp": [3768.16, 3770.12], "text": " you can actually modify quite a lot about this."}, {"speaker": "SPEAKER_00", "timestamp": [3770.12, 3771.24], "text": " You could turn on debug,"}, {"speaker": "SPEAKER_00", "timestamp": [3771.24, 3773.34], "text": " you could turn on lots of different stuff."}, {"speaker": "SPEAKER_00", "timestamp": [3774.9, 3778.0], "text": " So let's Docker, let's jump in here."}, {"speaker": "SPEAKER_00", "timestamp": [3782.22, 3810.86], "text": " QBADM fixed control plane, bash certs CSR help Henry at CSR and now we see there is no more alpha so the changed absolutely did make the"}, {"speaker": "SPEAKER_00", "timestamp": [3810.86, 3818.32], "text": " change that he was expecting and it looks good"}, {"speaker": "SPEAKER_01", "timestamp": [3829.7, 3831.3], "text": " That is our episode for today. But yeah, I mean, that's a good point."}, {"speaker": "SPEAKER_00", "timestamp": [3831.3, 3834.24], "text": " Maybe what we should do is what I'll do next is I'll"}, {"speaker": "SPEAKER_00", "timestamp": [3834.24, 3839.76], "text": " actually show how that might work if you were going to make a change to something like that."}, {"speaker": "SPEAKER_00", "timestamp": [3839.76, 3841.92], "text": " But thank you both."}, {"speaker": "SPEAKER_00", "timestamp": [3841.92, 3853.32], "text": " Have a wonderful time and I'll see you next time."}, {"speaker": "SPEAKER_00", "timestamp": [3854.96, 3855.42], "text": " See you in two weeks."}], "chunks": [{"timestamp": [0.0, 2.0], "text": " Hey everybody, good afternoon."}, {"timestamp": [2.0, 6.0], "text": " This is Duffy Cooley coming at you with this week in"}, {"timestamp": [6.0, 10.0], "text": " cloud native episode three. I'm glad you're here and I'm"}, {"timestamp": [10.0, 14.0], "text": " really excited about this next episode. So."}, {"timestamp": [14.0, 17.0], "text": " Let's dig into it and see what's happening this week."}, {"timestamp": [17.0, 21.0], "text": " If you're here on the chat, go ahead and say hello."}, {"timestamp": [21.0, 28.22], "text": " I'd love to. I'd love to, you know, see you here every week as we're going through this process."}, {"timestamp": [28.82, 30.54], "text": " So I'd love to know that you're here."}, {"timestamp": [30.62, 32.84], "text": " The only way I know that that's happening is if you're in the chat."}, {"timestamp": [33.0, 34.46], "text": " So if you're here, check in."}, {"timestamp": [35.6, 38.36], "text": " I'd love to see folks showing up here."}, {"timestamp": [40.0, 40.7], "text": " All right."}, {"timestamp": [42.86, 47.06], "text": " The next thing I have for you today is this page,"}, {"timestamp": [47.14, 50.38], "text": " which is kind of our weekly thing where we're going to keep,"}, {"timestamp": [50.46, 56.0], "text": " I'm keeping notes on stuff that is exciting that happens during the week"}, {"timestamp": [56.0, 59.94], "text": " or during the last two weeks in cloud native space."}, {"timestamp": [60.08, 70.1], "text": " And if there's anything that you would like me to cover, you can always just go to hackmd.io slash at TWICN,"}, {"timestamp": [70.1, 71.48], "text": " this week in Cloud Native,"}, {"timestamp": [71.48, 75.78], "text": " and put in a note for me and I'll read it to you live on screen."}, {"timestamp": [75.78, 77.6], "text": " That's my plan for every week."}, {"timestamp": [77.6, 79.84], "text": " If you see anything that's interesting,"}, {"timestamp": [79.84, 81.82], "text": " you can either just shout out to me on Twitter,"}, {"timestamp": [81.82, 84.9], "text": " or you can put it in the HackMD notes and I"}, {"timestamp": [84.9, 93.92], "text": " will cover it every week and this episode for this week's update I wanted"}, {"timestamp": [93.92, 98.76], "text": " to talk about what's coming let's see here we have one of the changes that I"}, {"timestamp": [98.76, 102.84], "text": " saw on YouTube which I was pretty excited about was this one here where we"}, {"timestamp": [102.84, 105.58], "text": " have playlists and there are playlists for every show"}, {"timestamp": [105.58, 110.56], "text": " and so if you want if you missed your episode with Siam or with Maddie or"}, {"timestamp": [111.32, 113.68], "text": " Leo Leonardo or any of these other folks"}, {"timestamp": [114.06, 121.08], "text": " You can go ahead and just either subscribe directly to that playlist or you can go back and watch what watch the"}, {"timestamp": [121.76, 125.12], "text": " Episode that happened while you were away away but each of the channels seems to"}, {"timestamp": [125.12, 132.72], "text": " have their own playlist associated there and that's pretty exciting so there's new content"}, {"timestamp": [132.72, 139.44], "text": " every day of the week uh this week tim banks was hosting sydney miller uh one of the just"}, {"timestamp": [139.44, 145.44], "text": " incredibly awesome people in tech and this is talking about sydney's journey into tech and how she's helping"}, {"timestamp": [145.44, 150.96], "text": " uh others kind of along that same path uh sydney works at equinix metal and it was really a i think"}, {"timestamp": [150.96, 155.68], "text": " it's a pretty good episode that happened earlier today check that one out cloud native latinx with"}, {"timestamp": [155.68, 160.72], "text": " leonardo murillo all about the community we'll have best guests from various latin american"}, {"timestamp": [160.72, 166.44], "text": " countries showing challenges opportunities and value in building a community in Latin America come check it out"}, {"timestamp": [167.72, 173.58], "text": " CNCF face-off is kind of a game show hosted by Maddie and if you're interested in"}, {"timestamp": [174.16, 178.28], "text": " you know kind of participating in that it should be super fun and"}, {"timestamp": [179.18, 182.72], "text": " Matt Stratton will be hosting it if you want to be a part of it"}, {"timestamp": [182.72, 185.48], "text": " You can actually just follow this link and it will take you to a form"}, {"timestamp": [185.48, 188.82], "text": " where you can pick your team,"}, {"timestamp": [189.06, 191.5], "text": " what you want that team to be called,"}, {"timestamp": [191.62, 192.42], "text": " all that good stuff,"}, {"timestamp": [192.7, 195.06], "text": " and then participate in the show."}, {"timestamp": [195.38, 197.36], "text": " And so I think that'll really be fun."}, {"timestamp": [198.2, 200.46], "text": " Like I said, Siam's doing Search Magic,"}, {"timestamp": [200.68, 203.74], "text": " all about the different certified Kubernetes certifications."}, {"timestamp": [204.28, 206.24], "text": " We have Spotlight Live with Dan certifications we have spotlight live with dan"}, {"timestamp": [206.24, 210.88], "text": " pop we have lgtm with rock code he just did one on prometheus was really fun kind of getting from"}, {"timestamp": [210.88, 220.0], "text": " my data commit on that 100 days with anais anise and um cloud native classroom with kat costgrove"}, {"timestamp": [220.0, 225.04], "text": " i think she just did uh, if I remember correctly."}, {"timestamp": [227.22, 227.42], "text": " And then Fields tested with Kaslan."}, {"timestamp": [229.0, 229.12], "text": " So definitely check those shows out."}, {"timestamp": [231.2, 232.18], "text": " They're happening right here on Cloud Native TV."}, {"timestamp": [236.5, 236.9], "text": " Please subscribe to this show, I mean, to this channel on Twitch."}, {"timestamp": [239.44, 239.68], "text": " You should see a subscribe button down around there somewhere."}, {"timestamp": [240.82, 241.26], "text": " Go ahead and click that button."}, {"timestamp": [243.08, 245.78], "text": " Get notified whenever we're online. There'll always be something interesting happening."}, {"timestamp": [247.0, 250.5], "text": " In the Kubernetes space, one of the exciting announcements"}, {"timestamp": [250.5, 257.78], "text": " is that this early bird pricing, which is about $650 off of the on-site pricing"}, {"timestamp": [257.78, 262.4], "text": " and $200 off the standard pricing, is ending July 4th."}, {"timestamp": [262.4, 266.66], "text": " So if you want to get that pricing, get it done now. You"}, {"timestamp": [266.66, 272.38], "text": " can save a bunch of money. Either as a corporate or an individual, you can save, you know,"}, {"timestamp": [272.38, 275.5], "text": " not quite as much money, but you can definitely save a bunch of money. So definitely check"}, {"timestamp": [275.5, 285.46], "text": " that one out. So July 5th, the sale ends July 5th. So definitely want to make that happen one of the"}, {"timestamp": [285.46, 288.5], "text": " other commits I saw happen in the kubernetes community this week which I"}, {"timestamp": [288.5, 293.34], "text": " thought was pretty exciting to me anyway was the cube ADM now runs as not root"}, {"timestamp": [293.34, 297.84], "text": " and this is part of a cap but let's take a look at the commit it's kind of an"}, {"timestamp": [297.84, 305.0], "text": " exciting commit so this is actually the cap right here."}, {"timestamp": [305.0, 308.0], "text": " It's a bunch of work by Vinay."}, {"timestamp": [309.26, 313.32], "text": " What this represents is a change in the way that we"}, {"timestamp": [313.32, 317.02], "text": " operate the static pod manifests and other things run by"}, {"timestamp": [317.02, 320.28], "text": " QBDM in such a way that they are significantly more secure."}, {"timestamp": [320.28, 321.48], "text": " They're running as not root."}, {"timestamp": [321.48, 323.9], "text": " All of the capabilities have been dropped other than"}, {"timestamp": [323.9, 327.42], "text": " the ones that are necessary for that application to run."}, {"timestamp": [327.42, 330.8], "text": " If you're interested in this work or you want to read"}, {"timestamp": [330.8, 332.86], "text": " through what's happened or what the changes are,"}, {"timestamp": [332.86, 335.72], "text": " definitely check these issues out."}, {"timestamp": [335.72, 338.16], "text": " I was thinking about for our playtime,"}, {"timestamp": [338.16, 340.78], "text": " I would explore rootless kubedm,"}, {"timestamp": [340.78, 344.94], "text": " but I don't think I quite have the right setup for that today."}, {"timestamp": [344.94, 347.42], "text": " I'm probably going to explore something else in that space,"}, {"timestamp": [347.42, 348.98], "text": " but maybe not that."}, {"timestamp": [348.98, 351.22], "text": " But maybe on the next episode,"}, {"timestamp": [351.22, 352.78], "text": " if I have a little bit more time to set up,"}, {"timestamp": [352.78, 354.76], "text": " I might set that one up because I'm actually"}, {"timestamp": [354.76, 357.06], "text": " interested in seeing how that's going."}, {"timestamp": [357.06, 359.44], "text": " It should be a really fun one."}, {"timestamp": [359.56, 362.64], "text": " So rootless kubedm,"}, {"timestamp": [362.64, 364.72], "text": " that means your control plane,"}, {"timestamp": [364.72, 368.72], "text": " your scheduler, your kube proxy,"}, {"timestamp": [368.72, 372.44], "text": " all of those components running rootless and as a user that is not root."}, {"timestamp": [372.44, 375.46], "text": " That way, if by some chance somebody were to"}, {"timestamp": [375.46, 379.88], "text": " exploit one of those control plane components inside of your cluster,"}, {"timestamp": [379.88, 382.72], "text": " they wouldn't be able to actually take over the cluster,"}, {"timestamp": [382.72, 384.8], "text": " which is actually pretty cool."}, {"timestamp": [386.44, 387.72], "text": " Hey, we got people checking in."}, {"timestamp": [388.1, 389.62], "text": " Let's see who these folks are."}, {"timestamp": [391.34, 391.52], "text": " Yes."}, {"timestamp": [391.52, 392.06], "text": " Some OMI."}, {"timestamp": [393.12, 393.86], "text": " Hello."}, {"timestamp": [393.98, 394.58], "text": " Good to see you."}, {"timestamp": [395.18, 401.32], "text": " What was kind doing when running QBDM before, ah, in kinds project, actually"}, {"timestamp": [401.32, 405.28], "text": " in my, in my playtime, I'm going going to show that but the way that kind was doing it was"}, {"timestamp": [405.28, 413.36], "text": " um leveraging uh just regular cube adm inside of a root container so kind in itself under no"}, {"timestamp": [413.36, 418.4], "text": " circumstances is to be considered like secure right because like you're running privileged"}, {"timestamp": [418.4, 423.28], "text": " containers on your host that have that have significant privilege otherwise we wouldn't"}, {"timestamp": [423.28, 425.94], "text": " be able to extend containers and that sort of stuff."}, {"timestamp": [425.94, 429.98], "text": " Now there is some change happening inside of the kind project"}, {"timestamp": [429.98, 431.5], "text": " that would enable rootless mode."}, {"timestamp": [431.5, 434.54], "text": " In fact, I've seen one of the heroes of rootless,"}, {"timestamp": [434.54, 437.64], "text": " one of the heroes, no pun intended, of rootless mode"}, {"timestamp": [437.64, 439.8], "text": " in the project working on just exactly that."}, {"timestamp": [439.8, 444.8], "text": " Akihiro has been working on implementing rootless kind."}, {"timestamp": [445.18, 446.52], "text": " So that'll be'll be exciting."}, {"timestamp": [446.52, 449.76], "text": " I imagine this work overlaps or at least relates,"}, {"timestamp": [449.76, 452.8], "text": " but I haven't looked at it too closely yet."}, {"timestamp": [454.9, 458.42], "text": " Pretty exciting stuff."}, {"timestamp": [459.36, 462.04], "text": " Later on, I'm going to actually show like pulling"}, {"timestamp": [462.04, 463.94], "text": " the commit that is interview"}, {"timestamp": [463.94, 468.6], "text": " and then showing how to build that commit and then showing how to run that commit in kind."}, {"timestamp": [468.78, 470.92], "text": " We'll take a look at how it's working in just a minute."}, {"timestamp": [473.32, 480.6], "text": " One of the podcasts this week was a Kubernetes podcast 152 with Craig Box talking about SRE for everyone else."}, {"timestamp": [481.16, 484.58], "text": " If you haven't checked out the Kubernetes podcast, it's probably worth checking out."}, {"timestamp": [484.68, 487.84], "text": " It's a pretty decent podcast. They've always got some really good stuff happening inside of"}, {"timestamp": [487.84, 501.18], "text": " that space. And then also the recent TGIK, TGIK 158 was hosted by Nadir and Jason DeTiberis,"}, {"timestamp": [501.8, 505.92], "text": " who are good friends of mine, who I worked with at CoreOS, or sorry, at Heptio."}, {"timestamp": [505.92, 509.5], "text": " They did a whole episode on Cluster API with Tinkerbell."}, {"timestamp": [509.5, 512.5], "text": " If you're interested in Tinkerbell or Cluster API or how you"}, {"timestamp": [512.5, 515.94], "text": " mash these words together, definitely check out that episode."}, {"timestamp": [515.94, 518.5], "text": " It's TGIK 158."}, {"timestamp": [520.08, 523.44], "text": " Now, one of the things I wanted to share with you is that a lot of"}, {"timestamp": [523.44, 527.1], "text": " the information that I get for the news every week, I get from here."}, {"timestamp": [527.1, 532.88], "text": " I'd love to get more information from you all as well, but what I normally get my news"}, {"timestamp": [532.88, 539.24], "text": " from is things like Cube Weekly, which is a newsletter put together by my fellow ambassadors,"}, {"timestamp": [539.24, 544.88], "text": " and they gather things like headlines, what's happening inside of the CNCF programs that"}, {"timestamp": [544.88, 546.36], "text": " are coming this week."}, {"timestamp": [546.36, 550.24], "text": " We got a great question by Emily Fox talking about"}, {"timestamp": [550.24, 553.32], "text": " the security tag working on a serverless security paper,"}, {"timestamp": [553.32, 555.22], "text": " which will be a really interesting one."}, {"timestamp": [556.56, 558.44], "text": " We have some technical papers,"}, {"timestamp": [558.44, 560.5], "text": " handling auth and EKS clusters,"}, {"timestamp": [560.5, 563.1], "text": " running HAProxy Kubernetes ingress controller"}, {"timestamp": [563.1, 567.98], "text": " outside of your Kubernetes cluster."}, {"timestamp": [570.56, 573.4], "text": " How to build a Helm plugin in minutes and avoiding Kubernetes cluster outages"}, {"timestamp": [573.4, 574.44], "text": " with synthetic monitoring."}, {"timestamp": [574.66, 575.58], "text": " I haven't looked at that one yet."}, {"timestamp": [575.64, 576.34], "text": " That looks pretty interesting."}, {"timestamp": [576.76, 578.9], "text": " But there's a bunch of different really great articles,"}, {"timestamp": [579.04, 579.72], "text": " including this one,"}, {"timestamp": [579.76, 581.32], "text": " which I also thought about playing with."}, {"timestamp": [581.32, 584.22], "text": " How to monitor Kubernetes costs with Lens IDE."}, {"timestamp": [584.62, 586.12], "text": " If you haven't heard about the lens IDE"}, {"timestamp": [586.12, 589.22], "text": " It's another open source IDE for kubernetes"}, {"timestamp": [589.88, 591.7], "text": " And it's actually pretty cool"}, {"timestamp": [591.7, 596.98], "text": " So Justin reminding us all that if you're going to be at the participant at the contributors summit"}, {"timestamp": [597.18, 602.5], "text": " It or you're going to come to Los Angeles to be a part of kubecon"}, {"timestamp": [602.5, 605.88], "text": " And you want to go to Disneyland as part of that trip,"}, {"timestamp": [606.46, 608.18], "text": " you should definitely join"}, {"timestamp": [608.18, 610.14], "text": " all of us together going to Disneyland"}, {"timestamp": [610.14, 612.48], "text": " and we call it KubeLand."}, {"timestamp": [612.68, 614.08], "text": " We did this back in"}, {"timestamp": [614.08, 615.6], "text": " San Diego before the pandemic"}, {"timestamp": [615.6, 617.68], "text": " and it was really a lot of fun."}, {"timestamp": [618.7, 620.1], "text": " But definitely, if that's"}, {"timestamp": [620.1, 621.68], "text": " something that's interesting to you, check that out."}, {"timestamp": [621.88, 623.22], "text": " It's got a form to add yourself"}, {"timestamp": [623.22, 626.78], "text": " and there's no discounts or anything but like it's a great way of"}, {"timestamp": [626.78, 630.76], "text": " like you know hanging out with folks in the community in a place that is totally"}, {"timestamp": [630.76, 637.52], "text": " unrelated to kubernetes and then we have the SS the editorial articles here's one"}, {"timestamp": [637.52, 642.02], "text": " that I pulled out which was a Craig Craig box talking to Steve McGee talking"}, {"timestamp": [642.02, 648.3], "text": " about s re for everyone else thought that was a really good one."}, {"timestamp": [651.88, 654.8], "text": " Another article on CKA and CKAD certification."}, {"timestamp": [657.84, 658.52], "text": " Git Ops for RabbitMQ with Alexis Richardson."}, {"timestamp": [660.18, 661.42], "text": " I mean, that's a really interesting one."}, {"timestamp": [662.5, 662.62], "text": " RabbitMQ and Git Ops."}, {"timestamp": [663.7, 663.78], "text": " I'm surprised by that."}, {"timestamp": [664.8, 665.44], "text": " I guess we'll see how that goes."}, {"timestamp": [665.44, 667.24], "text": " It'll be kind of a fun one to play through."}, {"timestamp": [667.24, 669.46], "text": " And then Alex Ellis wrote a book on Golang."}, {"timestamp": [669.46, 672.48], "text": " And Alex is incredibly transparent about things"}, {"timestamp": [672.48, 673.52], "text": " that are happening."}, {"timestamp": [673.52, 675.3], "text": " And so if you're curious about how that goes,"}, {"timestamp": [675.3, 677.88], "text": " like what he went through to write that book,"}, {"timestamp": [677.88, 682.06], "text": " and how that's actually working in the space or not,"}, {"timestamp": [682.06, 683.24], "text": " definitely check that out."}, {"timestamp": [683.24, 686.3], "text": " I think it would be a good read if that's something"}, {"timestamp": [686.3, 687.38], "text": " you're interested in."}, {"timestamp": [692.24, 692.96], "text": " All right."}, {"timestamp": [696.14, 698.84], "text": " Upcoming Cloud Native Live, Improving the Kubernetes"}, {"timestamp": [698.84, 702.8], "text": " Experiencing, Eliminating Toil and Tribal Knowledge"}, {"timestamp": [702.8, 706.06], "text": " with Billy Kleek at DigitalOcean."}, {"timestamp": [706.5, 711.14], "text": " And then an on-demand webinar, again, talking about Lens and that sort of stuff by Morantis."}, {"timestamp": [711.46, 712.16], "text": " Pretty neat stuff."}, {"timestamp": [716.06, 717.42], "text": " Kubernetes CVEs."}, {"timestamp": [717.82, 720.78], "text": " I'm not sure that everybody knows about this group."}, {"timestamp": [720.92, 725.32], "text": " But if you don't know about this group and this is a space that you're interested in, you should know about this group."}, {"timestamp": [725.32, 728.36], "text": " This is just one of the many Kubernetes groups"}, {"timestamp": [728.36, 729.4], "text": " that are out there."}, {"timestamp": [729.4, 732.22], "text": " This one is Kubernetes Security Announce."}, {"timestamp": [732.22, 735.56], "text": " And every time there's a CVE or some other interesting thing"}, {"timestamp": [735.56, 739.4], "text": " that's being fixed inside of Kubernetes related to security,"}, {"timestamp": [739.4, 741.18], "text": " you're gonna see an announcement here"}, {"timestamp": [741.18, 742.72], "text": " that gives an overview of what it is,"}, {"timestamp": [742.72, 744.26], "text": " what the advisory is about."}, {"timestamp": [746.04, 751.88], "text": " And typically there may be some discussion related to that particular issue inside of"}, {"timestamp": [751.88, 757.26], "text": " the mailing list as well. So if you want to be a part of this mailing list, all you got to do"}, {"timestamp": [757.26, 767.28], "text": " is click on that link, the security announce group, and click join group. and then you'll be able to you know you can kind of pick how often you get"}, {"timestamp": [767.28, 773.28], "text": " spammed it can be on every notification it can be a digest it's up to you how you do it but"}, {"timestamp": [773.28, 777.68], "text": " definitely a good one to watch out for if security inside of kubernetes is something that you're"}, {"timestamp": [778.56, 789.18], "text": " that's on your mind one of the other things from the community i saw is this CNCF end user community providing"}, {"timestamp": [789.18, 793.3], "text": " insights into Kubernetes cluster management with technology radar."}, {"timestamp": [793.3, 798.64], "text": " And so this is a pretty good article talking about like how folks are managing their Kubernetes"}, {"timestamp": [798.64, 800.88], "text": " clusters and what tooling and stuff."}, {"timestamp": [800.88, 803.46], "text": " And this is a pretty interesting one."}, {"timestamp": [803.46, 806.9], "text": " It's one of the first things I've seen come out of the user group,"}, {"timestamp": [806.9, 809.0], "text": " the CNCF user group."}, {"timestamp": [809.0, 813.0], "text": " So I think that's a pretty good one."}, {"timestamp": [813.0, 816.5], "text": " So definitely check that out if you're interested."}, {"timestamp": [816.5, 819.5], "text": " And then it's playtime."}, {"timestamp": [819.5, 828.1], "text": " So today for playtime, my plan was to set up an environment from scratch and find"}, {"timestamp": [828.1, 832.94], "text": " an issue that has not yet been merged, something super simple,"}, {"timestamp": [832.94, 838.44], "text": " and then show how to build that commit and then test"}, {"timestamp": [838.44, 842.28], "text": " that commit according to what the issue describes,"}, {"timestamp": [842.28, 846.32], "text": " and work through that end-to- end right so that was that was my"}, {"timestamp": [846.32, 851.6], "text": " goal for today kind of help you get your environment set up work through like what it looks"}, {"timestamp": [851.6, 857.2], "text": " like to actually test a commit and show that the commit changes what it says is going to change"}, {"timestamp": [857.2, 865.18], "text": " and that was my goal and i figure we can do that in about 45 minutes but let's see what we can accomplish."}, {"timestamp": [866.76, 870.1], "text": " The commit I picked actually is like I said,"}, {"timestamp": [870.1, 872.5], "text": " it was going for something really super simple."}, {"timestamp": [872.5, 875.92], "text": " Not this one. That's not a super simple one. There we go."}, {"timestamp": [875.92, 882.5], "text": " This is an open issue and it looks like this person had found"}, {"timestamp": [882.5, 885.68], "text": " a leftover word alpha"}, {"timestamp": [885.68, 889.74], "text": " in a Kubatium help command"}, {"timestamp": [890.18, 893.5], "text": " and went ahead and put in the fix basically to"}, {"timestamp": [893.5, 896.36], "text": " remove the word alpha from the Kubatium help command."}, {"timestamp": [896.36, 899.82], "text": " What I want to show is how to actually get,"}, {"timestamp": [899.82, 902.84], "text": " first I want to work through the UI here a little bit so we can"}, {"timestamp": [902.84, 907.6], "text": " actually understand where this commit is in time or where other commits are in time."}, {"timestamp": [907.6, 908.92], "text": " I want to show you that stuff."}, {"timestamp": [908.92, 911.88], "text": " Then I'm going to show you how to set up an environment in which we can actually"}, {"timestamp": [911.88, 915.32], "text": " test that this commit changes what it expected to change."}, {"timestamp": [915.32, 918.28], "text": " This is a super simple example,"}, {"timestamp": [918.28, 920.88], "text": " but I think it'll give you the tools to test"}, {"timestamp": [920.88, 926.9], "text": " a more complex example if you choose to do so yourself so first thing"}, {"timestamp": [926.9, 930.96], "text": " I wanted to show you was like this page here so if you if you have a commit"}, {"timestamp": [930.96, 934.96], "text": " that's been committed like this one here it's been merged right then what you can"}, {"timestamp": [934.96, 939.72], "text": " do is you can actually click on the commit link down here which is a commit"}, {"timestamp": [939.72, 943.96], "text": " hash and now you're looking at the actual commit that is represented inside"}, {"timestamp": [943.96, 945.04], "text": " of the code base"}, {"timestamp": [945.04, 951.84], "text": " and one of the questions that people frequently ask is where in time is this commit"}, {"timestamp": [953.04, 959.36], "text": " right is this commit i mean it's clearly been merged to master but is it also part of a branch"}, {"timestamp": [959.36, 969.26], "text": " or a tag or anything else like that and the reason i'm taking you to this page right if you look at the commit you can actually see what branches and tags it"}, {"timestamp": [969.26, 975.42], "text": " is associated with right so right as a moment it's on master and there are"}, {"timestamp": [975.42, 981.88], "text": " there's no branch but it is associated with the tag v122 dash beta 0 which mean"}, {"timestamp": [981.88, 985.58], "text": " I think is the top of tree right now we. We could go look, but if you're ever"}, {"timestamp": [985.58, 990.2], "text": " wondering whether a commit, if you've narrowed the problem that you have down to a single commit,"}, {"timestamp": [990.2, 997.08], "text": " and you want to see if that commit is part of a particular release or has made it or has been"}, {"timestamp": [997.08, 1001.56], "text": " backported or any of those things, this is the way that you find that out, right? You can find"}, {"timestamp": [1001.56, 1006.22], "text": " the commit that you're looking at, click on the commit itself, and then look down here"}, {"timestamp": [1006.22, 1008.2], "text": " in this description, and it will tell you"}, {"timestamp": [1008.2, 1010.1], "text": " exactly where it is in time."}, {"timestamp": [1010.1, 1011.74], "text": " So this has been committed to master."}, {"timestamp": [1011.74, 1013.5], "text": " And because it's been committed to master,"}, {"timestamp": [1013.5, 1015.9], "text": " it's also been committed to this tag."}, {"timestamp": [1015.9, 1019.92], "text": " So let's take another one."}, {"timestamp": [1019.92, 1020.64], "text": " Let's see."}, {"timestamp": [1020.64, 1023.14], "text": " Closed."}, {"timestamp": [1023.14, 1024.22], "text": " Actually, you know what?"}, {"timestamp": [1024.22, 1026.0], "text": " It'd probably be easier to go with the actual"}, {"timestamp": [1026.0, 1031.76], "text": " commits right so let's take a look at"}, {"timestamp": [1034.38, 1048.78], "text": " this one so this commit is a fix to fix affinity node node port timeout and if we look at the actual"}, {"timestamp": [1048.78, 1052.72], "text": " commit we can see that it's actually just in master let's scroll down let's go"}, {"timestamp": [1052.72, 1055.56], "text": " like way down"}, {"timestamp": [1072.52, 1078.38], "text": " So here is another page that we've committed and we can see that this, oh man, I guess there's so many commits that happen like so frequently and so in such an automated way,"}, {"timestamp": [1078.38, 1082.24], "text": " but it's kind of hard to find one that is like, you know, historically relevant."}, {"timestamp": [1082.24, 1087.44], "text": " Let's see if I could figure out a way to do this"}, {"timestamp": [1092.16, 1094.72], "text": " what oh i have an idea okay so if we go to kubernetes and we go to command"}, {"timestamp": [1101.28, 1104.48], "text": " committee m app actually let's go to computer we'll do blame"}, {"timestamp": [1105.32, 1115.98], "text": " two years ago here we go. This commit was committed on 2019,"}, {"timestamp": [1115.98, 1119.76], "text": " and we can see down here below that we see a different output."}, {"timestamp": [1119.76, 1126.66], "text": " Instead of showing us just the top of tree branch or the top of tree tag, we can also"}, {"timestamp": [1126.66, 1133.68], "text": " see that this commit was part of every tag from v118 alpha 2"}, {"timestamp": [1133.68, 1135.56], "text": " all the way to current."}, {"timestamp": [1135.56, 1137.28], "text": " And if we click on between, we can"}, {"timestamp": [1137.28, 1141.8], "text": " see this commit resides in each of the tagged versions"}, {"timestamp": [1141.8, 1148.76], "text": " from 118 alpha 2 all the way to 122.0 Beta 0."}, {"timestamp": [1148.76, 1151.34], "text": " This is a way of determining whether your commit,"}, {"timestamp": [1151.34, 1152.3], "text": " the one you're looking at,"}, {"timestamp": [1152.3, 1154.88], "text": " the one that has the source of all of your frustration,"}, {"timestamp": [1154.88, 1159.26], "text": " has actually made it into a release or not."}, {"timestamp": [1159.26, 1165.62], "text": " Okay. That's what I wanted to show you on the GitHub UI."}, {"timestamp": [1166.62, 1172.14], "text": " Next up, we're going to build this and we're going to test and see if it works."}, {"timestamp": [1172.14, 1176.18], "text": " That'll involve setting up a build environment."}, {"timestamp": [1176.18, 1179.28], "text": " We're going to leverage Kind for a lot of the build environment,"}, {"timestamp": [1179.28, 1182.24], "text": " and we're going to go ahead and build QBDM with this commit."}, {"timestamp": [1182.24, 1186.28], "text": " I'm going to show you the before and after."}, {"timestamp": [1186.28, 1188.88], "text": " Let's check this out."}, {"timestamp": [1191.32, 1193.98], "text": " First thing I want to show you are"}, {"timestamp": [1193.98, 1196.04], "text": " two tools that I use a lot."}, {"timestamp": [1196.04, 1199.88], "text": " The first tool I use a lot is a tool called DIRMV."}, {"timestamp": [1199.88, 1206.62], "text": " What DIRMV does, let's go on back here real quick."}, {"timestamp": [1210.74, 1215.36], "text": " Derev is a tool that lets you set environment variables."}, {"timestamp": [1215.92, 1218.04], "text": " Derev."}, {"timestamp": [1219.32, 1220.32], "text": " Oh,.NET, my bad."}, {"timestamp": [1225.06, 1225.72], "text": " This is a tool that lets you set environment variables when you move into a directory."}, {"timestamp": [1228.42, 1228.7], "text": " So, and you're not in the directory, the environment variables are empty."}, {"timestamp": [1237.36, 1239.04], "text": " But when you move into it, all of the environment variables that you have specified inside of your.envrc are loaded into your environment."}, {"timestamp": [1243.1, 1249.42], "text": " Now, this is super handy for different coding environments that you might be working in. So, let's just kind of do an example of why this is so handy here so I'm gonna"}, {"timestamp": [1249.42, 1258.44], "text": " do dear M edit dot well not my home directory here so make their quicken"}, {"timestamp": [1259.0, 1269.32], "text": " and the speaking cloud native theorem edit DRM edit dot, and this creates a DRM file, but there's"}, {"timestamp": [1269.32, 1270.32], "text": " nothing in there right now."}, {"timestamp": [1272.44, 1276.68], "text": " So the next tool I want to introduce you to is one that we're going to use to go"}, {"timestamp": [1276.68, 1280.2], "text": " ahead and populate the configuration inside of here, we're going to use"}, {"timestamp": [1280.2, 1282.6], "text": " a tool called gimme dash go."}, {"timestamp": [1282.64, 1284.24], "text": " So let's take a look at that one real quick."}, {"timestamp": [1282.72, 1285.3], "text": " use a tool called gimme-go. Let's take a look at that one real quick."}, {"timestamp": [1290.52, 1293.06], "text": " There's lots of ways to do this."}, {"timestamp": [1293.06, 1297.3], "text": " This is just the way that I've been using for this."}, {"timestamp": [1297.3, 1301.84], "text": " I like it because it's pretty frequently"}, {"timestamp": [1301.84, 1304.3], "text": " updated and pretty well-maintained because it's"}, {"timestamp": [1304.3, 1307.52], "text": " part of the solution stack at Travis CI."}, {"timestamp": [1307.52, 1309.94], "text": " And so I'm actually pretty convinced"}, {"timestamp": [1309.94, 1311.64], "text": " that it will be around for a while"}, {"timestamp": [1313.94, 1316.98], "text": " and that it's pretty reasonably tested, right?"}, {"timestamp": [1316.98, 1319.14], "text": " So GimmeGo is a bash script"}, {"timestamp": [1319.14, 1321.74], "text": " that sets the environment variables."}, {"timestamp": [1321.74, 1326.54], "text": " It will go and fetch a version of Go for you and set environment"}, {"timestamp": [1326.54, 1332.32], "text": " variables such that it will leverage that fetched version of Go entirely within the"}, {"timestamp": [1332.32, 1335.24], "text": " directory that you've created or inside of your system somewhere."}, {"timestamp": [1335.24, 1339.38], "text": " So if you're going to use Go in any kind of containerized environment, this is a really"}, {"timestamp": [1339.38, 1340.82], "text": " great tool."}, {"timestamp": [1340.82, 1342.54], "text": " But also even locally, right?"}, {"timestamp": [1342.54, 1351.86], "text": " We understand that clearly Go changes versions faster than many of the distribution package managers and stuff keep up with."}, {"timestamp": [1352.44, 1357.86], "text": " And so it can sometimes be difficult to like determine which one you want to use."}, {"timestamp": [1358.22, 1361.68], "text": " Like Python has something like this that's called like pipm or something like that."}, {"timestamp": [1361.8, 1366.0], "text": " Ruby has another one that's very similar right but basically a way"}, {"timestamp": [1366.0, 1371.28], "text": " of leveraging a particular version of git associating with that particular version of"}, {"timestamp": [1371.28, 1375.2], "text": " git with a particular directory and then making it so that that is now your go"}, {"timestamp": [1375.2, 1377.44], "text": " development environment in which you're going to do all of your work"}, {"timestamp": [1380.64, 1384.64], "text": " so in our case i already have gimme installed and if you want to go ahead and install it"}, {"timestamp": [1382.96, 1385.78], "text": " In our case, I already have GIMI installed. If you want to go ahead and install it."}, {"timestamp": [1411.68, 1432.82], "text": " So I'm going to go ahead and grab it from the AUR repo. I'm going to drop thatimme stable greater than dot mvrc."}, {"timestamp": [1435.64, 1439.32], "text": " And what this will do is it'll just pop all of those environment variables"}, {"timestamp": [1439.32, 1443.98], "text": " right into my environment that I'm here in."}, {"timestamp": [1444.08, 1448.68], "text": " So then I'm that I'm here so I'm gonna edit this there"}, {"timestamp": [1448.68, 1456.92], "text": " um and it dot these are environment variables that it set it unset goose and"}, {"timestamp": [1456.92, 1462.44], "text": " unset go arch and then it went ahead and set export go root and that's where the"}, {"timestamp": [1462.44, 1465.68], "text": " that's that's where the version of go that is stable currently"}, {"timestamp": [1465.68, 1471.2], "text": " has been put and then it added it to my path before everything else making sure that that"}, {"timestamp": [1471.2, 1478.4], "text": " version of go would be leveraged and then um gave me and then it exported a bunch of"}, {"timestamp": [1478.4, 1482.64], "text": " environment variables inside of this space right so let's take a look at that one"}, {"timestamp": [1485.84, 1492.0], "text": " let go"}, {"timestamp": [1494.32, 1521.36], "text": " um me and let's go 116 and so it's setting go root and setting go it's setting our path and this"}, {"timestamp": [1521.36, 1532.36], "text": " is basically just what it loaded in there right okay so next thing I want to do is I want to edit this and I'm gonna go ahead and set"}, {"timestamp": [1532.36, 1535.04], "text": " my go pass"}, {"timestamp": [1556.54, 1559.1], "text": " I'm going to set my go pass to PWD, which basically means that, oh, you know what? I probably want to actually make a go director here."}, {"timestamp": [1560.38, 1566.68], "text": " So, deramv edit dot a go."}, {"timestamp": [1567.66, 1568.0], "text": " All right."}, {"timestamp": [1568.98, 1569.62], "text": " There we go."}, {"timestamp": [1569.9, 1571.48], "text": " So, now we're all loaded up here, right?"}, {"timestamp": [1571.5, 1572.5], "text": " We got our go path."}, {"timestamp": [1572.56, 1573.34], "text": " We've got our go root."}, {"timestamp": [1573.44, 1575.16], "text": " We've got all of the other things that we need."}, {"timestamp": [1575.58, 1578.44], "text": " Let's go ahead and check something out here."}, {"timestamp": [1578.44, 1587.4], "text": " So, what we'll do is we'll do go get sigs.k8s.io slash kind."}, {"timestamp": [1589.02, 1591.9], "text": " By default, kind will"}, {"timestamp": [1591.9, 1597.88], "text": " actually grab the latest release,"}, {"timestamp": [1597.88, 1600.38], "text": " and it'll build it right here in our directory."}, {"timestamp": [1600.38, 1601.62], "text": " So let's check it out."}, {"timestamp": [1601.62, 1604.62], "text": " Going and getting all of the dependencies."}, {"timestamp": [1603.6, 1606.66], "text": " directory. So let's check it out. Go on and getting all of the dependencies."}, {"timestamp": [1610.32, 1612.22], "text": " And if we move into go bin, there's our kind."}, {"timestamp": [1616.44, 1616.48], "text": " So this is just as, as complex as it needs to be to build kind. It's pretty,"}, {"timestamp": [1618.96, 1619.46], "text": " pretty handy. All right. So now we've got our kind environment,"}, {"timestamp": [1620.76, 1621.22], "text": " or we've got our kind binary."}, {"timestamp": [1624.0, 1624.42], "text": " Let's make sure that that kind of binary is in our path."}, {"timestamp": [1625.0, 1639.0], "text": " So we'll do our nvrc again."}, {"timestamp": [1649.28, 1660.88], "text": " Go path. And what I'm doing here, and I'm just adding the go path binary directory,"}, {"timestamp": [1660.88, 1667.36], "text": " or bin directory, into before our regular path path and that way any bins that are in"}, {"timestamp": [1667.36, 1677.44], "text": " there are going to get loaded up right so let's go ahead and exit and if i do dirham allow and then"}, {"timestamp": [1677.44, 1687.56], "text": " if i do which kind we can see that that's the version of kind that we're using. Pretty darn cool. Next up, what we're going to do is we're going to check"}, {"timestamp": [1687.56, 1691.98], "text": " out the Kubernetes codebase and we're going to look at that commit."}, {"timestamp": [1691.98, 1697.6], "text": " We're probably going to use some GitHub CLI commands or we could not,"}, {"timestamp": [1697.6, 1700.84], "text": " but I think I want to show you the GitHub CLI commands because they"}, {"timestamp": [1700.84, 1710.8], "text": " really make your life a lot easier when working through this kind of stuff let me actually just make this a little bit bigger too because i think maybe that's a"}, {"timestamp": [1710.8, 1718.24], "text": " little too small okay that's better looks like we have a question i want to jump over here and see"}, {"timestamp": [1718.24, 1725.06], "text": " what the question is once in dirham and another and giveimmeMV. Yeah, I know."}, {"timestamp": [1725.18, 1726.6], "text": " It does seem like a duplicate."}, {"timestamp": [1726.86, 1735.04], "text": " So I wonder if there's like a catch in the fact that like maybe it's trying to determine the fact that it isn't an environment manager or maybe it doesn't know that or something."}, {"timestamp": [1735.16, 1736.98], "text": " It does seem kind of like a duplicate."}, {"timestamp": [1737.74, 1739.32], "text": " I'm not setting go root twice."}, {"timestamp": [1739.36, 1741.54], "text": " I'm setting go pass and go root."}, {"timestamp": [1743.02, 1748.32], "text": " And it's only setting go root the one time. So if I do echo go root and it's only setting go root with one of the one time so if i do echo go root"}, {"timestamp": [1750.4, 1753.44], "text": " setting it to that and if i look at the um"}, {"timestamp": [1755.6, 1758.64], "text": " i mean it is setting it sorry you're right it is sitting it twice but it's"}, {"timestamp": [1758.64, 1765.76], "text": " setting it to the same value right it's setting it um which is weird. I agree."}, {"timestamp": [1765.76, 1772.28], "text": " Because we are setting it here and then it is also setting, I guess it is like maybe"}, {"timestamp": [1772.28, 1774.44], "text": " that was meant to be commented out."}, {"timestamp": [1774.44, 1779.42], "text": " Because it is kind of catching both."}, {"timestamp": [1779.42, 1784.18], "text": " Or maybe this is actually because this is gimme env and we are not referencing gimme"}, {"timestamp": [1784.18, 1786.64], "text": " env anywhere"}, {"timestamp": [1790.24, 1795.28], "text": " this is just telling us where we got the environment variables yeah i think that's it it's only setting it once it's only setting go root here"}, {"timestamp": [1797.68, 1804.32], "text": " now if we had i don't know if we had like eval dot gimme i mean we had email eval that path then it"}, {"timestamp": [1804.32, 1805.68], "text": " would actually make it real, right?"}, {"timestamp": [1805.86, 1807.06], "text": " But we're not doing that."}, {"timestamp": [1807.24, 1809.54], "text": " We're actually kind of highlighting"}, {"timestamp": [1809.54, 1811.12], "text": " where that content came from."}, {"timestamp": [1816.68, 1817.54], "text": " All right."}, {"timestamp": [1821.16, 1822.82], "text": " So we got that set up."}, {"timestamp": [1823.56, 1827.68], "text": " Let's jump in a little further here and play with this stuff."}, {"timestamp": [1827.68, 1831.5], "text": " So we got a Go environment."}, {"timestamp": [1831.5, 1836.3], "text": " Now the next thing I do personally is I actually go ahead and check out"}, {"timestamp": [1836.3, 1842.1], "text": " with Go 111 mods off because I want it to be under my source tree."}, {"timestamp": [1842.1, 1844.94], "text": " I think that might just be the way that I do it."}, {"timestamp": [1844.94, 1845.0], "text": " I'm not sure that everybody does be the way that I do it."}, {"timestamp": [1845.0, 1846.88], "text": " I'm not sure that everybody does it that way."}, {"timestamp": [1846.88, 1848.58], "text": " But let me show you what that looks like."}, {"timestamp": [1853.5, 1854.76], "text": " Oogetk8s.io."}, {"timestamp": [1860.4, 1864.06], "text": " And when you're going to check out the Kubernetes source code,"}, {"timestamp": [1864.06, 1867.98], "text": " you have to use the k8s.io moniker. Like a lot of times, if you're going to check out the Kubernetes source code, you have to use the k8s.io moniker."}, {"timestamp": [1867.98, 1869.94], "text": " A lot of times if you're going to do something like this,"}, {"timestamp": [1869.94, 1877.3], "text": " you would normally do go get github.com slash username slash project."}, {"timestamp": [1877.3, 1880.96], "text": " Although you can do that with go get in Kubernetes,"}, {"timestamp": [1880.96, 1884.34], "text": " it messes it up because a lot of the paths inside of"}, {"timestamp": [1884.34, 1886.72], "text": " the code base require that"}, {"timestamp": [1886.72, 1894.96], "text": " uh that that they are importing from k8s.io kubernetes blah and so if you don't have that path"}, {"timestamp": [1895.84, 1901.68], "text": " if you don't have the checkout in that path then things get really weird and woogie and they don't"}, {"timestamp": [1901.68, 1905.28], "text": " work terribly well and so when you're going through"}, {"timestamp": [1905.28, 1910.24], "text": " this you definitely want to make sure that you check out the kubernetes code base with go get"}, {"timestamp": [1910.24, 1916.48], "text": " kh.io kubernetes or your environment will not work in the way that you expect it will be quite"}, {"timestamp": [1916.48, 1922.4], "text": " painful so we can see that this checked out and it's going to complain about no go files because"}, {"timestamp": [1922.4, 1926.9], "text": " this is an automatic build that would be kind of nuts can you imagine you do go get cover do this and"}, {"timestamp": [1926.9, 1930.86], "text": " it just builds the world that would be a lot of that would be a lot of work so"}, {"timestamp": [1930.86, 1934.76], "text": " that doesn't happen there it works out okay for kind right but like for"}, {"timestamp": [1934.76, 1940.52], "text": " kubernetes now so it's moved it into go search case to I owe that kubernetes so"}, {"timestamp": [1940.52, 1943.28], "text": " if we move into that"}, {"timestamp": [1949.64, 1950.28], "text": " So if we move into that, here's the source code for Kubernetes."}, {"timestamp": [1962.6, 1963.12], "text": " And if I do git remote-v, you can see that my current upstream is the HTTPS version of upstream in GitHub."}, {"timestamp": [1967.2, 1968.24], "text": " And now I want to add my fork to this right so i'm going to do gh"}, {"timestamp": [1970.88, 1975.36], "text": " for uh repo fork"}, {"timestamp": [1978.48, 1989.36], "text": " and it says i already have a fork do you want me to add that remote yes all right All right."}, {"timestamp": [1991.36, 1996.36], "text": " Now I'm sitting on my own fork and origin is upstream queue."}, {"timestamp": [1996.36, 1998.48], "text": " I can still check out tags,"}, {"timestamp": [1998.48, 2001.46], "text": " I can still check out the latest release, all of that stuff."}, {"timestamp": [2001.46, 2004.86], "text": " But right now I'm sitting on my fork of Kubernetes."}, {"timestamp": [2004.86, 2005.22], "text": " Now the first thing we're going to do in our test is we're going to see the break, all of that stuff but right now I'm sitting on my fork of kubernetes now the"}, {"timestamp": [2005.22, 2008.46], "text": " first thing we're gonna do in our test is we're gonna see the break we're gonna"}, {"timestamp": [2008.46, 2032.18], "text": " see the thing that we're gonna fix right so let's go ahead and do kind build node name, head, it's called image."}, {"timestamp": [2032.18, 2038.06], "text": " And kind will automatically detect what the source is, where your source is checked out,"}, {"timestamp": [2038.06, 2040.48], "text": " and then it will build based on what it sees here."}, {"timestamp": [2040.48, 2045.4], "text": " So I'm going to go ahead and build top of tree and hope it works otherwise"}, {"timestamp": [2045.4, 2047.8], "text": " I might have to back out and do actually you know what this is probably a bad"}, {"timestamp": [2047.8, 2069.28], "text": " idea let's do this let's do kind let's do get checkout be one currently the top is 122.0 beta 0."}, {"timestamp": [2069.28, 2071.58], "text": " So let's check out alpha 3."}, {"timestamp": [2071.58, 2087.0], "text": " And then we'll build it from here. Node image, image equals"}, {"timestamp": [2087.0, 2089.0], "text": "."}, {"timestamp": [2093.0, 2098.0], "text": " 0, alpha 3."}, {"timestamp": [2102.0, 2107.88], "text": " So then the kind project is going to go ahead and build based on my code on my on my source"}, {"timestamp": [2107.88, 2112.88], "text": " code it's going to go ahead and build this and include it as part of that build will"}, {"timestamp": [2112.88, 2116.3], "text": " be a number of different things."}, {"timestamp": [2116.3, 2117.94], "text": " You can't actually tell it where it is."}, {"timestamp": [2117.94, 2118.94], "text": " Yeah."}, {"timestamp": [2118.94, 2123.2], "text": " One of the questions was, can you tell kind to use where the source code is by any chance"}, {"timestamp": [2123.2, 2124.38], "text": " instead of using your grow path?"}, {"timestamp": [2124.38, 2126.24], "text": " And the answer is absolutely yes."}, {"timestamp": [2126.24, 2127.62], "text": " In fact, while that's building, I'm"}, {"timestamp": [2127.62, 2129.96], "text": " going to go ahead and bring up another window"}, {"timestamp": [2129.96, 2131.04], "text": " and show you that."}, {"timestamp": [2131.04, 2140.06], "text": " So if I do kind build node image help, right now, by default,"}, {"timestamp": [2140.06, 2141.6], "text": " it kind of auto detects it."}, {"timestamp": [2141.6, 2143.5], "text": " But if you know where it is, then you"}, {"timestamp": [2143.5, 2145.52], "text": " can just specify dash cube root"}, {"timestamp": [2145.52, 2173.08], "text": " and give it a path I'll wait for that guy to build a little bit my pleasure My pleasure."}, {"timestamp": [2175.24, 2177.52], "text": " While we're waiting for this to build, let's go back and look at that change that we,"}, {"timestamp": [2177.52, 2179.78], "text": " actually I did introduce one other command."}, {"timestamp": [2179.78, 2183.02], "text": " It was the GitHub CLI,"}, {"timestamp": [2183.02, 2185.5], "text": " and I wanted to talk to that guy real quick."}, {"timestamp": [2185.5, 2189.0], "text": " So that's on cli.github.com."}, {"timestamp": [2189.0, 2190.2], "text": " It's very handy."}, {"timestamp": [2190.2, 2192.84], "text": " You could actually do things like pull a particular pull"}, {"timestamp": [2192.84, 2194.44], "text": " request."}, {"timestamp": [2194.44, 2198.7], "text": " You can do all kinds of fun stuff like that."}, {"timestamp": [2198.7, 2202.2], "text": " So it's a pretty cool tool for this sort of stuff."}, {"timestamp": [2202.2, 2207.52], "text": " It follows a pretty well-desithub flow and so some of"}, {"timestamp": [2207.52, 2212.56], "text": " the stuff i've been playing with uh in my dev environment really it works into my flow pretty"}, {"timestamp": [2212.56, 2238.4], "text": " well while we're building things let's take a look at what's happening on the system"}, {"timestamp": [2244.0, 2248.5], "text": " so things are chugging along takes a minute to get everything built."}, {"timestamp": [2250.72, 2252.8], "text": " I know we're building a Docker image. Now, a lot of these steps that make this"}, {"timestamp": [2252.8, 2255.38], "text": " seem like it's going to take a really long time,"}, {"timestamp": [2255.38, 2258.32], "text": " will take longer the first time,"}, {"timestamp": [2258.32, 2260.3], "text": " and then those images will be cached."}, {"timestamp": [2260.3, 2261.86], "text": " So you don't have to actually go through"}, {"timestamp": [2261.86, 2264.6], "text": " that initial cost over and over again."}, {"timestamp": [2264.6, 2270.8], "text": " The subsequent build we do of kubernetes will be faster than than what we're seeing here"}, {"timestamp": [2280.08, 2283.6], "text": " this is my new laptop from from for my work and stuff it's actually"}, {"timestamp": [2283.18, 2283.26], "text": " This is my new laptop from my work and stuff."}, {"timestamp": [2284.94, 2285.42], "text": " It's actually pretty cool."}, {"timestamp": [2289.74, 2289.92], "text": " What it's doing, it's a T14S, so it's got an AMD laptop."}, {"timestamp": [2294.92, 2295.08], "text": " It's got an AMD chip in it, a Ryzen Pro, a Ryzen 7 Pro."}, {"timestamp": [2298.46, 2298.58], "text": " So that means it's got 16 cores, which is very exciting,"}, {"timestamp": [2300.46, 2302.36], "text": " and I found one with 32 gig of memory in it."}, {"timestamp": [2303.84, 2303.92], "text": " It's a pretty solid little ThinkPad."}, {"timestamp": [2305.46, 2310.56], "text": " I'm actually really happy with it. It's a pretty solid little ThinkPad. I'm actually really happy with it. The one that I had before this was a X1 Carbon."}, {"timestamp": [2310.56, 2315.6], "text": " And it kind of suffered a little bit sometimes in doing work."}, {"timestamp": [2315.6, 2317.88], "text": " Because I think most of my biggest problems"}, {"timestamp": [2317.88, 2319.98], "text": " were related to the video card."}, {"timestamp": [2319.98, 2323.38], "text": " The video card itself was actually kind of slow"}, {"timestamp": [2323.38, 2327.72], "text": " because it was still the Intel chip. And so even all wired up correctly and everything it still"}, {"timestamp": [2327.72, 2331.0], "text": " couldn't really cut something like the stream that we're doing here like it"}, {"timestamp": [2331.0, 2335.88], "text": " wouldn't be able it just wouldn't have enough resources to like to make the"}, {"timestamp": [2335.88, 2340.94], "text": " video stuff work with this with the AMD chip you get a Radeon built-in so it's"}, {"timestamp": [2340.94, 2345.24], "text": " very similar to like that Intel video card but it's using"}, {"timestamp": [2345.24, 2350.0], "text": " it's using radion stuff so it's actually pretty significantly faster"}, {"timestamp": [2350.0, 2354.16], "text": " comparatively so I've not had nearly the same problems with this as I have with"}, {"timestamp": [2354.16, 2364.18], "text": " the old one pretty exciting stuff I"}, {"timestamp": [2369.62, 2372.38], "text": " Pretty exciting stuff. I should have built before the show, taking us a while here."}, {"timestamp": [2372.38, 2377.56], "text": " This tool that I'm looking at here is called bPytop."}, {"timestamp": [2377.56, 2380.68], "text": " There it goes. Now we're getting somewhere."}, {"timestamp": [2382.0, 2385.5], "text": " What bPytop does is it gives me a really,"}, {"timestamp": [2385.5, 2387.42], "text": " I think, really beautiful view"}, {"timestamp": [2387.42, 2389.1], "text": " of what's happening on the system."}, {"timestamp": [2389.1, 2391.26], "text": " I can see the processes that are running and"}, {"timestamp": [2391.26, 2394.46], "text": " how much is being used by each process."}, {"timestamp": [2394.46, 2397.86], "text": " I can see a map of my CPU utilization."}, {"timestamp": [2397.86, 2402.32], "text": " I can see map of my memory graph."}, {"timestamp": [2402.32, 2408.46], "text": " I want to see a simpler, more more complex I can see disk IO and my"}, {"timestamp": [2408.46, 2420.52], "text": " networking for and my network upload and download so pretty cool stuff it is it's"}, {"timestamp": [2420.52, 2435.48], "text": " a It's a, yeah, I'm building basically the top of tree for kind right now, and then I'm going"}, {"timestamp": [2435.48, 2441.62], "text": " to pull a commit from upstream and then go ahead and build that commit and show that"}, {"timestamp": [2441.62, 2444.88], "text": " the change that that commit represents has been changed."}, {"timestamp": [2445.76, 2447.36], "text": " Yeah, I didn't put anything in the notes for what I was going to do today. and build that commit and show that the change that that commit represents has been changed um"}, {"timestamp": [2449.76, 2450.48], "text": " yeah i didn't put anything in the notes for what i was going to do today"}, {"timestamp": [2454.08, 2463.68], "text": " but i should probably put that in there that's a very good call out thank you very much good to see you russ it's 16 threads um let's see what it's like eight is it eight core 16 threads"}, {"timestamp": [2465.94, 2467.02], "text": " at proxy Let's see what it is. It's like eight. Is it eight cores, 16 threads? At proxy."}, {"timestamp": [2476.38, 2476.78], "text": " Yeah."}, {"timestamp": [2478.24, 2480.44], "text": " So eight cores and each with two threads."}, {"timestamp": [2480.84, 2481.68], "text": " So pretty fast."}, {"timestamp": [2482.7, 2483.34], "text": " I'm kind of digging it."}, {"timestamp": [2483.42, 2484.48], "text": " It's working out really well for me."}, {"timestamp": [2486.4, 2488.08], "text": " Got it really inexpensively on ebay too"}, {"timestamp": [2492.88, 2494.48], "text": " so we're almost done with our build here"}, {"timestamp": [2506.36, 2508.06], "text": " no problem at all i'm glad you're here."}, {"timestamp": [2510.48, 2513.0], "text": " There's all of our binaries that we're building,"}, {"timestamp": [2513.0, 2515.56], "text": " the API server, controller manager, scheduler, proxy."}, {"timestamp": [2515.56, 2517.26], "text": " This is the one we care about today,"}, {"timestamp": [2517.26, 2521.64], "text": " QBDM, and the reason we care about that one so specifically is we want to make sure"}, {"timestamp": [2521.64, 2526.56], "text": " that the change that we're making to QBadm shows up as a change in the system"}, {"timestamp": [2537.12, 2543.84], "text": " well you can see it is busy time now we're like 97 cpu and i can actually kind of tell video wise"}, {"timestamp": [2543.84, 2545.12], "text": " i'm still suffering a little bit"}, {"timestamp": [2545.12, 2554.22], "text": " I wonder how it looks all to you how it looks to you all I mean this is a fully saturated CPU"}, {"timestamp": [2554.22, 2572.86], "text": " at this point I hope I'm still I'm still I hope I'm still here it seems like I am am. We're almost done with the build."}, {"timestamp": [2572.86, 2575.94], "text": " A Pi 4. I mean, yes,"}, {"timestamp": [2575.94, 2579.82], "text": " I think that you can leverage KIND."}, {"timestamp": [2579.82, 2582.12], "text": " As long as you can put KIND there,"}, {"timestamp": [2582.12, 2585.76], "text": " then you can use KIND to build your source code."}, {"timestamp": [2585.76, 2588.14], "text": " I'm pretty sure,"}, {"timestamp": [2588.14, 2590.64], "text": " although maybe we should just go look,"}, {"timestamp": [2590.64, 2593.56], "text": " because I'm actually curious about that myself."}, {"timestamp": [2593.56, 2599.42], "text": " Kind arm 53."}, {"timestamp": [2599.42, 2600.24], "text": " What is that about?"}, {"timestamp": [2600.24, 2618.22], "text": " Kind.sigs.k.io. kind that's six that case do do do survey says closed why is it closed did"}, {"timestamp": [2618.22, 2649.14], "text": " it get worked so there are people who have used it to build kind Hey, there we go."}, {"timestamp": [2649.14, 2656.52], "text": " Kind of head should just work on arm 64, but we need verification."}, {"timestamp": [2656.52, 2661.0], "text": " We have a report of it working here on Apple Silicon."}, {"timestamp": [2661.0, 2662.4], "text": " Yeah."}, {"timestamp": [2662.4, 2665.6], "text": " So 11 one and 11 should just work."}, {"timestamp": [2667.22, 2668.0], "text": " So I would say give it a try."}, {"timestamp": [2668.8, 2669.84], "text": " Great question."}, {"timestamp": [2671.1, 2671.2], "text": " This is the question I'm responding to."}, {"timestamp": [2674.58, 2675.6], "text": " Would this work for Pi 4, or would you recommend cross-compiling?"}, {"timestamp": [2677.3, 2678.16], "text": " And I think it would work."}, {"timestamp": [2679.38, 2681.22], "text": " So pretty cool."}, {"timestamp": [2682.32, 2683.46], "text": " I've not tried it."}, {"timestamp": [2688.5, 2694.36], "text": " But I don't actually have a Pi to play with. But I think that with a lot of folks moving toward the Apple Silicon Macs and stuff,"}, {"timestamp": [2694.36, 2696.2], "text": " there are going to be more people playing with this stuff,"}, {"timestamp": [2696.2, 2715.12], "text": " and so I would expect that it would continue to work. yeah my pleasure"}, {"timestamp": [2735.6, 2752.92], "text": " build it looks like CPUs are beginning to cool We're going to make one more build like this with this change in it."}, {"timestamp": [2752.92, 2755.1], "text": " But first I want to evaluate the change,"}, {"timestamp": [2755.1, 2757.34], "text": " look at it, get it into our code base,"}, {"timestamp": [2757.34, 2796.08], "text": " and then we'll validate that the change is there. Thank you. All right."}, {"timestamp": [2807.84, 2835.68], "text": " There we go. So now if I do kind, create cluster, image equals, I guess I could have named it something easier to type."}, {"timestamp": [2835.68, 2840.14], "text": " What we've done here is we've basically just leveraged Kind as a build environment for"}, {"timestamp": [2840.14, 2843.46], "text": " everything where I'm not building anything by hand."}, {"timestamp": [2843.46, 2849.84], "text": " I'm actually just leveraging Kind to do the build itself and then i can go ahead and verify that the change is there"}, {"timestamp": [2849.84, 2856.08], "text": " or not as a reminder of the change that we're talking about here let's go ahead and bounce"}, {"timestamp": [2856.08, 2866.46], "text": " back here and look at this change this is the here we go so this is a change to cube ADM and it's updating the cube"}, {"timestamp": [2866.46, 2877.0], "text": " ADM help message to get rid of the alpha certs line so if I talk our exec in here"}, {"timestamp": [2881.88, 2898.2], "text": " I do cube ADM help."}, {"timestamp": [2898.2, 2900.28], "text": " Where is the bug specifically?"}, {"timestamp": [2900.28, 2901.28], "text": " QA."}, {"timestamp": [2901.28, 2902.28], "text": " Alpha help."}, {"timestamp": [2902.28, 2917.04], "text": " Okay. QADM. Alpha help."}, {"timestamp": [2919.14, 2919.3], "text": " Ah, that's where it is."}, {"timestamp": [2920.08, 2921.66], "text": " QADM."}, {"timestamp": [2935.24, 2935.4], "text": " Sure. I'm not catching it."}, {"timestamp": [2936.04, 2938.14], "text": " Where is the bug?"}, {"timestamp": [2940.76, 2942.1], "text": " Cube ADM alpha search generates CSR."}, {"timestamp": [2948.1, 2967.06], "text": " The following command, oh, generates CSR. So it's probably the generate CSR the following command Oh generate CSR so it's probably the generate CSR command so that's deep generate this are Found it. All right."}, {"timestamp": [2967.06, 2970.1], "text": " Here, we can tell it's not an alpha command."}, {"timestamp": [2970.1, 2974.72], "text": " It's kubedm certs generate CSR,"}, {"timestamp": [2974.72, 2978.56], "text": " and then the help output is the word alpha."}, {"timestamp": [2978.56, 2982.4], "text": " This is the thing that the person opened the issue to fix."}, {"timestamp": [2982.4, 2984.6], "text": " Now we're going to go ahead and check that code out,"}, {"timestamp": [2984.6, 2987.1], "text": " make sure it changes the thing that we want it to change,"}, {"timestamp": [2987.1, 2990.14], "text": " and then build again and show that it works."}, {"timestamp": [2990.14, 2992.6], "text": " And using this technique, you can actually"}, {"timestamp": [2992.6, 2994.52], "text": " test much more complicated things."}, {"timestamp": [2994.52, 2996.92], "text": " But it just seems like a pretty good way,"}, {"timestamp": [2996.92, 2999.02], "text": " a pretty good flow for testing things"}, {"timestamp": [2999.02, 3001.6], "text": " that are in your environment."}, {"timestamp": [3001.6, 3004.68], "text": " So let's go ahead and check this out."}, {"timestamp": [3004.68, 3008.56], "text": " The next thing we're going to do is we're going to do g h dr"}, {"timestamp": [3011.92, 3018.4], "text": " check out we're going to grab the pull request i don't remember the pull request number though"}, {"timestamp": [3020.0, 3024.16], "text": " so the pull request was oh it's already been merged just actually just got merged"}, {"timestamp": [3024.16, 3026.72], "text": " so the pull request was oh it's already been merged just actually just got merged"}, {"timestamp": [3034.4, 3041.2], "text": " 103 249 so while we were on this show this pr got merged that's the right one all right"}, {"timestamp": [3068.08, 3069.84], "text": " okay so now we're on the update qBDM help message, and we'll do git checkout b1220 alpha3, dash b one two zero"}, {"timestamp": [3075.84, 3078.16], "text": " alpha three we have a pretty name for it and then what i want to do is i want to merge from that branch that i had here the"}, {"timestamp": [3078.16, 3083.92], "text": " update key radium help message right so git diff"}, {"timestamp": [3088.66, 3093.88], "text": " So git diff that."}, {"timestamp": [3095.26, 3095.52], "text": " There's a bunch of changes there."}, {"timestamp": [3103.38, 3104.86], "text": " So git checkout log."}, {"timestamp": [3107.88, 3113.7], "text": " This is the commit in specific that I want to change, right? So if I do git show, this is the only commit in it here."}, {"timestamp": [3113.7, 3125.36], "text": " So now we're going to do it,"}, {"timestamp": [3131.12, 3139.24], "text": " cherry pick, and I commit message."}, {"timestamp": [3139.24, 3142.96], "text": " Now, what's interesting is what's happening is that I have"}, {"timestamp": [3142.96, 3146.88], "text": " all of these commits in this huge library of commits on my system."}, {"timestamp": [3147.68, 3158.34], "text": " Because I have checked out that pull request, I can now put the commit from that pull request anywhere in time, anywhere on any branch that is local in my environment."}, {"timestamp": [3158.34, 3165.18], "text": " So what I've done is I've gone ahead and pulled that commit and put it on top of the branch"}, {"timestamp": [3165.18, 3172.38], "text": " that we built our original kind node image on right so now if I do get log I"}, {"timestamp": [3172.38, 3177.52], "text": " can see here is the commit that was made right to correct the example of cube"}, {"timestamp": [3177.52, 3183.4], "text": " idiom help and this was the commit for the tag that defined it or this is"}, {"timestamp": [3183.4, 3187.36], "text": " basically where the tag was defined be1220 alpha 3 is sitting at"}, {"timestamp": [3187.36, 3194.64], "text": " this particular tag and so now i have enough to go ahead and build again and prove that my"}, {"timestamp": [3194.64, 3206.46], "text": " change shows right so if i do get show i can see the change."}, {"timestamp": [3206.62, 3207.12], "text": " There it is."}, {"timestamp": [3207.16, 3208.16], "text": " It's in my code base."}, {"timestamp": [3208.74, 3213.88], "text": " And so my next step would be to build again and then show the change that we showed before."}, {"timestamp": [3214.02, 3218.2], "text": " So I'll do kind build node image."}, {"timestamp": [3218.94, 3221.02], "text": " Image equals fixed."}, {"timestamp": [3221.86, 3229.88], "text": " Actually, let's go ahead and use the PR for that why not"}, {"timestamp": [3236.88, 3248.12], "text": " medium six I shouldn't take quite as long to build all of this."}, {"timestamp": [3248.12, 3251.62], "text": " Actually, I think I just added a branch name,"}, {"timestamp": [3251.62, 3255.06], "text": " so likely that reset the cache."}, {"timestamp": [3255.06, 3256.88], "text": " But if you didn't actually,"}, {"timestamp": [3256.88, 3258.36], "text": " actually no, I added a commit,"}, {"timestamp": [3258.36, 3259.88], "text": " so it's a new cache."}, {"timestamp": [3259.88, 3262.78], "text": " It has to rebuild from scratch,"}, {"timestamp": [3262.78, 3264.9], "text": " but it won't hopefully not take as long."}, {"timestamp": [3264.9, 3267.1], "text": " Well, there we go."}, {"timestamp": [3267.1, 3269.1], "text": " Sync and source is in,"}, {"timestamp": [3269.1, 3271.38], "text": " our build container is still there."}, {"timestamp": [3271.38, 3273.24], "text": " Running the build command."}, {"timestamp": [3273.24, 3280.96], "text": " Let's go ahead and look at things work again like we saw before."}, {"timestamp": [3280.96, 3283.48], "text": " Then there's one more thing I wanted to show you,"}, {"timestamp": [3283.48, 3284.76], "text": " which I think will also help,"}, {"timestamp": [3284.76, 3285.08], "text": " but it'll be just a second while we get this thing set up. And then there's one more thing I wanted to show you, which I think will also help, but"}, {"timestamp": [3285.08, 3322.1], "text": " it'll be just a second while we get this thing set up. The next thing I wanted to show you after this is all over is how to run tests inside"}, {"timestamp": [3322.1, 3326.44], "text": " of the same build environment, which are pretty cool."}, {"timestamp": [3326.44, 3329.7], "text": " If you're going to use Kind as a build environment,"}, {"timestamp": [3329.7, 3332.76], "text": " one of the questions that sometimes people have is,"}, {"timestamp": [3332.76, 3335.1], "text": " if I'm going to leverage that as a build environment,"}, {"timestamp": [3335.1, 3342.2], "text": " how do I run tests against the code that I'm working with at build time or before build time?"}, {"timestamp": [3342.2, 3344.68], "text": " Can I do unit tests and that sort of stuff?"}, {"timestamp": [3344.68, 3345.0], "text": " Where is the code checked out and like can I do unit tests and that sort of stuff?"}, {"timestamp": [3345.0, 3346.94], "text": " Like where is the code checked out"}, {"timestamp": [3346.94, 3348.96], "text": " and can I still do unit tests?"}, {"timestamp": [3348.96, 3351.56], "text": " And I'll show you a couple of different ways to do that."}, {"timestamp": [3355.6, 3382.72], "text": " But we're gonna go ahead already that this build"}, {"timestamp": [3382.72, 3384.76], "text": " is way faster than the other build was,"}, {"timestamp": [3384.76, 3386.82], "text": " because we already have our build container,"}, {"timestamp": [3386.82, 3391.52], "text": " and our build container is associated with"}, {"timestamp": [3391.52, 3396.86], "text": " a particular period of time for the Kubernetes code base."}, {"timestamp": [3396.86, 3398.92], "text": " As long as we're still within that same time,"}, {"timestamp": [3398.92, 3400.74], "text": " we don't have to build another build container,"}, {"timestamp": [3400.74, 3403.24], "text": " we can leverage that same build container that was already built."}, {"timestamp": [3403.24, 3407.12], "text": " With that particular version of Go, with those particular sets of tools,"}, {"timestamp": [3407.76, 3411.92], "text": " all of those things remain consistent between our two builds. So we didn't have to, like,"}, {"timestamp": [3411.92, 3415.04], "text": " generate a new build container that would create that stuff."}, {"timestamp": [3419.04, 3423.44], "text": " But we are building all the binaries with our change. And at the moment, we're building all"}, {"timestamp": [3423.44, 3427.32], "text": " of it, right? Because we're testing all of Kube with Kube ADM,"}, {"timestamp": [3427.54, 3430.44], "text": " with Kube Kettle, with the API server controller,"}, {"timestamp": [3430.56, 3432.34], "text": " manager, scheduler, all that stuff, right?"}, {"timestamp": [3432.82, 3434.12], "text": " And so because we're doing that,"}, {"timestamp": [3434.42, 3436.2], "text": " we're getting a pretty complete view"}, {"timestamp": [3436.2, 3438.58], "text": " of whether this change actually messed anything up"}, {"timestamp": [3438.58, 3441.4], "text": " for any other component within this distributed system"}, {"timestamp": [3441.4, 3442.8], "text": " or whether it's actually,"}, {"timestamp": [3443.4, 3445.16], "text": " or whether it's literally just a change"}, {"timestamp": [3445.16, 3449.64], "text": " in docs and we can look from the code that it is just a change in docs right we don't need to"}, {"timestamp": [3449.64, 3454.88], "text": " actually build all all of the world for this but as an example what i'm walking you through here"}, {"timestamp": [3454.88, 3459.66], "text": " is kind of showing you what it looks like to build all of the world for this and then use that new"}, {"timestamp": [3459.66, 3465.4], "text": " environment to prove that your change works so say you were making a change to like, I don't know,"}, {"timestamp": [3466.54, 3468.94], "text": " you're making a change to that rootless configuration"}, {"timestamp": [3468.94, 3470.0], "text": " that we talked about before."}, {"timestamp": [3470.4, 3472.46], "text": " And the way that you did it is you had to add"}, {"timestamp": [3472.46, 3475.46], "text": " a particular security context capability"}, {"timestamp": [3475.46, 3478.28], "text": " for, you know, sysnet bind or something"}, {"timestamp": [3478.28, 3480.56], "text": " inside of the API server."}, {"timestamp": [3481.66, 3484.48], "text": " How would you verify that the change you made"}, {"timestamp": [3484.48, 3487.8], "text": " to the manifest for the static pod manifest"}, {"timestamp": [3487.8, 3490.08], "text": " was correct?"}, {"timestamp": [3490.08, 3492.24], "text": " How could you verify that?"}, {"timestamp": [3492.24, 3495.04], "text": " And this is definitely one way to go about making"}, {"timestamp": [3495.04, 3496.68], "text": " that sort of a change."}, {"timestamp": [3496.68, 3498.6], "text": " Another example of a change like this was I"}, {"timestamp": [3498.6, 3500.9], "text": " remember there was a bug in IPVS,"}, {"timestamp": [3500.9, 3503.82], "text": " and somebody patched that bug, and they were showing,"}, {"timestamp": [3503.82, 3506.54], "text": " and I was working with and"}, {"timestamp": [3506.54, 3510.62], "text": " I was showing how to verify that so if you wanted to kind of dig more into like"}, {"timestamp": [3510.62, 3515.26], "text": " that use case I wrote it up as a blog"}, {"timestamp": [3520.74, 3524.72], "text": " as a blog."}, {"timestamp": [3527.0, 3531.28], "text": " And nope."}, {"timestamp": [3535.28, 3537.86], "text": " Using Kind to test a PR for Kubernetes. And so this was actually showing how"}, {"timestamp": [3537.86, 3541.88], "text": " to leverage DRM, GIMI, and this whole environment"}, {"timestamp": [3541.88, 3544.14], "text": " to go ahead and do the sorts of testing"}, {"timestamp": [3544.14, 3549.06], "text": " that we're doing here live inside of this environment and exactly why to change"}, {"timestamp": [3549.06, 3553.14], "text": " and how to check out the code how to check out the branch and how to verify"}, {"timestamp": [3553.14, 3557.34], "text": " that the thing works and this is all right here the same thing I'm actually"}, {"timestamp": [3557.34, 3567.82], "text": " covering in my doc is all right here and so I'm going to actually go ahead and put this into this document"}, {"timestamp": [3589.54, 3595.12], "text": " And that will describe what we've made, what we've done today. So this we're pretty close to done."}, {"timestamp": [3595.12, 3603.56], "text": " We're at the top of the hour."}, {"timestamp": [3603.56, 3605.48], "text": " So I'm going to shut it down here as soon as this build"}, {"timestamp": [3605.48, 3607.58], "text": " is done and we show that it works."}, {"timestamp": [3607.58, 3609.9], "text": " I'm going to go ahead and end the episode."}, {"timestamp": [3609.9, 3611.64], "text": " Thank you both for signing in."}, {"timestamp": [3611.64, 3613.26], "text": " I hope there are other folks out there."}, {"timestamp": [3613.26, 3615.5], "text": " If you're out there and want to say hello, say hello."}, {"timestamp": [3615.5, 3616.5], "text": " Give me a wave."}, {"timestamp": [3616.5, 3619.2], "text": " Good to see you all."}, {"timestamp": [3619.2, 3624.98], "text": " I look forward to doing this again in two weeks, and we'll do more tips like this and"}, {"timestamp": [3624.98, 3626.1], "text": " kind of explore different things"}, {"timestamp": [3626.1, 3676.82], "text": " like this going forward. QADM fix is my image name. All right."}, {"timestamp": [3676.82, 3692.16], "text": " Node image is built. Yeah, for me, I mean, like, if I'm doing any development for the control plane or any of"}, {"timestamp": [3692.16, 3695.52], "text": " that, do you mean, like, do you mean the code base itself?"}, {"timestamp": [3695.6, 3700.4], "text": " Like, if you were going to modify the controller manager or modify the API server, that kind"}, {"timestamp": [3700.4, 3700.76], "text": " of stuff?"}, {"timestamp": [3700.8, 3701.94], "text": " Or did you mean something else?"}, {"timestamp": [3702.34, 3703.34], "text": " I'm curious about your question."}, {"timestamp": [3703.28, 3706.08], "text": " that kind of stuff or did you mean something else i'm curious about your question"}, {"timestamp": [3711.12, 3716.24], "text": " i create cluster image equals"}, {"timestamp": [3716.88, 3728.0], "text": " bm Yeah. So the debug test cycle."}, {"timestamp": [3729.0, 3732.88], "text": " This is a pretty quick loop for building again and again,"}, {"timestamp": [3732.88, 3736.48], "text": " if you're making changes to code and you want to prove that it works."}, {"timestamp": [3736.48, 3741.2], "text": " Alternatively, what you could do is actually,"}, {"timestamp": [3742.76, 3748.24], "text": " I have seen examples of folks leveraging other tools."}, {"timestamp": [3748.24, 3750.84], "text": " And in fact, there's a great example of this in Cluster API"}, {"timestamp": [3750.84, 3755.32], "text": " of leveraging other tools to do kind of a faster break loop fix model"}, {"timestamp": [3755.32, 3756.54], "text": " for how this works."}, {"timestamp": [3757.18, 3759.78], "text": " But in this particular test, if you know what you're changing"}, {"timestamp": [3759.78, 3762.48], "text": " and you want to actually, you know, you've made it past your unit test"}, {"timestamp": [3762.48, 3764.64], "text": " and you're ready to actually like validate that your change works,"}, {"timestamp": [3766.7, 3768.16], "text": " this is one way to go. And because it's QBADM,"}, {"timestamp": [3768.16, 3770.12], "text": " you can actually modify quite a lot about this."}, {"timestamp": [3770.12, 3771.24], "text": " You could turn on debug,"}, {"timestamp": [3771.24, 3773.34], "text": " you could turn on lots of different stuff."}, {"timestamp": [3774.9, 3778.0], "text": " So let's Docker, let's jump in here."}, {"timestamp": [3782.22, 3810.86], "text": " QBADM fixed control plane, bash certs CSR help Henry at CSR and now we see there is no more alpha so the changed absolutely did make the"}, {"timestamp": [3810.86, 3818.32], "text": " change that he was expecting and it looks good"}, {"timestamp": [3829.7, 3831.3], "text": " That is our episode for today. But yeah, I mean, that's a good point."}, {"timestamp": [3831.3, 3834.24], "text": " Maybe what we should do is what I'll do next is I'll"}, {"timestamp": [3834.24, 3839.76], "text": " actually show how that might work if you were going to make a change to something like that."}, {"timestamp": [3839.76, 3841.92], "text": " But thank you both."}, {"timestamp": [3841.92, 3853.32], "text": " Have a wonderful time and I'll see you next time."}, {"timestamp": [3854.96, 3855.42], "text": " See you in two weeks."}, {"timestamp": [3856.68, null], "text": " I hope you all have a wonderful time."}], "text": " Hey everybody, good afternoon. This is Duffy Cooley coming at you with this week in cloud native episode three. I'm glad you're here and I'm really excited about this next episode. So. Let's dig into it and see what's happening this week. If you're here on the chat, go ahead and say hello. I'd love to. I'd love to, you know, see you here every week as we're going through this process. So I'd love to know that you're here. The only way I know that that's happening is if you're in the chat. So if you're here, check in. I'd love to see folks showing up here. All right. The next thing I have for you today is this page, which is kind of our weekly thing where we're going to keep, I'm keeping notes on stuff that is exciting that happens during the week or during the last two weeks in cloud native space. And if there's anything that you would like me to cover, you can always just go to hackmd.io slash at TWICN, this week in Cloud Native, and put in a note for me and I'll read it to you live on screen. That's my plan for every week. If you see anything that's interesting, you can either just shout out to me on Twitter, or you can put it in the HackMD notes and I will cover it every week and this episode for this week's update I wanted to talk about what's coming let's see here we have one of the changes that I saw on YouTube which I was pretty excited about was this one here where we have playlists and there are playlists for every show and so if you want if you missed your episode with Siam or with Maddie or Leo Leonardo or any of these other folks You can go ahead and just either subscribe directly to that playlist or you can go back and watch what watch the Episode that happened while you were away away but each of the channels seems to have their own playlist associated there and that's pretty exciting so there's new content every day of the week uh this week tim banks was hosting sydney miller uh one of the just incredibly awesome people in tech and this is talking about sydney's journey into tech and how she's helping uh others kind of along that same path uh sydney works at equinix metal and it was really a i think it's a pretty good episode that happened earlier today check that one out cloud native latinx with leonardo murillo all about the community we'll have best guests from various latin american countries showing challenges opportunities and value in building a community in Latin America come check it out CNCF face-off is kind of a game show hosted by Maddie and if you're interested in you know kind of participating in that it should be super fun and Matt Stratton will be hosting it if you want to be a part of it You can actually just follow this link and it will take you to a form where you can pick your team, what you want that team to be called, all that good stuff, and then participate in the show. And so I think that'll really be fun. Like I said, Siam's doing Search Magic, all about the different certified Kubernetes certifications. We have Spotlight Live with Dan certifications we have spotlight live with dan pop we have lgtm with rock code he just did one on prometheus was really fun kind of getting from my data commit on that 100 days with anais anise and um cloud native classroom with kat costgrove i think she just did uh, if I remember correctly. And then Fields tested with Kaslan. So definitely check those shows out. They're happening right here on Cloud Native TV. Please subscribe to this show, I mean, to this channel on Twitch. You should see a subscribe button down around there somewhere. Go ahead and click that button. Get notified whenever we're online. There'll always be something interesting happening. In the Kubernetes space, one of the exciting announcements is that this early bird pricing, which is about $650 off of the on-site pricing and $200 off the standard pricing, is ending July 4th. So if you want to get that pricing, get it done now. You can save a bunch of money. Either as a corporate or an individual, you can save, you know, not quite as much money, but you can definitely save a bunch of money. So definitely check that one out. So July 5th, the sale ends July 5th. So definitely want to make that happen one of the other commits I saw happen in the kubernetes community this week which I thought was pretty exciting to me anyway was the cube ADM now runs as not root and this is part of a cap but let's take a look at the commit it's kind of an exciting commit so this is actually the cap right here. It's a bunch of work by Vinay. What this represents is a change in the way that we operate the static pod manifests and other things run by QBDM in such a way that they are significantly more secure. They're running as not root. All of the capabilities have been dropped other than the ones that are necessary for that application to run. If you're interested in this work or you want to read through what's happened or what the changes are, definitely check these issues out. I was thinking about for our playtime, I would explore rootless kubedm, but I don't think I quite have the right setup for that today. I'm probably going to explore something else in that space, but maybe not that. But maybe on the next episode, if I have a little bit more time to set up, I might set that one up because I'm actually interested in seeing how that's going. It should be a really fun one. So rootless kubedm, that means your control plane, your scheduler, your kube proxy, all of those components running rootless and as a user that is not root. That way, if by some chance somebody were to exploit one of those control plane components inside of your cluster, they wouldn't be able to actually take over the cluster, which is actually pretty cool. Hey, we got people checking in. Let's see who these folks are. Yes. Some OMI. Hello. Good to see you. What was kind doing when running QBDM before, ah, in kinds project, actually in my, in my playtime, I'm going going to show that but the way that kind was doing it was um leveraging uh just regular cube adm inside of a root container so kind in itself under no circumstances is to be considered like secure right because like you're running privileged containers on your host that have that have significant privilege otherwise we wouldn't be able to extend containers and that sort of stuff. Now there is some change happening inside of the kind project that would enable rootless mode. In fact, I've seen one of the heroes of rootless, one of the heroes, no pun intended, of rootless mode in the project working on just exactly that. Akihiro has been working on implementing rootless kind. So that'll be'll be exciting. I imagine this work overlaps or at least relates, but I haven't looked at it too closely yet. Pretty exciting stuff. Later on, I'm going to actually show like pulling the commit that is interview and then showing how to build that commit and then showing how to run that commit in kind. We'll take a look at how it's working in just a minute. One of the podcasts this week was a Kubernetes podcast 152 with Craig Box talking about SRE for everyone else. If you haven't checked out the Kubernetes podcast, it's probably worth checking out. It's a pretty decent podcast. They've always got some really good stuff happening inside of that space. And then also the recent TGIK, TGIK 158 was hosted by Nadir and Jason DeTiberis, who are good friends of mine, who I worked with at CoreOS, or sorry, at Heptio. They did a whole episode on Cluster API with Tinkerbell. If you're interested in Tinkerbell or Cluster API or how you mash these words together, definitely check out that episode. It's TGIK 158. Now, one of the things I wanted to share with you is that a lot of the information that I get for the news every week, I get from here. I'd love to get more information from you all as well, but what I normally get my news from is things like Cube Weekly, which is a newsletter put together by my fellow ambassadors, and they gather things like headlines, what's happening inside of the CNCF programs that are coming this week. We got a great question by Emily Fox talking about the security tag working on a serverless security paper, which will be a really interesting one. We have some technical papers, handling auth and EKS clusters, running HAProxy Kubernetes ingress controller outside of your Kubernetes cluster. How to build a Helm plugin in minutes and avoiding Kubernetes cluster outages with synthetic monitoring. I haven't looked at that one yet. That looks pretty interesting. But there's a bunch of different really great articles, including this one, which I also thought about playing with. How to monitor Kubernetes costs with Lens IDE. If you haven't heard about the lens IDE It's another open source IDE for kubernetes And it's actually pretty cool So Justin reminding us all that if you're going to be at the participant at the contributors summit It or you're going to come to Los Angeles to be a part of kubecon And you want to go to Disneyland as part of that trip, you should definitely join all of us together going to Disneyland and we call it KubeLand. We did this back in San Diego before the pandemic and it was really a lot of fun. But definitely, if that's something that's interesting to you, check that out. It's got a form to add yourself and there's no discounts or anything but like it's a great way of like you know hanging out with folks in the community in a place that is totally unrelated to kubernetes and then we have the SS the editorial articles here's one that I pulled out which was a Craig Craig box talking to Steve McGee talking about s re for everyone else thought that was a really good one. Another article on CKA and CKAD certification. Git Ops for RabbitMQ with Alexis Richardson. I mean, that's a really interesting one. RabbitMQ and Git Ops. I'm surprised by that. I guess we'll see how that goes. It'll be kind of a fun one to play through. And then Alex Ellis wrote a book on Golang. And Alex is incredibly transparent about things that are happening. And so if you're curious about how that goes, like what he went through to write that book, and how that's actually working in the space or not, definitely check that out. I think it would be a good read if that's something you're interested in. All right. Upcoming Cloud Native Live, Improving the Kubernetes Experiencing, Eliminating Toil and Tribal Knowledge with Billy Kleek at DigitalOcean. And then an on-demand webinar, again, talking about Lens and that sort of stuff by Morantis. Pretty neat stuff. Kubernetes CVEs. I'm not sure that everybody knows about this group. But if you don't know about this group and this is a space that you're interested in, you should know about this group. This is just one of the many Kubernetes groups that are out there. This one is Kubernetes Security Announce. And every time there's a CVE or some other interesting thing that's being fixed inside of Kubernetes related to security, you're gonna see an announcement here that gives an overview of what it is, what the advisory is about. And typically there may be some discussion related to that particular issue inside of the mailing list as well. So if you want to be a part of this mailing list, all you got to do is click on that link, the security announce group, and click join group. and then you'll be able to you know you can kind of pick how often you get spammed it can be on every notification it can be a digest it's up to you how you do it but definitely a good one to watch out for if security inside of kubernetes is something that you're that's on your mind one of the other things from the community i saw is this CNCF end user community providing insights into Kubernetes cluster management with technology radar. And so this is a pretty good article talking about like how folks are managing their Kubernetes clusters and what tooling and stuff. And this is a pretty interesting one. It's one of the first things I've seen come out of the user group, the CNCF user group. So I think that's a pretty good one. So definitely check that out if you're interested. And then it's playtime. So today for playtime, my plan was to set up an environment from scratch and find an issue that has not yet been merged, something super simple, and then show how to build that commit and then test that commit according to what the issue describes, and work through that end-to- end right so that was that was my goal for today kind of help you get your environment set up work through like what it looks like to actually test a commit and show that the commit changes what it says is going to change and that was my goal and i figure we can do that in about 45 minutes but let's see what we can accomplish. The commit I picked actually is like I said, it was going for something really super simple. Not this one. That's not a super simple one. There we go. This is an open issue and it looks like this person had found a leftover word alpha in a Kubatium help command and went ahead and put in the fix basically to remove the word alpha from the Kubatium help command. What I want to show is how to actually get, first I want to work through the UI here a little bit so we can actually understand where this commit is in time or where other commits are in time. I want to show you that stuff. Then I'm going to show you how to set up an environment in which we can actually test that this commit changes what it expected to change. This is a super simple example, but I think it'll give you the tools to test a more complex example if you choose to do so yourself so first thing I wanted to show you was like this page here so if you if you have a commit that's been committed like this one here it's been merged right then what you can do is you can actually click on the commit link down here which is a commit hash and now you're looking at the actual commit that is represented inside of the code base and one of the questions that people frequently ask is where in time is this commit right is this commit i mean it's clearly been merged to master but is it also part of a branch or a tag or anything else like that and the reason i'm taking you to this page right if you look at the commit you can actually see what branches and tags it is associated with right so right as a moment it's on master and there are there's no branch but it is associated with the tag v122 dash beta 0 which mean I think is the top of tree right now we. We could go look, but if you're ever wondering whether a commit, if you've narrowed the problem that you have down to a single commit, and you want to see if that commit is part of a particular release or has made it or has been backported or any of those things, this is the way that you find that out, right? You can find the commit that you're looking at, click on the commit itself, and then look down here in this description, and it will tell you exactly where it is in time. So this has been committed to master. And because it's been committed to master, it's also been committed to this tag. So let's take another one. Let's see. Closed. Actually, you know what? It'd probably be easier to go with the actual commits right so let's take a look at this one so this commit is a fix to fix affinity node node port timeout and if we look at the actual commit we can see that it's actually just in master let's scroll down let's go like way down So here is another page that we've committed and we can see that this, oh man, I guess there's so many commits that happen like so frequently and so in such an automated way, but it's kind of hard to find one that is like, you know, historically relevant. Let's see if I could figure out a way to do this what oh i have an idea okay so if we go to kubernetes and we go to command committee m app actually let's go to computer we'll do blame two years ago here we go. This commit was committed on 2019, and we can see down here below that we see a different output. Instead of showing us just the top of tree branch or the top of tree tag, we can also see that this commit was part of every tag from v118 alpha 2 all the way to current. And if we click on between, we can see this commit resides in each of the tagged versions from 118 alpha 2 all the way to 122.0 Beta 0. This is a way of determining whether your commit, the one you're looking at, the one that has the source of all of your frustration, has actually made it into a release or not. Okay. That's what I wanted to show you on the GitHub UI. Next up, we're going to build this and we're going to test and see if it works. That'll involve setting up a build environment. We're going to leverage Kind for a lot of the build environment, and we're going to go ahead and build QBDM with this commit. I'm going to show you the before and after. Let's check this out. First thing I want to show you are two tools that I use a lot. The first tool I use a lot is a tool called DIRMV. What DIRMV does, let's go on back here real quick. Derev is a tool that lets you set environment variables. Derev. Oh,.NET, my bad. This is a tool that lets you set environment variables when you move into a directory. So, and you're not in the directory, the environment variables are empty. But when you move into it, all of the environment variables that you have specified inside of your.envrc are loaded into your environment. Now, this is super handy for different coding environments that you might be working in. So, let's just kind of do an example of why this is so handy here so I'm gonna do dear M edit dot well not my home directory here so make their quicken and the speaking cloud native theorem edit DRM edit dot, and this creates a DRM file, but there's nothing in there right now. So the next tool I want to introduce you to is one that we're going to use to go ahead and populate the configuration inside of here, we're going to use a tool called gimme dash go. So let's take a look at that one real quick. use a tool called gimme-go. Let's take a look at that one real quick. There's lots of ways to do this. This is just the way that I've been using for this. I like it because it's pretty frequently updated and pretty well-maintained because it's part of the solution stack at Travis CI. And so I'm actually pretty convinced that it will be around for a while and that it's pretty reasonably tested, right? So GimmeGo is a bash script that sets the environment variables. It will go and fetch a version of Go for you and set environment variables such that it will leverage that fetched version of Go entirely within the directory that you've created or inside of your system somewhere. So if you're going to use Go in any kind of containerized environment, this is a really great tool. But also even locally, right? We understand that clearly Go changes versions faster than many of the distribution package managers and stuff keep up with. And so it can sometimes be difficult to like determine which one you want to use. Like Python has something like this that's called like pipm or something like that. Ruby has another one that's very similar right but basically a way of leveraging a particular version of git associating with that particular version of git with a particular directory and then making it so that that is now your go development environment in which you're going to do all of your work so in our case i already have gimme installed and if you want to go ahead and install it In our case, I already have GIMI installed. If you want to go ahead and install it. So I'm going to go ahead and grab it from the AUR repo. I'm going to drop thatimme stable greater than dot mvrc. And what this will do is it'll just pop all of those environment variables right into my environment that I'm here in. So then I'm that I'm here so I'm gonna edit this there um and it dot these are environment variables that it set it unset goose and unset go arch and then it went ahead and set export go root and that's where the that's that's where the version of go that is stable currently has been put and then it added it to my path before everything else making sure that that version of go would be leveraged and then um gave me and then it exported a bunch of environment variables inside of this space right so let's take a look at that one let go um me and let's go 116 and so it's setting go root and setting go it's setting our path and this is basically just what it loaded in there right okay so next thing I want to do is I want to edit this and I'm gonna go ahead and set my go pass I'm going to set my go pass to PWD, which basically means that, oh, you know what? I probably want to actually make a go director here. So, deramv edit dot a go. All right. There we go. So, now we're all loaded up here, right? We got our go path. We've got our go root. We've got all of the other things that we need. Let's go ahead and check something out here. So, what we'll do is we'll do go get sigs.k8s.io slash kind. By default, kind will actually grab the latest release, and it'll build it right here in our directory. So let's check it out. Going and getting all of the dependencies. directory. So let's check it out. Go on and getting all of the dependencies. And if we move into go bin, there's our kind. So this is just as, as complex as it needs to be to build kind. It's pretty, pretty handy. All right. So now we've got our kind environment, or we've got our kind binary. Let's make sure that that kind of binary is in our path. So we'll do our nvrc again. Go path. And what I'm doing here, and I'm just adding the go path binary directory, or bin directory, into before our regular path path and that way any bins that are in there are going to get loaded up right so let's go ahead and exit and if i do dirham allow and then if i do which kind we can see that that's the version of kind that we're using. Pretty darn cool. Next up, what we're going to do is we're going to check out the Kubernetes codebase and we're going to look at that commit. We're probably going to use some GitHub CLI commands or we could not, but I think I want to show you the GitHub CLI commands because they really make your life a lot easier when working through this kind of stuff let me actually just make this a little bit bigger too because i think maybe that's a little too small okay that's better looks like we have a question i want to jump over here and see what the question is once in dirham and another and giveimmeMV. Yeah, I know. It does seem like a duplicate. So I wonder if there's like a catch in the fact that like maybe it's trying to determine the fact that it isn't an environment manager or maybe it doesn't know that or something. It does seem kind of like a duplicate. I'm not setting go root twice. I'm setting go pass and go root. And it's only setting go root the one time. So if I do echo go root and it's only setting go root with one of the one time so if i do echo go root setting it to that and if i look at the um i mean it is setting it sorry you're right it is sitting it twice but it's setting it to the same value right it's setting it um which is weird. I agree. Because we are setting it here and then it is also setting, I guess it is like maybe that was meant to be commented out. Because it is kind of catching both. Or maybe this is actually because this is gimme env and we are not referencing gimme env anywhere this is just telling us where we got the environment variables yeah i think that's it it's only setting it once it's only setting go root here now if we had i don't know if we had like eval dot gimme i mean we had email eval that path then it would actually make it real, right? But we're not doing that. We're actually kind of highlighting where that content came from. All right. So we got that set up. Let's jump in a little further here and play with this stuff. So we got a Go environment. Now the next thing I do personally is I actually go ahead and check out with Go 111 mods off because I want it to be under my source tree. I think that might just be the way that I do it. I'm not sure that everybody does be the way that I do it. I'm not sure that everybody does it that way. But let me show you what that looks like. Oogetk8s.io. And when you're going to check out the Kubernetes source code, you have to use the k8s.io moniker. Like a lot of times, if you're going to check out the Kubernetes source code, you have to use the k8s.io moniker. A lot of times if you're going to do something like this, you would normally do go get github.com slash username slash project. Although you can do that with go get in Kubernetes, it messes it up because a lot of the paths inside of the code base require that uh that that they are importing from k8s.io kubernetes blah and so if you don't have that path if you don't have the checkout in that path then things get really weird and woogie and they don't work terribly well and so when you're going through this you definitely want to make sure that you check out the kubernetes code base with go get kh.io kubernetes or your environment will not work in the way that you expect it will be quite painful so we can see that this checked out and it's going to complain about no go files because this is an automatic build that would be kind of nuts can you imagine you do go get cover do this and it just builds the world that would be a lot of that would be a lot of work so that doesn't happen there it works out okay for kind right but like for kubernetes now so it's moved it into go search case to I owe that kubernetes so if we move into that So if we move into that, here's the source code for Kubernetes. And if I do git remote-v, you can see that my current upstream is the HTTPS version of upstream in GitHub. And now I want to add my fork to this right so i'm going to do gh for uh repo fork and it says i already have a fork do you want me to add that remote yes all right All right. Now I'm sitting on my own fork and origin is upstream queue. I can still check out tags, I can still check out the latest release, all of that stuff. But right now I'm sitting on my fork of Kubernetes. Now the first thing we're going to do in our test is we're going to see the break, all of that stuff but right now I'm sitting on my fork of kubernetes now the first thing we're gonna do in our test is we're gonna see the break we're gonna see the thing that we're gonna fix right so let's go ahead and do kind build node name, head, it's called image. And kind will automatically detect what the source is, where your source is checked out, and then it will build based on what it sees here. So I'm going to go ahead and build top of tree and hope it works otherwise I might have to back out and do actually you know what this is probably a bad idea let's do this let's do kind let's do get checkout be one currently the top is 122.0 beta 0. So let's check out alpha 3. And then we'll build it from here. Node image, image equals. 0, alpha 3. So then the kind project is going to go ahead and build based on my code on my on my source code it's going to go ahead and build this and include it as part of that build will be a number of different things. You can't actually tell it where it is. Yeah. One of the questions was, can you tell kind to use where the source code is by any chance instead of using your grow path? And the answer is absolutely yes. In fact, while that's building, I'm going to go ahead and bring up another window and show you that. So if I do kind build node image help, right now, by default, it kind of auto detects it. But if you know where it is, then you can just specify dash cube root and give it a path I'll wait for that guy to build a little bit my pleasure My pleasure. While we're waiting for this to build, let's go back and look at that change that we, actually I did introduce one other command. It was the GitHub CLI, and I wanted to talk to that guy real quick. So that's on cli.github.com. It's very handy. You could actually do things like pull a particular pull request. You can do all kinds of fun stuff like that. So it's a pretty cool tool for this sort of stuff. It follows a pretty well-desithub flow and so some of the stuff i've been playing with uh in my dev environment really it works into my flow pretty well while we're building things let's take a look at what's happening on the system so things are chugging along takes a minute to get everything built. I know we're building a Docker image. Now, a lot of these steps that make this seem like it's going to take a really long time, will take longer the first time, and then those images will be cached. So you don't have to actually go through that initial cost over and over again. The subsequent build we do of kubernetes will be faster than than what we're seeing here this is my new laptop from from for my work and stuff it's actually This is my new laptop from my work and stuff. It's actually pretty cool. What it's doing, it's a T14S, so it's got an AMD laptop. It's got an AMD chip in it, a Ryzen Pro, a Ryzen 7 Pro. So that means it's got 16 cores, which is very exciting, and I found one with 32 gig of memory in it. It's a pretty solid little ThinkPad. I'm actually really happy with it. It's a pretty solid little ThinkPad. I'm actually really happy with it. The one that I had before this was a X1 Carbon. And it kind of suffered a little bit sometimes in doing work. Because I think most of my biggest problems were related to the video card. The video card itself was actually kind of slow because it was still the Intel chip. And so even all wired up correctly and everything it still couldn't really cut something like the stream that we're doing here like it wouldn't be able it just wouldn't have enough resources to like to make the video stuff work with this with the AMD chip you get a Radeon built-in so it's very similar to like that Intel video card but it's using it's using radion stuff so it's actually pretty significantly faster comparatively so I've not had nearly the same problems with this as I have with the old one pretty exciting stuff I Pretty exciting stuff. I should have built before the show, taking us a while here. This tool that I'm looking at here is called bPytop. There it goes. Now we're getting somewhere. What bPytop does is it gives me a really, I think, really beautiful view of what's happening on the system. I can see the processes that are running and how much is being used by each process. I can see a map of my CPU utilization. I can see map of my memory graph. I want to see a simpler, more more complex I can see disk IO and my networking for and my network upload and download so pretty cool stuff it is it's a It's a, yeah, I'm building basically the top of tree for kind right now, and then I'm going to pull a commit from upstream and then go ahead and build that commit and show that the change that that commit represents has been changed. Yeah, I didn't put anything in the notes for what I was going to do today. and build that commit and show that the change that that commit represents has been changed um yeah i didn't put anything in the notes for what i was going to do today but i should probably put that in there that's a very good call out thank you very much good to see you russ it's 16 threads um let's see what it's like eight is it eight core 16 threads at proxy Let's see what it is. It's like eight. Is it eight cores, 16 threads? At proxy. Yeah. So eight cores and each with two threads. So pretty fast. I'm kind of digging it. It's working out really well for me. Got it really inexpensively on ebay too so we're almost done with our build here no problem at all i'm glad you're here. There's all of our binaries that we're building, the API server, controller manager, scheduler, proxy. This is the one we care about today, QBDM, and the reason we care about that one so specifically is we want to make sure that the change that we're making to QBadm shows up as a change in the system well you can see it is busy time now we're like 97 cpu and i can actually kind of tell video wise i'm still suffering a little bit I wonder how it looks all to you how it looks to you all I mean this is a fully saturated CPU at this point I hope I'm still I'm still I hope I'm still here it seems like I am am. We're almost done with the build. A Pi 4. I mean, yes, I think that you can leverage KIND. As long as you can put KIND there, then you can use KIND to build your source code. I'm pretty sure, although maybe we should just go look, because I'm actually curious about that myself. Kind arm 53. What is that about? Kind.sigs.k.io. kind that's six that case do do do survey says closed why is it closed did it get worked so there are people who have used it to build kind Hey, there we go. Kind of head should just work on arm 64, but we need verification. We have a report of it working here on Apple Silicon. Yeah. So 11 one and 11 should just work. So I would say give it a try. Great question. This is the question I'm responding to. Would this work for Pi 4, or would you recommend cross-compiling? And I think it would work. So pretty cool. I've not tried it. But I don't actually have a Pi to play with. But I think that with a lot of folks moving toward the Apple Silicon Macs and stuff, there are going to be more people playing with this stuff, and so I would expect that it would continue to work. yeah my pleasure build it looks like CPUs are beginning to cool We're going to make one more build like this with this change in it. But first I want to evaluate the change, look at it, get it into our code base, and then we'll validate that the change is there. Thank you. All right. There we go. So now if I do kind, create cluster, image equals, I guess I could have named it something easier to type. What we've done here is we've basically just leveraged Kind as a build environment for everything where I'm not building anything by hand. I'm actually just leveraging Kind to do the build itself and then i can go ahead and verify that the change is there or not as a reminder of the change that we're talking about here let's go ahead and bounce back here and look at this change this is the here we go so this is a change to cube ADM and it's updating the cube ADM help message to get rid of the alpha certs line so if I talk our exec in here I do cube ADM help. Where is the bug specifically? QA. Alpha help. Okay. QADM. Alpha help. Ah, that's where it is. QADM. Sure. I'm not catching it. Where is the bug? Cube ADM alpha search generates CSR. The following command, oh, generates CSR. So it's probably the generate CSR the following command Oh generate CSR so it's probably the generate CSR command so that's deep generate this are Found it. All right. Here, we can tell it's not an alpha command. It's kubedm certs generate CSR, and then the help output is the word alpha. This is the thing that the person opened the issue to fix. Now we're going to go ahead and check that code out, make sure it changes the thing that we want it to change, and then build again and show that it works. And using this technique, you can actually test much more complicated things. But it just seems like a pretty good way, a pretty good flow for testing things that are in your environment. So let's go ahead and check this out. The next thing we're going to do is we're going to do g h dr check out we're going to grab the pull request i don't remember the pull request number though so the pull request was oh it's already been merged just actually just got merged so the pull request was oh it's already been merged just actually just got merged 103 249 so while we were on this show this pr got merged that's the right one all right okay so now we're on the update qBDM help message, and we'll do git checkout b1220 alpha3, dash b one two zero alpha three we have a pretty name for it and then what i want to do is i want to merge from that branch that i had here the update key radium help message right so git diff So git diff that. There's a bunch of changes there. So git checkout log. This is the commit in specific that I want to change, right? So if I do git show, this is the only commit in it here. So now we're going to do it, cherry pick, and I commit message. Now, what's interesting is what's happening is that I have all of these commits in this huge library of commits on my system. Because I have checked out that pull request, I can now put the commit from that pull request anywhere in time, anywhere on any branch that is local in my environment. So what I've done is I've gone ahead and pulled that commit and put it on top of the branch that we built our original kind node image on right so now if I do get log I can see here is the commit that was made right to correct the example of cube idiom help and this was the commit for the tag that defined it or this is basically where the tag was defined be1220 alpha 3 is sitting at this particular tag and so now i have enough to go ahead and build again and prove that my change shows right so if i do get show i can see the change. There it is. It's in my code base. And so my next step would be to build again and then show the change that we showed before. So I'll do kind build node image. Image equals fixed. Actually, let's go ahead and use the PR for that why not medium six I shouldn't take quite as long to build all of this. Actually, I think I just added a branch name, so likely that reset the cache. But if you didn't actually, actually no, I added a commit, so it's a new cache. It has to rebuild from scratch, but it won't hopefully not take as long. Well, there we go. Sync and source is in, our build container is still there. Running the build command. Let's go ahead and look at things work again like we saw before. Then there's one more thing I wanted to show you, which I think will also help, but it'll be just a second while we get this thing set up. And then there's one more thing I wanted to show you, which I think will also help, but it'll be just a second while we get this thing set up. The next thing I wanted to show you after this is all over is how to run tests inside of the same build environment, which are pretty cool. If you're going to use Kind as a build environment, one of the questions that sometimes people have is, if I'm going to leverage that as a build environment, how do I run tests against the code that I'm working with at build time or before build time? Can I do unit tests and that sort of stuff? Where is the code checked out and like can I do unit tests and that sort of stuff? Like where is the code checked out and can I still do unit tests? And I'll show you a couple of different ways to do that. But we're gonna go ahead already that this build is way faster than the other build was, because we already have our build container, and our build container is associated with a particular period of time for the Kubernetes code base. As long as we're still within that same time, we don't have to build another build container, we can leverage that same build container that was already built. With that particular version of Go, with those particular sets of tools, all of those things remain consistent between our two builds. So we didn't have to, like, generate a new build container that would create that stuff. But we are building all the binaries with our change. And at the moment, we're building all of it, right? Because we're testing all of Kube with Kube ADM, with Kube Kettle, with the API server controller, manager, scheduler, all that stuff, right? And so because we're doing that, we're getting a pretty complete view of whether this change actually messed anything up for any other component within this distributed system or whether it's actually, or whether it's literally just a change in docs and we can look from the code that it is just a change in docs right we don't need to actually build all all of the world for this but as an example what i'm walking you through here is kind of showing you what it looks like to build all of the world for this and then use that new environment to prove that your change works so say you were making a change to like, I don't know, you're making a change to that rootless configuration that we talked about before. And the way that you did it is you had to add a particular security context capability for, you know, sysnet bind or something inside of the API server. How would you verify that the change you made to the manifest for the static pod manifest was correct? How could you verify that? And this is definitely one way to go about making that sort of a change. Another example of a change like this was I remember there was a bug in IPVS, and somebody patched that bug, and they were showing, and I was working with and I was showing how to verify that so if you wanted to kind of dig more into like that use case I wrote it up as a blog as a blog. And nope. Using Kind to test a PR for Kubernetes. And so this was actually showing how to leverage DRM, GIMI, and this whole environment to go ahead and do the sorts of testing that we're doing here live inside of this environment and exactly why to change and how to check out the code how to check out the branch and how to verify that the thing works and this is all right here the same thing I'm actually covering in my doc is all right here and so I'm going to actually go ahead and put this into this document And that will describe what we've made, what we've done today. So this we're pretty close to done. We're at the top of the hour. So I'm going to shut it down here as soon as this build is done and we show that it works. I'm going to go ahead and end the episode. Thank you both for signing in. I hope there are other folks out there. If you're out there and want to say hello, say hello. Give me a wave. Good to see you all. I look forward to doing this again in two weeks, and we'll do more tips like this and kind of explore different things like this going forward. QADM fix is my image name. All right. Node image is built. Yeah, for me, I mean, like, if I'm doing any development for the control plane or any of that, do you mean, like, do you mean the code base itself? Like, if you were going to modify the controller manager or modify the API server, that kind of stuff? Or did you mean something else? I'm curious about your question. that kind of stuff or did you mean something else i'm curious about your question i create cluster image equals bm Yeah. So the debug test cycle. This is a pretty quick loop for building again and again, if you're making changes to code and you want to prove that it works. Alternatively, what you could do is actually, I have seen examples of folks leveraging other tools. And in fact, there's a great example of this in Cluster API of leveraging other tools to do kind of a faster break loop fix model for how this works. But in this particular test, if you know what you're changing and you want to actually, you know, you've made it past your unit test and you're ready to actually like validate that your change works, this is one way to go. And because it's QBADM, you can actually modify quite a lot about this. You could turn on debug, you could turn on lots of different stuff. So let's Docker, let's jump in here. QBADM fixed control plane, bash certs CSR help Henry at CSR and now we see there is no more alpha so the changed absolutely did make the change that he was expecting and it looks good That is our episode for today. But yeah, I mean, that's a good point. Maybe what we should do is what I'll do next is I'll actually show how that might work if you were going to make a change to something like that. But thank you both. Have a wonderful time and I'll see you next time. See you in two weeks. I hope you all have a wonderful time."}